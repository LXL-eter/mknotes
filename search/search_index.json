{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Welcome to Notes c c\u8bd5\u9898 c++ python algorithm terminal git markdown LaTex \u7f51\u7edc\u57fa\u7840\u77e5\u8bc6","title":"Home"},{"location":"#welcome-to-notes","text":"c c\u8bd5\u9898 c++ python algorithm terminal git markdown LaTex \u7f51\u7edc\u57fa\u7840\u77e5\u8bc6","title":"Welcome to Notes"},{"location":"LaTex/","text":".tex \u5f3a\u8c03\u5185\u5bb9than\u6837\u5f0f + \u547d\u4ee4(\u63a7\u5236\u5e8f\u5217):\u4ee5\\\u5f00\u5934 \u53ef\u7528{}\u9650\u5b9a\u4f5c\u7528\u57df,\u5fc5\u9700\u53c2\u6570\u7528{},\u53ef\u9009\u53c2\u6570\u7528[] %\u6ce8\u91ca \u8fde\u7eed\u591a\u7a7a\u683c\u4e3a1\u7a7a\u683c \\documentclass{article} %\u6587\u6863\u7c7b %\u5bfc\u8a00\u533a:(preamble):\u52a0\u8f7d\u5b8f\u5305\u3001\u5b9a\u4e49\u547d\u4ee4\u3001\u8bbe\u7f6e\u6587\u6863\u683c\u5f0f\u7b49 \\begin{document} %\u6587\u6863\u5f00\u59cb %\u6b63\u6587\u533a(body):\u6b63\u6587\u5185\u5bb9 \\input{\u6587\u4ef6\u540d} %\u53ef\u5bfc\u5165\u5176\u5b83\u6587\u4ef6 \\end{document} %\u6587\u6863\u7ec8\u6b62 \u6587\u6863\u5f00\u5934\u5fc5\u5305\u542b\\documentclass + \u6587\u6863\u7c7b(\u652f\u6301\u4e2d\u6587\u7248):article(ctexart) report(ctexrep) book(ctexbook) beamer(ctexbeamer)\u7b49 \u53ef\u9009\u53c2\u6570:\\documentclass[12pt(\u5b57\u53f7),a4paper(\u7eb8\u53f7),twoside(\u6253\u5370)]{} + \u5b8f\u5305(\u7b2c\u4e09\u65b9\u5e93):\\usepackage{amsmath}\u6570\u5b66 \u200d \u200d \u200d \\usepackage[final]{minted}\u4ee3\u7801\u9ad8\u4eae + \u5bfc\u8a00\u533a:\\title{}\u6807\u9898 \u200d \u200d \u200d \\author{}\u4f5c\u8005 \u200d \u200d \u200d \\date{}\u65e5\u671f,\u9ed8\u8ba4\u4e3a\\today \u6b63\u6587\\maketitle\u751f\u6210\u6807\u9898\u9875 + \u73af\u5883(\u63a7\u5236\u683c\u5f0f):\u53ef\u7528label{}\u6807\u8bb0(\u5199\u6210\u4f5c\u7528\u57df:\u5bf9\u8c61) + \u65e0\u5e8f\u5217\u8868 \\begin{itemize} \\item 666 \\item 6666 end{itemize} + enumerate:\u6709\u5e8f\u5217\u8868 \u200d \u200d \u200d description:\u63cf\u8ff0\u5217\u8868 \\item[\u5bf9\u8c61] \u63cf\u8ff0 + center:\u5c45\u4e2d \u200d \u200d \u200d flushleft:\u5de6\u5bf9\u9f50\u200d \u200d \u200d flushright:\u53f3\u5bf9\u9f50 \\centering\u540e\u5c45\u4e2d \u200d \u200d \u200d \\raggedright\u540e\u5de6\u5bf9\u9f50 \u200d \u200d \u200d \\raggedleft\u540e\u53f3\u5bf9\u9f50 + tabular:\u8868\u683c \\begin{tabular}{l/c/r:\u5de6/\u4e2d/\u53f3\u5bf9\u9f50} &\u5206\u9694\u5217 \u200d \u200d \u200d \\\u6362\u884c \u200d \u200d \u200d \\hline\u753b\u6a2a\u7ebf + \u6bb5\u843d:\u7a7a\u884c\u6216\\par\u5206\u6bb5,\u6362\u884c\u4e3a\u7a7a\u683c,\u5ffd\u7565\u884c\u9996\u7a7a\u683c \\\u6216\\newline\u5206\u884c \\newpage\u5206\u9875 \\verb\u5b57\u7b26\u5185\u5bb9\u5b57\u7b26(\u539f\u6837\u5448\u73b0) \\verb*\u663e\u793a\u7a7a\u683c verbatim\u73af\u5883\u00b7listing\u5b8f\u5305\u4ee3\u7801\u9ad8\u4eae + \u6539\u5b57\u5f62:{\\bfseries \u4f5c\u7528\u57df}\u4f5c\u7528\u57df\u6240\u6709\u5185\u5bb9\u751f\u6548 \u200d \u200d \u200d \\textbf{\u53c2\u6570} \u53c2\u6570\u5185\u5bb9\u751f\u6548 \\textbf{}\u7c97 \\textsf{}\u7ec6 \\texttt{}\u8f83\u5927 \\textsc{}\u82b1\u5f0f texttit{}\u4e2d\u5f0f\u659c \\textsl{}\u82f1\u5f0f\u659c + \u6539\u5927\u5c0f: {\\tiny } {\\scriptsize } {\\footnotesize } {\\small } {\\normalsize } {\\large } {\\Large } {\\LARGE } {\\huge } {\\Huge } + \\\u8f6c\u4e49 \u200d \u200d \u200d \\~{} \\^{}\u9632\u6b62\u5c06\u540e\u9762\u5185\u5bb9\u4f5c\u4e3a\u53c2\u6570 \u5f15\u53f7\u5747\u7f16\u8bd1\u4e3a\u4e2d\u5f0f \u200d \u200d \u200d \u4e2d\u95f4\u52a0{}\u9632\u6b62\u897f\u6587\u8fde\u5b57 + -\u8fde\u5b57\u7b26 --\u77ed\u7834\u6298 ---\u957f\u7834\u6298 + \u957f\u5ea6\u5355\u4f4d:em ex cm mm pt in \u53ef\u8d1f + \u884c\u8ddd: {\\linespread{}\\selectfont \u5185\u5bb9} + \u6c34\u5e73\u95f4\u8ddd:\\hspace{}(\u53ef\u4e3afill,\u5728\u5de6\u53f3\u95f4\u586b\u7a7a\u683c) \\quad\u4e3a1em \\qquad\u4e3a2em + \u5782\u76f4\u95f4\u8ddd:\\vspace{} \\[]\u6362\u884c+\u5782\u76f4\u95f4\u8ddd + \u7ae0\u8282:\\part{} \\chapter{}\u4ec5\u7528\u4e8ebook\u3001report \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d \\section{} \\subsection{} \\subsubsection{} \u81ea\u52a8\u7f16\u53f7 \u200d \u200d \u200d \\tableofcontents\u751f\u6210\u76ee\u5f55 \\appendix\u540e\u4e3a\u9644\u5f55 + \u63d2\u56fe:\u7528graphicx\u5b8f\u5305 \\inludegraphics[\u5bbd\u9ad8\u9009\u9879]{\u8def\u5f84\u6216\u540d} \u653efigure\u73af\u5883\u91cc,\u4e3a\u6d6e\u52a8\u4f53 + \u4ea4\u53c9\u5f15\u7528:\u73af\u5883\u91cc\\label{\u6807\u8bb0},\u518d\u7528 \u56fe\\ref{\u6807\u8bb0}\u662f...\u3001\\pageref{\u6807\u8bb0}\u9875\u662f...\u3001\u5f0f\\eqref{\u6807\u8bb0}\u662f... + \u9875\u5927\u5c0f\u3001\u9875\u8fb9\u8ddd:\u7528geometry\u5b8f\u5305 \\geometry{paper=a5paper}\u3001{paperwidth=...,paperheight=...}\u3001{margin=...}\u3001{left=...,right=...,top=...,bottom=...}\u3001{hmargin=...,vmargin=...} + \u6a21\u7248:\u9884\u8bbe\u597d\u7684\u6587\u6863\u7c7b \u653e\u5230\u540c\u76ee\u5f55\u7528 \u6570\u5b66\u516c\u5f0f \u6570\u5b66\u6a21\u5f0f\u4e0b\u7528 \u7528amsmath\u5b8f\u5305 \u6240\u6709\u5b57\u6bcd\u89c6\u4e3a\u53d8\u91cf \u884c\u5185:\\$...\\$ \u6216 \\(..\\) \u884c\u95f4:\u5355\u884c\\[...\\] equation\u73af\u5883 \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u591a\u884calign\u3001gather\u73af\u5883 \u4e0d\u80fd\u7a7a\u884c\u5206\u884c \\text{}\u6b63\u5e38\u6587\u672c \u57fa\u672c()[]{} \u4e0a\u6807^ \u4e0b\u6807_ \u6c42\u548c: \\sum_{\u4e0b\u6807}^{\u4e0a\u6807} \u5206\u6570: \\frac{\u5206\u5b50}{\u5206\u6bcd} \u6781\u9650: \\lim_{\u53d8\u91cf\u540d\\to \u6781\u9650\u70b9} \u8c03\u8ddd:\\, \u200d \u200d \u200d \\: \u200d \u200d \u200d \\! \u200d \u200d \u200d \\quad \u200d \u200d \u200d \\qquad \\sin \\cos \\cos^2 \\log \\max \\infty\u4e3a\u65e0\u7a77\u7b26\u53f7 &\u5bf9\u9f50\u70b9 \\alpha \\beta \\theta \\Gamma \\Delta \\xi \\sqrt[n]{x} \\dots ... \u200d \u200d \u200d \\vdots \u4e09\u7ad6\u70b9 \u200d \u200d \u200d \\ddots\u4e09\u659c\u70b9 \\leq <= \u200d \u200d \u200d \\neq \u4e0d\u7b49\u4e8e \u200d \u200d \u200d \\in \u5143\u7d20\u5c5e\u4e8e \u200d \u200d \u200d \\subset \u5b50\u96c6 \u77e9\u9635pmatrix\u73af\u5883 \u884c\u5217\u5f0fvmatrix\u73af\u5883 \u7528\u6570\u5b57\u548c& \\langle\u4e3a< \u200d \u200d \u200d \\rangle\u4e3a> \u200d \u200d \u200d \\vert\u4e3a| + \u4e0e\u7b26\u53f7\u8fde\u7528:\u81ea\u52a8\u8c03\u8282\u5927\u5c0f \\left \\right \u200d \u200d \u200d \u624b\u52a8:\\big \\Big \\bigg \\Bigg + \u5b57:\\mathrm{} \u6b63\u5f0f \u200d \u200d \u200d \\mathit{} \u659c \u200d \u200d \u200d \\mathbf{} \u7c97 \u200d \u200d \u200d \\boldsymbol{} \u659c\u7c97 \u200d \u200d \u200d \\mathsf{} \u5706\u6da6 \u200d \u200d \u200d \\mathtt{} \u7ec6\u5706\u6da6","title":"LaTex"},{"location":"LaTex/#_1","text":"\u6570\u5b66\u6a21\u5f0f\u4e0b\u7528 \u7528amsmath\u5b8f\u5305 \u6240\u6709\u5b57\u6bcd\u89c6\u4e3a\u53d8\u91cf \u884c\u5185:\\$...\\$ \u6216 \\(..\\) \u884c\u95f4:\u5355\u884c\\[...\\] equation\u73af\u5883 \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u591a\u884calign\u3001gather\u73af\u5883 \u4e0d\u80fd\u7a7a\u884c\u5206\u884c \\text{}\u6b63\u5e38\u6587\u672c \u57fa\u672c()[]{} \u4e0a\u6807^ \u4e0b\u6807_ \u6c42\u548c: \\sum_{\u4e0b\u6807}^{\u4e0a\u6807} \u5206\u6570: \\frac{\u5206\u5b50}{\u5206\u6bcd} \u6781\u9650: \\lim_{\u53d8\u91cf\u540d\\to \u6781\u9650\u70b9} \u8c03\u8ddd:\\, \u200d \u200d \u200d \\: \u200d \u200d \u200d \\! \u200d \u200d \u200d \\quad \u200d \u200d \u200d \\qquad \\sin \\cos \\cos^2 \\log \\max \\infty\u4e3a\u65e0\u7a77\u7b26\u53f7 &\u5bf9\u9f50\u70b9 \\alpha \\beta \\theta \\Gamma \\Delta \\xi \\sqrt[n]{x} \\dots ... \u200d \u200d \u200d \\vdots \u4e09\u7ad6\u70b9 \u200d \u200d \u200d \\ddots\u4e09\u659c\u70b9 \\leq <= \u200d \u200d \u200d \\neq \u4e0d\u7b49\u4e8e \u200d \u200d \u200d \\in \u5143\u7d20\u5c5e\u4e8e \u200d \u200d \u200d \\subset \u5b50\u96c6 \u77e9\u9635pmatrix\u73af\u5883 \u884c\u5217\u5f0fvmatrix\u73af\u5883 \u7528\u6570\u5b57\u548c& \\langle\u4e3a< \u200d \u200d \u200d \\rangle\u4e3a> \u200d \u200d \u200d \\vert\u4e3a| + \u4e0e\u7b26\u53f7\u8fde\u7528:\u81ea\u52a8\u8c03\u8282\u5927\u5c0f \\left \\right \u200d \u200d \u200d \u624b\u52a8:\\big \\Big \\bigg \\Bigg + \u5b57:\\mathrm{} \u6b63\u5f0f \u200d \u200d \u200d \\mathit{} \u659c \u200d \u200d \u200d \\mathbf{} \u7c97 \u200d \u200d \u200d \\boldsymbol{} \u659c\u7c97 \u200d \u200d \u200d \\mathsf{} \u5706\u6da6 \u200d \u200d \u200d \\mathtt{} \u7ec6\u5706\u6da6","title":"\u6570\u5b66\u516c\u5f0f"},{"location":"algorithm/","text":"\u9009\u62e9 i=0 <n-1;j=i+1 <n \u63d2\u5165 i=1 <n{t=a[i];move=i-1; while(move>=0&&t<a[move])a[move+1]=a[move],move--;a[move+1]=t;} \u5192\u6ce1 i=1 <n;j=0 <n-i a[j]\u4e0ea[j+1] \u5927\u7684\u6362\u53bb\u540e\u9762 \u4e8c\u5206 left(0) right(n-1) mid while(left<=right){ left=mid+1/right=mid-1}","title":"Algorithm"},{"location":"algorithm/#_1","text":"i=0 <n-1;j=i+1 <n","title":"\u9009\u62e9"},{"location":"algorithm/#_2","text":"i=1 <n{t=a[i];move=i-1; while(move>=0&&t<a[move])a[move+1]=a[move],move--;a[move+1]=t;}","title":"\u63d2\u5165"},{"location":"algorithm/#_3","text":"i=1 <n;j=0 <n-i a[j]\u4e0ea[j+1] \u5927\u7684\u6362\u53bb\u540e\u9762","title":"\u5192\u6ce1"},{"location":"algorithm/#_4","text":"left(0) right(n-1) mid while(left<=right){ left=mid+1/right=mid-1}","title":"\u4e8c\u5206"},{"location":"c%2B%2B/","text":".cpp g++ \u6bd4c\u7b2c\u4e00\u7ea7\u591a::(\u4f5c\u7528\u57df::\u6210\u5458) \u200d \u200d \u200d \u200d \u200d \u200d \u540e\u7f6e++ -- \u7b2c\u4e09\u7ea7\u4e3a-> (\u5728\u6307\u9488\u4e0a\u901a\u8fc7\u6307\u5411\u6210\u5458\u7684\u6307\u9488\u8bbf\u95ee\u6210\u5458) \u200d \u200d \u200d \u200d \u200d \u200d .*(\u5728\u5bf9\u8c61\u4e0a\u901a\u8fc7\u6307\u5411\u6210\u5458\u7684\u6307\u9488\u8bbf\u95ee\u6210\u5458) \u200d #inlude<iostream> (\u547d\u540d\u7a7a\u95f4) using namespace std; \u6216 using std::cin; \u6216\u76f4\u63a5\u7528 std::cin cin>>\u540d (\u53ef\u8fde\u7528)\u8df3\u8fc7\u7a7a\u767d\u5148\u5bfc,\u56de\u8f66\u3001\u7a7a\u683c\u3001tab\u7ed3\u675f,\u6b8b\u7559\u5728\u7f13\u51b2\u533a cin.get() \u5355\u4e2a\u5b57\u7b26 cout<<\u540d (\u53ef\u8fde\u7528)endl\u6e05\u7a7a\u7f13\u51b2\u5e76\u6362\u884c \u200d \u53ef\u591a\u6b21\u58f0\u660e using x=y; x\u4e3a\u522b\u540d (\u4f20\u6307\u9488\u6bd4\u4f20\u6574\u4f53\u5f00\u9500\u5c0f,\u4f46\u8981\u5199&x-&y\u4e4b\u7c7b\u7684,\u6bd4\u8f83\u5947\u602a,\u6240\u4ee5\u7528\u5f15\u7528\u673a\u5236) + \u5f15\u7528(\u8981\u521d\u59cb\u5316):\u5df2\u5b58\u5728\u5bf9\u8c61\u6216\u51fd\u6570\u7684\u522b\u540d(\u4e0d\u5fc5\u5206\u914d\u5185\u5b58) \u200d \u200d \u200d int &y=x; y\u662fx\u672c\u8eab \u5f15\u7528\u53ef\u4f5c\u4e3a\u53c2\u6570\u3001\u8fd4\u56de\u503c,\u6613\u4e8e\u4fee\u6539 \u4e0d\u8981\u8fd4\u56de\u51fd\u6570\u5185\u5b9a\u4e49\u7684\u5f15\u7528 return *this; (\u53ef\u94fe\u5f0f\u8c03\u7528) + nullptr \u7a7a\u6307\u9488\u5e38\u91cf(\u53efdelete) c++\u4e0d\u5141\u8bb8void \u9690\u5f0f\u8f6c\u6362 \u53efint p=0\u5373NULL + const \u5e38\u91cf(\u8981\u521d\u59cb\u5316)const int i=6;\u4e0d\u53efint *p=&i; const int* p \u53ef\u6539p,\u4e0d\u53ef\u6539 p(\u6307\u5411\u5e38\u91cf,\u4e0d\u662f\u5e38\u91cf) int *const p \u53ef\u6539*p,\u4e0d\u53ef\u6539p(\u6307\u5411\u53d8\u91cf,\u4e0d\u662f\u53d8\u91cf) \u7c7b \u540d()const; const\u6210\u5458\u51fd\u6570,\u4e0d\u80fd\u6539\u5bf9\u8c61\u7684\u6210\u5458(\u53ef\u7528\u4e8e\u91cd\u8f7d) + \u7c7b\u91cc\u7684static\u53d8\u91cf(\u53ea\u662f\u58f0\u660e,\u4e0d\u4e0e\u5bf9\u8c61\u5173\u8054)\u8981\u5728\u5916\u521d\u59cb\u5316 \u7c7b\u578b \u7c7b::\u53d8\u91cf=... const static\u548cinline static\u53ef\u5728\u5185\u521d\u59cb\u5316 static\u51fd\u6570\u65e0this,\u4e0d\u80fd\u7528\u975e\u9759\u6001\u6210\u5458\u53d8\u91cf\u6216\u51fd\u6570 + \u9690\u5f0f\u8f6c\u6362:x-y\u4ea7\u751f\u4e34\u65f6\u5bf9\u8c61,\u7acb\u5373\u6790\u6784,\u53ef\u8d4b\u7ed9const &\u00b7\u751f\u547d\u5468\u671f\u5ef6\u957f \u4e34\u65f6\u5bf9\u8c61(\u5305\u62ec\u6570,\u4e0d\u53ef\u8d4b\u7ed9\u975econst &) int\u4f20\u5165int &\u6bd4const int &\u597d + \u51fd\u6570\u91cd\u8f7d:\u540d(){} \u540d(\u7c7b x){} \u540d(\u7c7b1 x,\u7c7b2 y){} \u6839\u636e\u4e0d\u540c\u4f20\u5165\u53c2\u6570\u60c5\u51b5\u6267\u884c\u5bf9\u5e94\u7248\u672c,\u627e\u6700\u4f18\u8005 + \u6807\u51c6\u8f6c\u6362:\u2460\u6570\u7ec4\u4f20\u7ed9\u6307\u9488 \u6307\u9488\u4f20\u7ed9const\u6307\u9488 \u2461char\u4f20\u7ed9int float\u4f20\u7ed9double \u2462long long\u4f20\u7ed9int double\u4f20\u7ed9float nullptr\u4f20\u7ed9\u4efb\u610f\u7c7b\u578b\u7684\u6307\u9488 \u4efb\u610f\u7c7b\u578b\u7684\u6307\u9488\u4f20\u7ed9void \u591a\u7c7b\u578b\u4f20\u7ed9bool + \u7528\u6237\u5b9a\u4e49\u8f6c\u6362:\u2460\u8f6c\u6362\u6784\u9020\u51fd\u6570(\u6027\u8d28) \u7c7b1(\u7c7b2){} \u7c7b2\u8f6c\u6362\u6210\u7c7b1 \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u52a0\u4e0aexplicit,\u53ea\u80fd\u4f20\u7c7b2(\u53ea\u663e\u5f0f\u8f6c\u6362) \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u2461\u81ea\u5b9a\u4e49\u8f6c\u6362\u51fd\u6570 \u7c7b2\u91cc operator \u7c7b1(){} \u4e0a\u4e0b\u6587\u8f6c\u6362:if while for ! && || ?:\u8981bool,\u4e0d\u8003\u8651explicit + for(auto/\u7c7b \u540d:\u8303\u56f4)\u7528\u540d; \u904d\u5386,\u5143\u7d20\u4f5c\u4e3a\u540d + \u5c06\u4ea1\u503c(xvalue)\u662f\u53f3\u503c,\u4e34\u65f6\u5360\u5185\u5b58 \u7eaf\u53f3\u503c(prvalue)\u4e34\u65f6\u4e0d\u5360\u5185\u5b58}\u53ef\u5077,\u53ef\u79fb\u52a8\u8bed\u4e49 \u5de6\u503c(lvalue)\u4e0d\u4e34\u65f6\u5360\u5185\u5b58 \u79fb\u52a8\u8bed\u4e49:\u83b7\u53d6\u53f3\u503c,\u7701\u53bb\u4e0d\u5fc5\u8981\u7684\u62f7\u8d1d(\u5077) \u53f3\u503c\u5f15\u7528:\u7c7b && \u53ea\u7ed1\u5b9a\u53f3\u503c\u3001\u672c\u8eab\u662f\u5de6\u503c (\u79fb\u52a8\u8d4b\u503c\u8fd0\u7b97\u7b26) int z=6;\u53efint &x=z;int &&y=6; \u200d \u200d \u200d std::move(\u540d)\u8f6c\u6362\u4e3a\u53f3\u503c static_cast<\u7c7b>(\u540d)\u7c7b\u578b\u8f6c\u6362 \u7c7b \u51fd\u6570\u540d() &\u6216&&{} \u8c03\u7528\u5de6\u503c\u65f6\u6216\u8c03\u7528\u53f3\u503c\u65f6 + \u5b8c\u7f8e\u8f6c\u53d1:(\u4e0d\u4e22\u5931\u5de6\u503c\u53f3\u503c\u6027) \u8f6c\u53d1\u5f15\u7528\u2460auto &&\u2461T &&(T\u4e3a\u51fd\u6570\u6a21\u677f\u7684\u53c2\u6570) \u7ed9\u53c2\u65f6,\u82e5\u4e3a\u5de6\u503c\u5219\u4e3a\u5de6\u503c\u5f15\u7528,\u5426\u5219\u4e3a\u53f3\u503c\u5f15\u7528\u3001\u8f6c\u5316\u4e3a\u7c7b &&\u518d\u8fd4\u56de(std::forward<\u7c7b>(\u540d)) \u5f15\u7528\u6298\u53e0:\u53f3\u503c\u5f15\u7528\u7684\u53f3\u503c\u5f15\u7528\u4e3a\u53f3\u503c\u5f15\u7528,\u5426\u5219\u4e3a\u5de6\u503c\u5f15\u7528 typename...\u7c7b \u7c7b...\u540d(\u53ef\u53d8\u53c2\u6570\u6a21\u7248) \u7c7b(\u540d)... return\u5148\u5c1d\u8bd5\u4ee5rvalue\u8fd4\u56de + \u667a\u80fd\u6307\u9488:(\u51fd\u6570\u5185\u5f97\u6307\u9488\u662f\u5426\u5df2\u5220\u3001\u6216\u5e94\u5728\u5916\u5220) \u667a\u80fd:\u7528delete\u8fd8\u662fdelete[] \u4f7f\u7528\u540e\u81ea\u52a8\u9500\u6bc1 \u6307\u9488\u662f\u5426\u4e3a\u7a7a \u5783\u573e\u56de\u6536:\u56de\u6536\u4e0d\u53ef\u8fbe\u7684\u5bf9\u8c61(\u6570\u6307\u9488\u4e2a\u6570,\u4e3a0\u65f6\u56de\u6536;Mark-and-sweep\u662f\u5426\u53ef\u8fd4\u56de) #include<memory> + std::unique_ptr<\u7c7b> \u540d(new ...)(\u53ef\u4e3a\u7c7b[]) \u5bf9\u8c61\u7684\u552f\u4e00\u6240\u6709\u8005,\u81ea\u52a8\u56de\u6536 \u53ea\u80fd\u79fb\u52a8\u4e0d\u80fd\u62f7\u8d1d .get()\u83b7\u53d6\u539f\u59cb\u6307\u9488 noexcept(\u4e0d\u6267\u884c\u4efb\u4f55\u5f02\u5e38) \u4e5f\u53efauto \u540d=std::make_unique<\u7c7b>(...)(\u53ef\u4e3a\u7c7b[],\u62ec\u53f7\u5185\u4e3a\u5927\u5c0f) \u4f20std::move(\u540d)\u7ed9 \u3001&\u3001(const)\u667a\u80fd\u6307\u9488(&) + \u53ef\u80fd\u6709\u591a\u4e2ashared_ptr\u6307\u5411\u540c\u4e00\u5bf9\u8c61,\u53ef\u88ab\u62f7\u8d1d,\u5bf9\u8c61\u65e0shared_ptr\u6307\u5411\u65f6\u88ab\u6790\u6784 std::make_shared<\u7c7b> + \u4f5c\u7528\u57df\u5c4f\u853d:\u5b50\u7c7b\u3001\u5c40\u90e8\u540c\u540d\u4f18\u5148 \u5b50\u7c7b\u7528using \u57fa\u7c7b::\u51fd\u6570\u540d; \u53ef\u8fdb\u884c\u91cd\u8f7d \u200d \u200d \u200d \u5b50\u7c7b\u5bf9\u8c61.\u57fa\u7c7b::a(\u627e\u57fa\u7c7b\u7684a) __\u5f00\u5934\u7531\u7f16\u8bd1\u5668\u5904\u7406 include<cstdlib> malloc\u8fd4\u56devoid* new \u5206\u914d\u7a7a\u95f4\u4e14\u521b\u9020\u5bf9\u8c61(\u53ef\u5728\u4e2d\u95f4\u7ed9\u5730\u5740)(\u4f1a\u81ea\u52a8\u7528\u6784\u9020\u51fd\u6570) delete\u56de\u6536 int* p=new int[n] stru* p=new stru\u3001stru(6)\u3001stru[]{1,2,3,4,5,6} \u200d \u200d \u200d delete p\u3001[]p \u7c7b class struct union \u540d{}; \u5c01\u88c5:c++\u7c7b\u4e2d\u53ef\u6709\u6210\u5458\u51fd\u6570; \u5b9a\u4e49\u5bf9\u8c61,\u53ef\u65e0struct\u6216class + \u7c7b\u540d::\u51fd\u6570\u540d \u5bf9\u8c61(\u72b6\u6001+\u884c\u4e3a) \u7c7b\u91cc\u7684\u53d8\u91cf\u3001\u51fd\u6570(\u5185\u6216\u5916\u521d\u59cb\u5316,\u53ef\u9ed8\u8ba4\u8d4b\u503c(\u672b\u5c3e)) + \u8bbf\u95ee\u8bf4\u660e\u7b26:public:\u6210\u5458\u53ef\u5728\u7c7b\u5916\u8bbf\u95ee protected:\u5b50\u7c7b\u5b9a\u4e49\u3001\u672c\u8eab\u5b9a\u4e49\u91cc\u53ef\u8bbf\u95ee privte:\u6210\u5458\u4e0d\u80fd\u5728\u7c7b\u5916\u8bbf\u95ee\u3001\u53ea\u80fd\u5728\u7c7b\u91cc\u7528 \u53ef\u5728public\u5b9a\u4e49\u51fd\u6570\u6765\u83b7\u53d6\u3001\u4f7f\u7528private\u7684\u6210\u5458 class\u9ed8\u8ba4private \u200d \u200d \u200d struct\u9ed8\u8ba4public \u53ef\u5728\u7c7b\u91cc\u7528friend\u58f0\u660e\u51fd\u6570,\u5219\u53ef\u8bbf\u95eeprivate\u6210\u5458 \u53ef\u89c1:\u57fa\u7c7b\u6709a,\u5b50\u7c7b\u7528a\u662f\u57fa\u7c7ba,\u5373\u4f7f\u6709\u5168\u5c40a + \u7ee7\u627f:class \u5b50\u7c7b:public \u57fa\u7c7b{}; public/protected/private\u57fa\u7c7b\u4e2d\u6210\u5458\u7ea7\u522b\u9ad8\u7684\u4f1a\u964d \u5b50\u7c7b\u6784\u9020\u4e2d\u53ef\u7528\u57fa\u7c7b\u6784\u9020 + \u591a\u6001:(\u5b50\u7c7b\u6210\u5458\u4f18\u5148)\u8c03\u7528\u540c\u4e00\u51fd\u6570\u81ea\u52a8\u53d6\u51b3\u4e8e\u5b9e\u9645\u7c7b\u578b + \u5411\u4e0a\u8f6c\u578b:\u57fa\u7c7b\u7528\u5b50\u7c7b\u6210\u5458 \u5b50\u7c7b\u5b9e\u4f8b\u8d4b\u7ed9\u57fa\u7c7b\u6307\u9488\u3001\u5f15\u7528 \u5b50\u7c7b\u5bf9\u8c61\u8d4b\u7ed9\u57fa\u7c7b\u5bf9\u8c61(\u5bf9\u8c61\u5207\u7247) + \u5185\u8054(\u9ed8\u8ba4):\u51cf\u5c11\u4e86\u8c03\u7528\u51fd\u6570\u7684\u5f00\u9500,\u7f16\u8bd1\u5668\u51b3\u5b9a + \u865a\u7ee7\u627f: virtual public \u57fa\u7c7b (\u591a\u4e2a\u57fa\u7c7b\u7ee7\u627f\u4e00\u57fa\u7c7b) + \u865a\u51fd\u6570:\u57fa\u7c7b\u91cc virtual \u51fd\u6570\u5b9a\u4e49 \u5b50\u7c7b\u91cc \u51fd\u6570\u540d(...) override(\u53ef\u65e0){...} \u8986\u76d6\u57fa\u7c7b\u865a\u51fd\u6570,\u8fd8\u662f\u865a\u51fd\u6570 \u865a\u8c03\u7528:\u6839\u636e\u5b9e\u9645\u7c7b\u578b(\u6307\u9488\u6307\u7684\u7c7b\u578b)\u8c03\u7528\u8986\u76d6\u7684\u6700\u540e\u4e00\u4e2a\u7248\u672c \u82e5\u4e3a\u6b63\u5e38\u8c03\u7528,\u6839\u636e\u9759\u6001\u7c7b\u578b(\u6307\u9488\u7c7b\u578b) \u4f8b:\u4f20\u5165shape*\u6570\u7ec4,\u6709circle\u3001rectangle\u7b49\u5b50\u7c7b,\u8c03\u7528draw\u51fd\u6570\u5219\u4e0d\u540c \u82e5=0,\u4e3a\u7eaf\u865a\u6570,\u4e0d\u5fc5\u6709\u5b9e\u73b0,\u53ef\u5728\u5916\u5b9a\u4e49\u57fa\u672c\u529f\u80fd \u62bd\u8c61\u7c7b:\u5b58\u5728\u81f3\u5c11\u4e00\u4e2a\u7eaf\u865a\u51fd\u6570,\u4e0d\u80fd\u521b\u5bf9\u8c61\u3001\u4f5c\u8fd4\u56de\u7c7b\u578b,\u53ef\u89c6\u4f5c\u63a5\u53e3(\u4f8bshape) + class \u7c7b\u540d final{}; virtual...() final {}\u4e0d\u80fd\u88ab\u7ee7\u627f\u6216\u8986\u76d6(\u53ef\u80fd\u4f18\u5316) + \u6784\u9020\u51fd\u6570(\u53ef\u65e0)(\u521d\u59cb\u5316):\u7c7b\u91cc \u7c7b\u540d(...){} (\u5e94\u4e3apublic,\u53ef\u6709\u53c2\u6570) \u7c7b \u540d;\u76f8\u5f53\u4e8e\u7c7b \u540d=\u7c7b(); \u6709\u53c2\u6570,\u76f4\u63a5 \u7c7b \u540d(\u53c2\u6570\u503c...); int a(4); \u6709\u9ed8\u8ba4\u6784\u9020\u51fd\u6570 \u53ef\u7c7b\u540d()=default(\u5f15\u5165)/delete(\u5220\u9664) \u7528this->\u6210\u5458(\u5bf9\u8c61\u7684\u6210\u5458) this\u6307\u5411\u5f53\u524d\u5bf9\u8c61 \u6210\u5458\u521d\u59cb\u5316\u5217\u8868:(\u7f16\u8bd1\u5668\u6309\u5b9a\u4e49\u987a\u5e8f\u521d\u59cb\u5316) \u6784\u9020\u51fd\u6570\u540d(...):\u6210\u54581(\u503c1),...{} (\u6210\u5458\u4e3a\u5bf9\u8c61\u65f6\u5fc5\u7528) \u59d4\u6258\u6784\u9020 a(int){} a():a(6){} \u6790\u6784\u51fd\u6570: ~ \u7c7b\u540d(){free...;} \u5bf9\u8c61\u751f\u547d\u5468\u671f\u7ed3\u675f\u65f6\u8c03\u7528,\u4e0e\u6790\u6784\u987a\u5e8f\u76f8\u53cd \u52a8\u6001\u5206\u914d\u8981delete\u6790\u6784:\u81ea\u52a8(\u5c40\u90e8)\u3001\u5757(main)\u7ed3\u675f\u65f6\u6790\u6784 \u9759\u6001(\u5168\u5c40)\u3001main\u7ed3\u675f\u65f6\u6790\u6784 \u62f7\u8d1d\u6784\u9020\u51fd\u6570(\u540c\u4e00\u7c7b\u5bf9\u8c61\u521d\u59cb\u5316\u5f53\u524d\u5bf9\u8c61) \u7c7b\u91cc\u6784\u9020\u51fd\u6570\u4e2d\u7b2c\u4e00\u4e2a\u53c2\u6570\u7c7b\u578b\u4e3a \u7c7b & \u6216 const \u7c7b & \u4e14\u65e0\u5176\u5b83\u4e0d\u9ed8\u8ba4\u53c2\u6570 \u53ef\u5728 \u7c7b \u540d1=\u540d2 \u4e2d\u8c03\u7528 \u53ef=default/delete NRVO:\u547d\u540d\u8fd4\u56de\u503c\u4f18\u5316,\u76f4\u63a5\u6784\u9020\u800c\u975e\u6784\u9020\u518d\u62f7\u8d1d \u5f3a\u5236\u7701\u7565\u62f7\u8d1d(\u76f4\u63a5\u6784\u9020)\u2460\u8fd4\u56de\u7c7b\u578b\u4e0e\u8fd4\u56de\u503c\u540c\u7c7b\u578b\u2461\u521d\u59cb\u5316\u8868\u8fbe\u5f0f\u540c\u7c7b\u578b SMF:\u6784\u9020\u51fd\u6570 \u79fb\u52a8\u6784\u9020\u51fd\u6570 \u79fb\u52a8\u8d4b\u503c\u8fd0\u7b97\u7b26 \u6790\u6784\u51fd\u6570 \u62f7\u8d1d\u6784\u9020\u51fd\u6570 \u62f7\u8d1d\u8d4b\u503c\u8fd0\u7b97\u7b26(rule of three) rule of zero:\u4e00\u4e2a\u7c7b\u8981\u4e48\u53ea\u7528\u6765\u7ba1\u7406\u8d44\u6e90,\u8981\u4e48\u5c31\u4e0d\u6d89\u53ca(\u5982std::string\u4ee3\u4e3a\u7ba1\u7406\u5b57\u7b26\u4e32,\u4e0d\u7528\u81ea\u5df1\u5199three SMFs) \u5bf9\u8c611=\u5bf9\u8c612 \u8d4b\u503c \u7c7b1\u91cc\u5b9a\u4e49\u7c7b operator=(\u7c7b2 from){}\u7528from->\u6210\u5458 x=y\u89c6\u4e3ax.operator=(y) \u5927\u591a\u8fd0\u7b97\u7b26\u53ef\u91cd\u8f7d(\u7531\u7c7b\u627e\u8fd0\u7b97\u7b26\u51fd\u6570) \u6709\u53c2\u6570\u4e3a\u540e\u7f6e\u8fd0\u7b97\u7b26 x y\u65f6\u4f1a\u540c\u65f6\u627e x.operator*(y) (x\u7c7b\u91cc)\u548c operator*(x,y) (\u7c7b\u5916) \u82e5\u4e3aint\u4e58my,\u53ef\u5b9a\u4e49my operator (int x,my y){return y*x;} \u5b9a\u4e49\u4e86function call operator\u7684\u5bf9\u8c61\u4e3a\u51fd\u6570\u5bf9\u8c61(\u51fd\u6570\u6307\u9488\u3001\u91cd\u8f7d\u4e86()) \u6a21\u677f \u6cdb\u578b\u7f16\u7a0b:(\u7f16\u5199\u7c7b/\u51fd\u6570\u7684\u4e00\u4e2a\u65cf(\u751f\u6210\u6a21\u5f0f)) \u53ef\u4ee5#define \u540d \u540d1 \u200d \u200d \u200d #include \"\u6587\u4ef6\"(\u7528\u540d) \u200d \u200d \u200d #undef \u540d \u4f46\u53ef\u80fd\u91cd\u590d\u5b9a\u4e49 \u7c7b\u6a21\u677f template<typename\u6216class T> \u5b9a\u4e49\u7c7b (\u63a5\u53d7\u7c7b\u578b\u4f5c\u4e3a\u53c2\u6570,\u53ef\u591a\u4e2a,\u53ef\u9ed8\u8ba4(\u672b\u5c3e)) \u51fd\u6570\u6a21\u677f template<typename\u6216class T> \u5b9a\u4e49\u51fd\u6570 \u7ed9\u51fa\u51fd\u6570,\u751f\u6210\u7c7b(\u7279\u5316)(\u9690\u5f0f\u5b9e\u4f8b\u5316) \u7c7b\\<\u53c2\u6570>\u4e3a\u7c7b \u200d \u200d \u200d \u51fd\u6570\\<\u53c2\u6570>\u4e3a\u51fd\u6570(\u53ef\u8fd0\u7b97\u7b26) \u53ef\u7c7b\u578b x=\u51fd\u6570<>(); \u200d \u200d \u200d (\u6a21\u677f\u53c2\u6570\u63a8\u5bfc,\u4e0d\u8003\u8651\u9690\u5f0f\u8f6c\u6362) \u7c7b\u5916\u5199\u7c7b\u5185\u51fd\u6570: \u8fd4\u56de\u7c7b\u578b \u7c7b\\<T>::\u51fd\u6570\u540d(){} (\u91cd\u8f7d\u89e3\u6790\u524d) \u7c7b\u53ef\u4ee5\u6709\u6a21\u677f\u6210\u5458 \u2460\u663e\u793a\u7279\u5316:\u5df2\u6709\u6709\u53c2\u6570\u7684\u6a21\u677f \u518d\u7ed9\u65e0\u53c2\u6570\u7684\u5b9e\u4f8b template<typename T> func\u6216\u7c7b \u7528T template<> func\u7528\u7279\u4f8b \u7c7b\u7528\u7c7b<\u7c7b1>{} \u2461\u504f\u7279\u5316:\u4e00\u4e9b\u53c2\u6570\u7279\u5b9a,\u5176\u5b83\u53c2\u6570\u4e0d\u53d8 \u2462\u901a\u7528 \u987a\u5e8f\u2460\u2461\u2462 STL \u540d.begin() \u540d.end() #include\\<vector> std::vector<\u7c7b> \u540d; \u540d.push_back(\u5143\u7d20)\u81ea\u52a8\u6269\u5145 #include<algorithm> std::sort(\u5de6\u5730\u5740,\u53f3\u5730\u5740) [) \u6392\u5e8f(\u5347) \u53ef\u540e\u52a0\u6307\u5b9a\u51fd\u6570\u540d,\u4f20\u5165a\u3001b\u771f\u5219a\u5728b\u524d \u53ef\u540e\u52a0std::greater<\u7c7b>()\u964d\u5e8f std::find(\u5de6,\u53f3,\u5143\u7d20)\u8fd4\u56de\u7b2c\u4e00\u4f4d\u7684\u8fed\u4ee3\u5668 std::count(\u5de6,\u53f3,\u5143\u7d20) std::count_if(\u5de6,\u53f3,\u51fd\u6570) std::for_each(\u5de6,\u53f3,\u51fd\u6570(\u5f15\u7528)) std::reverse(\u5de6,\u53f3) std::fill(\u5de6,\u53f3,\u5143\u7d20)\u586b\u5145 std::implace_merge(\u521d,\u4e2d,\u672b)\u5408\u5e76\u4e24\u6709\u5e8f\u5e8f\u5217 std::max(...) std::equal(s.begin(),s.begin+s.size()/2,s.rbegin())\u8fd4\u56debool\u503c std::set<\u7c7b> \u540d(\u6709\u5e8f\u53bb\u91cd) std::swap(a,b) \u8fed\u4ee3\u5668 \u4f5c\u4e3a\u5bb9\u5668\u548c\u7b97\u6cd5\u95f4\u4fe1\u606f\u4f20\u9012\u7684\u901a\u7528\u5355\u5143 include\\ \u4ee5vector\u4e3a\u4f8b std::vector<int> v={1,2,3} for(std::vector<int>::iterator it=v.begin();it!=v.begin();++it){\u7528*it}","title":"C++"},{"location":"c%2B%2B/#_1","text":"class struct union \u540d{}; \u5c01\u88c5:c++\u7c7b\u4e2d\u53ef\u6709\u6210\u5458\u51fd\u6570; \u5b9a\u4e49\u5bf9\u8c61,\u53ef\u65e0struct\u6216class + \u7c7b\u540d::\u51fd\u6570\u540d \u5bf9\u8c61(\u72b6\u6001+\u884c\u4e3a) \u7c7b\u91cc\u7684\u53d8\u91cf\u3001\u51fd\u6570(\u5185\u6216\u5916\u521d\u59cb\u5316,\u53ef\u9ed8\u8ba4\u8d4b\u503c(\u672b\u5c3e)) + \u8bbf\u95ee\u8bf4\u660e\u7b26:public:\u6210\u5458\u53ef\u5728\u7c7b\u5916\u8bbf\u95ee protected:\u5b50\u7c7b\u5b9a\u4e49\u3001\u672c\u8eab\u5b9a\u4e49\u91cc\u53ef\u8bbf\u95ee privte:\u6210\u5458\u4e0d\u80fd\u5728\u7c7b\u5916\u8bbf\u95ee\u3001\u53ea\u80fd\u5728\u7c7b\u91cc\u7528 \u53ef\u5728public\u5b9a\u4e49\u51fd\u6570\u6765\u83b7\u53d6\u3001\u4f7f\u7528private\u7684\u6210\u5458 class\u9ed8\u8ba4private \u200d \u200d \u200d struct\u9ed8\u8ba4public \u53ef\u5728\u7c7b\u91cc\u7528friend\u58f0\u660e\u51fd\u6570,\u5219\u53ef\u8bbf\u95eeprivate\u6210\u5458 \u53ef\u89c1:\u57fa\u7c7b\u6709a,\u5b50\u7c7b\u7528a\u662f\u57fa\u7c7ba,\u5373\u4f7f\u6709\u5168\u5c40a + \u7ee7\u627f:class \u5b50\u7c7b:public \u57fa\u7c7b{}; public/protected/private\u57fa\u7c7b\u4e2d\u6210\u5458\u7ea7\u522b\u9ad8\u7684\u4f1a\u964d \u5b50\u7c7b\u6784\u9020\u4e2d\u53ef\u7528\u57fa\u7c7b\u6784\u9020 + \u591a\u6001:(\u5b50\u7c7b\u6210\u5458\u4f18\u5148)\u8c03\u7528\u540c\u4e00\u51fd\u6570\u81ea\u52a8\u53d6\u51b3\u4e8e\u5b9e\u9645\u7c7b\u578b + \u5411\u4e0a\u8f6c\u578b:\u57fa\u7c7b\u7528\u5b50\u7c7b\u6210\u5458 \u5b50\u7c7b\u5b9e\u4f8b\u8d4b\u7ed9\u57fa\u7c7b\u6307\u9488\u3001\u5f15\u7528 \u5b50\u7c7b\u5bf9\u8c61\u8d4b\u7ed9\u57fa\u7c7b\u5bf9\u8c61(\u5bf9\u8c61\u5207\u7247) + \u5185\u8054(\u9ed8\u8ba4):\u51cf\u5c11\u4e86\u8c03\u7528\u51fd\u6570\u7684\u5f00\u9500,\u7f16\u8bd1\u5668\u51b3\u5b9a + \u865a\u7ee7\u627f: virtual public \u57fa\u7c7b (\u591a\u4e2a\u57fa\u7c7b\u7ee7\u627f\u4e00\u57fa\u7c7b) + \u865a\u51fd\u6570:\u57fa\u7c7b\u91cc virtual \u51fd\u6570\u5b9a\u4e49 \u5b50\u7c7b\u91cc \u51fd\u6570\u540d(...) override(\u53ef\u65e0){...} \u8986\u76d6\u57fa\u7c7b\u865a\u51fd\u6570,\u8fd8\u662f\u865a\u51fd\u6570 \u865a\u8c03\u7528:\u6839\u636e\u5b9e\u9645\u7c7b\u578b(\u6307\u9488\u6307\u7684\u7c7b\u578b)\u8c03\u7528\u8986\u76d6\u7684\u6700\u540e\u4e00\u4e2a\u7248\u672c \u82e5\u4e3a\u6b63\u5e38\u8c03\u7528,\u6839\u636e\u9759\u6001\u7c7b\u578b(\u6307\u9488\u7c7b\u578b) \u4f8b:\u4f20\u5165shape*\u6570\u7ec4,\u6709circle\u3001rectangle\u7b49\u5b50\u7c7b,\u8c03\u7528draw\u51fd\u6570\u5219\u4e0d\u540c \u82e5=0,\u4e3a\u7eaf\u865a\u6570,\u4e0d\u5fc5\u6709\u5b9e\u73b0,\u53ef\u5728\u5916\u5b9a\u4e49\u57fa\u672c\u529f\u80fd \u62bd\u8c61\u7c7b:\u5b58\u5728\u81f3\u5c11\u4e00\u4e2a\u7eaf\u865a\u51fd\u6570,\u4e0d\u80fd\u521b\u5bf9\u8c61\u3001\u4f5c\u8fd4\u56de\u7c7b\u578b,\u53ef\u89c6\u4f5c\u63a5\u53e3(\u4f8bshape) + class \u7c7b\u540d final{}; virtual...() final {}\u4e0d\u80fd\u88ab\u7ee7\u627f\u6216\u8986\u76d6(\u53ef\u80fd\u4f18\u5316) + \u6784\u9020\u51fd\u6570(\u53ef\u65e0)(\u521d\u59cb\u5316):\u7c7b\u91cc \u7c7b\u540d(...){} (\u5e94\u4e3apublic,\u53ef\u6709\u53c2\u6570) \u7c7b \u540d;\u76f8\u5f53\u4e8e\u7c7b \u540d=\u7c7b(); \u6709\u53c2\u6570,\u76f4\u63a5 \u7c7b \u540d(\u53c2\u6570\u503c...); int a(4); \u6709\u9ed8\u8ba4\u6784\u9020\u51fd\u6570 \u53ef\u7c7b\u540d()=default(\u5f15\u5165)/delete(\u5220\u9664) \u7528this->\u6210\u5458(\u5bf9\u8c61\u7684\u6210\u5458) this\u6307\u5411\u5f53\u524d\u5bf9\u8c61 \u6210\u5458\u521d\u59cb\u5316\u5217\u8868:(\u7f16\u8bd1\u5668\u6309\u5b9a\u4e49\u987a\u5e8f\u521d\u59cb\u5316) \u6784\u9020\u51fd\u6570\u540d(...):\u6210\u54581(\u503c1),...{} (\u6210\u5458\u4e3a\u5bf9\u8c61\u65f6\u5fc5\u7528) \u59d4\u6258\u6784\u9020 a(int){} a():a(6){} \u6790\u6784\u51fd\u6570: ~ \u7c7b\u540d(){free...;} \u5bf9\u8c61\u751f\u547d\u5468\u671f\u7ed3\u675f\u65f6\u8c03\u7528,\u4e0e\u6790\u6784\u987a\u5e8f\u76f8\u53cd \u52a8\u6001\u5206\u914d\u8981delete\u6790\u6784:\u81ea\u52a8(\u5c40\u90e8)\u3001\u5757(main)\u7ed3\u675f\u65f6\u6790\u6784 \u9759\u6001(\u5168\u5c40)\u3001main\u7ed3\u675f\u65f6\u6790\u6784 \u62f7\u8d1d\u6784\u9020\u51fd\u6570(\u540c\u4e00\u7c7b\u5bf9\u8c61\u521d\u59cb\u5316\u5f53\u524d\u5bf9\u8c61) \u7c7b\u91cc\u6784\u9020\u51fd\u6570\u4e2d\u7b2c\u4e00\u4e2a\u53c2\u6570\u7c7b\u578b\u4e3a \u7c7b & \u6216 const \u7c7b & \u4e14\u65e0\u5176\u5b83\u4e0d\u9ed8\u8ba4\u53c2\u6570 \u53ef\u5728 \u7c7b \u540d1=\u540d2 \u4e2d\u8c03\u7528 \u53ef=default/delete NRVO:\u547d\u540d\u8fd4\u56de\u503c\u4f18\u5316,\u76f4\u63a5\u6784\u9020\u800c\u975e\u6784\u9020\u518d\u62f7\u8d1d \u5f3a\u5236\u7701\u7565\u62f7\u8d1d(\u76f4\u63a5\u6784\u9020)\u2460\u8fd4\u56de\u7c7b\u578b\u4e0e\u8fd4\u56de\u503c\u540c\u7c7b\u578b\u2461\u521d\u59cb\u5316\u8868\u8fbe\u5f0f\u540c\u7c7b\u578b SMF:\u6784\u9020\u51fd\u6570 \u79fb\u52a8\u6784\u9020\u51fd\u6570 \u79fb\u52a8\u8d4b\u503c\u8fd0\u7b97\u7b26 \u6790\u6784\u51fd\u6570 \u62f7\u8d1d\u6784\u9020\u51fd\u6570 \u62f7\u8d1d\u8d4b\u503c\u8fd0\u7b97\u7b26(rule of three) rule of zero:\u4e00\u4e2a\u7c7b\u8981\u4e48\u53ea\u7528\u6765\u7ba1\u7406\u8d44\u6e90,\u8981\u4e48\u5c31\u4e0d\u6d89\u53ca(\u5982std::string\u4ee3\u4e3a\u7ba1\u7406\u5b57\u7b26\u4e32,\u4e0d\u7528\u81ea\u5df1\u5199three SMFs) \u5bf9\u8c611=\u5bf9\u8c612 \u8d4b\u503c \u7c7b1\u91cc\u5b9a\u4e49\u7c7b operator=(\u7c7b2 from){}\u7528from->\u6210\u5458 x=y\u89c6\u4e3ax.operator=(y) \u5927\u591a\u8fd0\u7b97\u7b26\u53ef\u91cd\u8f7d(\u7531\u7c7b\u627e\u8fd0\u7b97\u7b26\u51fd\u6570) \u6709\u53c2\u6570\u4e3a\u540e\u7f6e\u8fd0\u7b97\u7b26 x y\u65f6\u4f1a\u540c\u65f6\u627e x.operator*(y) (x\u7c7b\u91cc)\u548c operator*(x,y) (\u7c7b\u5916) \u82e5\u4e3aint\u4e58my,\u53ef\u5b9a\u4e49my operator (int x,my y){return y*x;} \u5b9a\u4e49\u4e86function call operator\u7684\u5bf9\u8c61\u4e3a\u51fd\u6570\u5bf9\u8c61(\u51fd\u6570\u6307\u9488\u3001\u91cd\u8f7d\u4e86())","title":"\u7c7b"},{"location":"c%2B%2B/#_2","text":"\u6cdb\u578b\u7f16\u7a0b:(\u7f16\u5199\u7c7b/\u51fd\u6570\u7684\u4e00\u4e2a\u65cf(\u751f\u6210\u6a21\u5f0f)) \u53ef\u4ee5#define \u540d \u540d1 \u200d \u200d \u200d #include \"\u6587\u4ef6\"(\u7528\u540d) \u200d \u200d \u200d #undef \u540d \u4f46\u53ef\u80fd\u91cd\u590d\u5b9a\u4e49 \u7c7b\u6a21\u677f template<typename\u6216class T> \u5b9a\u4e49\u7c7b (\u63a5\u53d7\u7c7b\u578b\u4f5c\u4e3a\u53c2\u6570,\u53ef\u591a\u4e2a,\u53ef\u9ed8\u8ba4(\u672b\u5c3e)) \u51fd\u6570\u6a21\u677f template<typename\u6216class T> \u5b9a\u4e49\u51fd\u6570 \u7ed9\u51fa\u51fd\u6570,\u751f\u6210\u7c7b(\u7279\u5316)(\u9690\u5f0f\u5b9e\u4f8b\u5316) \u7c7b\\<\u53c2\u6570>\u4e3a\u7c7b \u200d \u200d \u200d \u51fd\u6570\\<\u53c2\u6570>\u4e3a\u51fd\u6570(\u53ef\u8fd0\u7b97\u7b26) \u53ef\u7c7b\u578b x=\u51fd\u6570<>(); \u200d \u200d \u200d (\u6a21\u677f\u53c2\u6570\u63a8\u5bfc,\u4e0d\u8003\u8651\u9690\u5f0f\u8f6c\u6362) \u7c7b\u5916\u5199\u7c7b\u5185\u51fd\u6570: \u8fd4\u56de\u7c7b\u578b \u7c7b\\<T>::\u51fd\u6570\u540d(){} (\u91cd\u8f7d\u89e3\u6790\u524d) \u7c7b\u53ef\u4ee5\u6709\u6a21\u677f\u6210\u5458 \u2460\u663e\u793a\u7279\u5316:\u5df2\u6709\u6709\u53c2\u6570\u7684\u6a21\u677f \u518d\u7ed9\u65e0\u53c2\u6570\u7684\u5b9e\u4f8b template<typename T> func\u6216\u7c7b \u7528T template<> func\u7528\u7279\u4f8b \u7c7b\u7528\u7c7b<\u7c7b1>{} \u2461\u504f\u7279\u5316:\u4e00\u4e9b\u53c2\u6570\u7279\u5b9a,\u5176\u5b83\u53c2\u6570\u4e0d\u53d8 \u2462\u901a\u7528 \u987a\u5e8f\u2460\u2461\u2462","title":"\u6a21\u677f"},{"location":"c%2B%2B/#stl","text":"\u540d.begin() \u540d.end() #include\\<vector> std::vector<\u7c7b> \u540d; \u540d.push_back(\u5143\u7d20)\u81ea\u52a8\u6269\u5145 #include<algorithm> std::sort(\u5de6\u5730\u5740,\u53f3\u5730\u5740) [) \u6392\u5e8f(\u5347) \u53ef\u540e\u52a0\u6307\u5b9a\u51fd\u6570\u540d,\u4f20\u5165a\u3001b\u771f\u5219a\u5728b\u524d \u53ef\u540e\u52a0std::greater<\u7c7b>()\u964d\u5e8f std::find(\u5de6,\u53f3,\u5143\u7d20)\u8fd4\u56de\u7b2c\u4e00\u4f4d\u7684\u8fed\u4ee3\u5668 std::count(\u5de6,\u53f3,\u5143\u7d20) std::count_if(\u5de6,\u53f3,\u51fd\u6570) std::for_each(\u5de6,\u53f3,\u51fd\u6570(\u5f15\u7528)) std::reverse(\u5de6,\u53f3) std::fill(\u5de6,\u53f3,\u5143\u7d20)\u586b\u5145 std::implace_merge(\u521d,\u4e2d,\u672b)\u5408\u5e76\u4e24\u6709\u5e8f\u5e8f\u5217 std::max(...) std::equal(s.begin(),s.begin+s.size()/2,s.rbegin())\u8fd4\u56debool\u503c std::set<\u7c7b> \u540d(\u6709\u5e8f\u53bb\u91cd) std::swap(a,b)","title":"STL"},{"location":"c%2B%2B/#_3","text":"\u4f5c\u4e3a\u5bb9\u5668\u548c\u7b97\u6cd5\u95f4\u4fe1\u606f\u4f20\u9012\u7684\u901a\u7528\u5355\u5143","title":"\u8fed\u4ee3\u5668"},{"location":"c%2B%2B/#include-vector","text":"std::vector<int> v={1,2,3} for(std::vector<int>::iterator it=v.begin();it!=v.begin();++it){\u7528*it}","title":"include\\ \u4ee5vector\u4e3a\u4f8b"},{"location":"c/","text":".c gcc \u672c\u540d -g -o \u53ef\u6267\u884c\u6587\u4ef6\u540d | \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d\u8fd0\u7b97\u987a\u5e8f| |:--| |\u200d 1 \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d [ ] ( ) . ->| |\u200d 2 \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d ++ -- ! ~ +(\u6b63) -\uff08\u8d1f\uff09 * & sizeof \u7c7b\u578b\u8f6c\u6362 \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u4ece\u53f3\u5230\u5de6| |\u200d 3 \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d * /\uff08\u53eaint/,\u53bb\u5c3e\uff09 %\uff08int\uff09| |\u200d 4 \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d + -| |\u200d 5 \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d << >>| |\u200d 6 \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d < <= > >=| |\u200d 7 \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d == !=| |\u200d 8 \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d &| |\u200d 9 \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u2303| |10 \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d|| |11 \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d &&| |12 \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d ||| |13 \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d ?: \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u4ece\u53f3\u5230\u5de6| |14 \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d = += -= *= /= %= &= \u2303= /= <<= >>= \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u4ece\u53f3\u5230\u5de6| |15 \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d ~ []\u76f8\u5f53\u4e8e*(),(&a[i])[j]\u4e3aa[i+j] a++\u4e3aa,\u5173\u6ce8\u5f00\u59cb;++a\u4e3aa+1,\u5173\u6ce8\u7ed3\u675f:\u5747+1;++--\u53ea\u5bf9\u53d8\u91cf,\u65e0(-x)++; \\~\u6362\u4f4d\u53d6\u53cd,~x\u4e3a-x-1,\u4e0d\u6539x; !\u75310\u8fd4\u56de1,\u7531\u975e0\u8fd4\u56de1 x< >n,\u53f3\u79fbn\u4f4d,signed\u8865\u6700\u9ad8\u4f4d,unsigned\u5de6\u88650,\u672a\u6ea2\u51fa\u76f8\u5f53\u4e8ex/2^n^ x&y,1 1\u624d\u4e3a1;x|y,0 0\u624d\u4e3a0;x^y,1 1\u62160 0\u624d\u4e3a0:\u5bf9\u8c61\u4e3achar\u6216int &&\u524d\u4e3a0\u505c,||\u524d\u4e3a\u975e0\u505c(\u77ed\u8def) a?b:c a\u771f\u8fd4\u56deb,\u5047\u8fd4\u56dec \u8d4b\u503c\u8fd0\u7b97\u53f3\u8d4b\u5de6,\u5de6\u4fa7\u5fc5\u4e3a\u53d8\u91cf,\u8fd4\u56de\u8fd0\u7b97\u540e\u7684\u5de6\u503c ,\u8fd4\u56de\u6700\u540e\u7684\u503c \u200d \u5224\u65ad\u91cc\u7684x\u4e3ax!=0,!x\u4e3ax==0 6>5>4\u4e3a1>4\u4e3a0 \"\\\u6570\"(\u81f3\u591a\u4e09\u4f4d),0\u6570\u5747\u4e3a\u516b\u8fdb\u5236\u6570;\"\\x\u6570\"(\u81f3\u591a\u4e24\u4f4d),0x\u6570\u5747\u4e3a\u5341\u516d\u8fdb\u5236\u6570;0b\u6570,0B\u6570\u4e3a\u4e8c\u8fdb\u5236\u6570 int 4,double 8,float 4,char 1,short 2,void *\u4e0d\u5b9a\u6307\u5411 \u6570.\u6570e^\u6574\u6570^,.\u6570\u4e3a0.\u6570,\u4e3a\u6d6e\u70b9\u578b \u81ea\u52a8\u7c7b\u578b\u8f6c\u6362:char->short->int->long-long long,int->float->double,signed->unsigned,\u4e0d\u53efint(3.14) \u8f6c\u4e49\u5b57\u7b26\\n \\t \\b \\\" \\\\ \\v(\u7ad6\u5411\u8df3\u683c) scanf \u53c2\u6570\u4e2a\u6570\u4e0d\u5b9a,\u8fd4\u56de\u6b63\u786e\u53c2\u6570\u4e2a\u6570,\u53ef\u5ffd\u7565\u5148\u5bfc\u7a7a\u767d\u7b26,\u8f93\u5165\u6570\u3001\u4e32\u9047\u5230\u7a7a\u683ctab\u56de\u8f66\u4e3a\u6b62\u4e0d\u4fdd\u7559; % \u6570\uff1a\u81f3\u591a\u5b57\u7b26\u6570 l:long,double ll:long long &d:int(&) c:char(&) s:\u5b57\u7b26\u4e32,\u81ea\u52a8\u4ee50\u7ed3\u675f o:\u516b\u8fdb\u5236 x:\u5341\u516d\u8fdb\u5236 p:\u6307\u9488 u:unsigned a,e,f,g:float []:\u6240\u5141\u8bb8\u7684\u5b57\u7b26 [^]:\u9664\u8be5\u5b57\u7b26\u90fd\u5141\u8bb8 \u8981getchar() gets(),\u56de\u8f66\u6216EOF\u7ed3\u675f\u4e0d\u4fdd\u7559,\u81ea\u52a8\u67090,\u4e0d\u9700getchar() puts(),\u90470\u7ed3\u675f,\u8f93\u51fa\\n printf \u8fd4\u56de\u8f93\u51fa\u603b\u5b57\u7b26\u6570,%%\u4e3a%,\u4e0d\u80fd\u7528\\%;\u4e0d\u53efprintf(\"%f\",2); % -:\u5de6\u5bf9\u9f50 +:\u524d\u6709+\u6216- 0:\u524d\u586b\u51450 \u6570:\u81f3\u5c11\u5360\u636e\u5b57\u7b26\u6570\uff0c\u53f3\u5bf9\u9f50 .\u6570:\u5c0f\u6570\u4f4d\u6570(\u56db\u820d\u4e94\u5165)\u6216\u81f3\u591a\u5b57\u7b26\u6570 *\u548c.*\u5bf9\u5e94\u540e\u53c2\u6570 l:long ll:long long d:int(signed) c:char s:\u5b57\u7b26\u4e32(\u9996\u5730\u5740),0\u6b62 o:\u516b\u8fdb\u5236(\u65e00) x,X:\u5341\u516d\u8fdb\u5236(\u65e00x) e,E:\u6307\u6570\uff0c\u516d\u4f4d\u56db\u820d\u4e94\u5165\u7684\u5c0f\u6570\uff0c\u4e24\u4f4d\u5e95\u6570 u:unsigned int f,F:float(\u9ed8\u8ba46\u4f4d) p:\u6307\u9488 c=getchar(),putchar(c) include sqrt() fabs() pow(,) expa() loga() \u5747\u8fd4\u56dedouble\u578b \u51fd\u6570\u58f0\u660e\u3001\u8c03\u7528\u3001\u81ea\u5b9a\u4e49(\u8fd4\u56de\u7c7b\u578b) return\u7ec8\u6b62 \u4e0d\u5d4c\u5957\u5b9a\u4e49 \u4ece\u53f3\u5f80\u5de6\u5904\u7406\u53c2\u6570 \u9ed8\u8ba4\u8fd4\u56deint\u578b \u91cc\u9762\u5b9a\u4e49\u7684\u6570\u7ec4\u4f1a\u6d88\u5931,\u4e0d\u80fd\u8fd4\u56de\u5185\u90e8\u5b9a\u4e49\u7684\u81ea\u52a8\u53d8\u91cf\u5730\u5740 \u4e0d\u7528\u6307\u9488,\u5f62\u53c2\u4e0d\u6539\u53d8\u5b9e\u53c2,\u53ea\u4f20\u503c {\u5c40\u90e8}\u5916\u7528\u4e8e\u5185\uff0c\u5185\u4e0d\u7528\u4e8e\u5916\uff0c\u540c\u540d\u65f6\u5c40\u90e8\u4f18\u5148;\u5168\u5c40\u53d8\u91cf(main\u4e4b\u524d\u5c31\u521d\u59cb\u5316)\u3001\u9759\u6001\u5c40\u90e8\u53d8\u91cfstatic \u7c7b\u578b \u540d(\u4f5c\u7528\u4e8e\u5c40\u90e8,\u4e00\u76f4\u5b58\u5728)\u672a\u521d\u59cb\u5316\u5219\u4e3a0,\u5c40\u90e8\u53d8\u91cf(\u8fdb\u5165\u8bed\u53e5\u65f6\u5206\u914d\u5b58\u50a8)\u672a\u521d\u59cb\u5316\u5219\u968f\u673a \u6b63\u6574\u6570\u539f\u53cd\u8865\u7801\u540c,\u8d1f\u6574\u6570\u8865\u7801\u7684\u8865\u7801\u4e3a\u539f\u7801(-0\u4e3a-2^n-1^);signed -2^n-1^~2^n-1^-1,unsigned 0~2^n^-1,\u4e0d\u5728\u5176\u4e2d\u5219 + 2^n^,\u6ce8\u610f\u6ea2\u51fa\u3001\u622a\u65ad \u7ed3\u6784\u5316\u7a0b\u5e8f\u8bbe\u8ba1,\u5927\u5206\u89e3\u5c0f,\u51fd\u6570\u5d4c\u5957(\u8981\u5df2\u5728\u5916\u5b9a\u4e49) \u200d break\u8df3\u51fa\u5f53\u524d\u5c42\u5faa\u73af\u6216\u5f53\u524dswitch continue\u4e0d\u6267\u884c\u5269\u4e0b\u7684\u8bed\u53e5,\u7acb\u5373\u8fdb\u5165\u4e0b\u4e00\u8f6e(\u53ef\u7528\u4e8e\u7b5b\u9009) \u5faa\u73af\u5d4c\u5957,\u91cc\u5c42\u5148\u52a8,\u65e0{}\u53ea\u7ba1\u4e00\u53e5 if()\u771f\u5219\u6267\u884c\uff0c\u5047\u5219\u4e0d\u6267\u884c\uff0celse\u4e0e\u6700\u8fd1\u672a\u914d\u5bf9\u7684if\u914d\u5bf9 switch(\u6574\u578b\u8868\u8fbe\u5f0f){ case \u5e38\u91cf\u8868\u8fbe\u5f0f:...;break; default:...;//\u65e0\u8bba\u4f4d\u7f6e }case\u53ef\u591a\u4e2a\u5e76\u5217\uff0c\u65e0break\u5f80\u4e0b\u6267\u884c\uff0c\u4e0d\u987ecase while(){\u53ef\u8f93\u5165\u8f93\u51fa} \u5047\u5219\u7ed3\u675f \u5148\u5224\u65ad\u4e00\u6b21 for\uff08\u521d\u59cb(\u53ea\u7b2c\u4e00\u6b21);\u5224\u65ad(\u5047\u5219\u7ed3\u675f);\u6267\u884c(\u7b2c\u4e8c\u8f6e\u53ca\u4ee5\u540e\u5faa\u73af\u5f00\u59cb\u65f6\u6267\u884c){} for(i=0;i<=m;i++) ->m+1,\u6709break\u4e0d\u52a01 do{}while();\u5148\u6267\u884c(\u4e00\u6b21),\u518d\u5224\u65ad \u53ef\u6839\u636ewhile for\u6761\u4ef6\u5224\u65ad \u6570\u7ec4\u4e0d\u662f\u4e00\u7ea7\u6307\u9488,\u5b9a\u4e49\u65f6\u4e0d\u53ef\u8d8a\u754c,sizeof(a)\u4e3a\u4e2a\u6570*sizeof(a[0]) int/char/double/\u7ed3\u6784 \u540d[\u6570\u91cf]={},\u5176\u4f59\u4e3a0 a\u5373&a[0]\u662f\u9996\u5730\u5740\u3001\u6307\u9488\u5e38\u91cf,\u4ee3\u8868\u6574\u4e2a\u6570\u7ec4,\u4e0d\u53efa++,\u4e0d\u53ef\u5bf9a\u8d4b\u503c \u4e0b\u6807\u4e3a0~n-1,i=0 i<n \u4f20\u5165\u51fd\u6570\u662f\u6307\u9488,sizeof(a)\u4e3a\u6307\u9488\u5927\u5c0f 1\u5730\u5740\u4e3a1\u7c7b\u578b\u5b57\u8282 \u5b57\u7b26\u4e32\u662f\u4ee5'\\0'\u7ed3\u5c3e\u7684\u5b57\u7b26\u6570\u7ec4,0\u6807\u5fd7\u7ed3\u675f,\u8ba1\u5165sizeof(s)\u3001s[n],\u4e0d\u8ba1\u5165strlen(s) char s[]={''...0}\u6216\"...\"\u6216{\"...\"},\u4e0d\u53efs++ char *s=\"...\",\u4e32\u4e3a\u6307\u9488\u5e38\u91cf,\u6307\u5411\u9996\u5b57\u7b26,\u81ea\u52a8\u67090,\u53ea\u8bfb\u4e0d\u53ef\u6539 ~~~ ~~~c string.h strlen(s) \u5b57\u7b26\u63620,\u53ef\u80fd\u4f1a\u53d8\uff01 strcmp(s1,s2) strncmp(s1,s2,n)(\u81f3\u591a\u524dn\u4e2a)\u4e00\u5b57\u7b26\u4e00\u5b57\u7b26\u6bd4\u8f83 s1>s2,\u8fd4\u56de>0;s1==s2,\u8fd4\u56de0;s1<s2,\u8fd4\u56de<0 strcpy(s1,s2) strncpy(s1,s2,n)(\u81f3\u591a\u524dn\u4e2a) s2\u4eces1\u9996\u5730\u5740\u5f00\u59cb\u62f7\u8d1d\u5230s1,s2\u76840\u62f7\u8d1d\u540e\u4e3a\u6b62(s1\u5bb9\u91cf!),\u8fd4\u56des1\u9996\u5730\u5740 strcat(s1,s2) strncat(s1,s2,n)(\u81f3\u591a\u524dn\u4e2a) s2\u4eces1\u7b2c\u4e00\u4e2a0\u5f00\u59cb\u62f7\u8d1d,s2\u76840\u62f7\u8d1d\u540e\u4e3a\u6b62(s1\u5bb9\u91cf!),\u8fd4\u56des1\u9996\u5730\u5740 strchr(s,'c') \u4ece\u5de6\u5f80\u53f3\u627e,\u8fd4\u56dec\u51fa\u73b0\u7684\u7b2c\u4e00\u4f4d\u7f6e,\u5426\u5219NULL strrchr(s,'c') \u4ece\u53f3\u5f80\u5de6\u627e strstr(s1,s2) strcasestr(s1,s2)(\u5ffd\u7565\u5927\u5c0f\u5199) ~~~ ~~~c \u6307\u9488\u5c31\u662f\u5730\u5740,\u5730\u5740\u5c31\u662f\u6307\u9488,32\u4f4d4\u5b57\u8282,64\u4f4d8\u5b57\u8282 \u540c\u7c7b\u578b\u53ef\u8d4b\u503c \u53ef\u6bd4\u8f83,\u76f8\u51cf \u4e0d\u6307\u5219\u968f\u673a \u7528*t\u4ea4\u6362 NULL\u662f0\u5730\u5740,\u4e0d\u662f\u7a7a\u5b57\u7b26\u4e32 &\u53d6\u53d8\u91cf\u5730\u5740,\u51fd\u6570\u5185\u4ea4\u6362\u5730\u5740\u4e5f\u4e0d\u4f1a\u6539main\u503c,\u8981\u901a\u8fc7\u6307\u9488\u6539\u503c *\u53d61\u7c7b\u578b\u5927\u5c0f\u7684\u5b57\u8282(\u5730\u5740\u53d8\u91cf\u503c) &i\u4f20\u7ed9*p &a[6]-&a[0]==6,\u65e0\u8bba\u7c7b\u578b char/int/\u7ed3\u6784 *p=&i\u6216a\u6216&a[6],\u53ef\u7528p[i] *p++\u770b\u4f5c\u5148\u53d6\u503c,\u518d\u79fb\u4f4d,\u4e0d\u53ef\u5355\u7528 ++(*p)\u3001(*p)++\u503c\u52a01,\u53ef\u5355\u7528 int *p;(char *)p+1\u4e3ap+1\u7684\u5b57\u8282,\u4f4e\u4f4d\u5728\u53f3,\u4ece\u53f3\u5f80\u5de6\u5904\u7406 struct \u540d{int x;int y;}; struct \u540d \u540d1,\u540d2={...}\u6216{.x=...,.y=...};(\u5747\u6709x,y)\u5176\u5b83\u4e3a0 \u540d1=(struct \u540d){...} \u540d1.x(\u7ed3\u6784\u53d8\u91cf.\u6210\u5458) \u53ef\u76f8\u4e92\u8d4b\u503c struct \u540d *p=&\u540d1 p->x\u76f8\u5f53\u4e8e(*p).x(\u7ed3\u6784\u5730\u5740\u8bbf\u95ee\u6210\u5458) struct \u540d a[n],\u53ef\u7528a[i].x (a+i)->x stdlib.h int *q=(int *)malloc(n*sizeof(int))\u6210\u529f\u8fd4\u56de\u9996\u5730\u5740,\u5426\u5219NULL calloc(n,sizeof())(\u521d\u59cb\u5316\u5168\u4e3a0) realloc(p,sizeof())\u66f4\u6539\u5df2\u5206\u914d\u7684 free(\u539f\u9996\u5730\u5740) #\u5f00\u5934\u662f\u7f16\u8bd1\u9884\u5904\u7406\u547d\u4ee4,\u4e00\u884c\u53ea\u4e00\u4e2a,\u4e0d\u662f\u8bed\u53e5 define \u5f62(\u4e0d\u7a7a\u683c) \u5b9e,\u53ea\u662f\u66ff\u6362,\u4e24\u95f4\u9694\u4e0d\u8bba,\u53ef\u5d4c\u5957 printf\"\u5185\u5bb9\"\u6bd4define\u4f18\u5148 define \u540d(,) ...(\u591a\u52a0\u62ec\u53f7,\u591a\u884c\u65f6\u884c\u5c3e\u524d\u7684\u884c\u672b\u5747\u52a0\\) undef \u540c\u4e00\u76ee\u5f55\u4e0b,#include\"\\\u8def\u5f84(\u540d)\" enum \u540d {\u540d0=,...\u540dn} \u540d1\u9ed8\u8ba4\u4e3a0,\u540e\u4f9d\u6b21\u52a01 unison \u6210\u5458\u5171\u4eab\u4e00\u4e2a\u7a7a\u95f4 typedef \u5df2\u6709\u7c7b\u578b\u540d \u81ea\u5b9a\u4e49\u7c7b\u578b\u540d int *a,b;\u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d a\u4e3a\u6307\u9488 typedef int* t;t a,b; \u200d a b\u5747\u4e3a\u6307\u9488 typedef struct \u540d{} \u81ea\u5b9a\u4e49\u540d; typedef int \u540d[n]; \u547d\u4ee4\u884cmain(int argc,char *argv[])\u8f93\u5165n\u4e2a\u4e32,\u5305\u62ec\u547d\u4ee4\u540d\u3001\u53c2\u6570,argc\u4e3an,argv\u653e\u4e32 \u9012\u5f52(\u5173\u7cfb\u548c\u51fa\u53e3) n\uff01:f(n)...f(1)\u8fd4\u56de0 f(0)\u8fd4\u56de1 \u8f97\u8f6c:r=m%n\u4e3a0\u5219\u8fd4\u56den else m=n,n=r,gcd(m,n) \u987a\u5e8f\u8f93\u51fa:n<10\u8f93\u51fan else sequen(n/10),\u8f93\u51fan%10 \u6c42\u533a\u95f4\u6700\u5c0f\u503c:max(a,m,n) m==n return a[m];else k=(m+n)/2 \u8fd4\u56demax(a,m,k) max(a,k+1,n)\u8f83\u5927\u503c \u94fe\u8868 typedef sruct node{int num;struct node *next}Node; \u5efa\u7acb Node *head=*tail=NULL,*p;p=(Node *)malloc(sizeof(Node)),\u8f93\u5165;while\u91cc\u518d\u5206\u914d; tail\u5f80\u53f3,\u987a\u5e8f:if(head==NULL)head=p;else tail->next=p;tail=p; head\u5f80\u5de6,\u9006\u5e8f:p->next=head,head=p; \u904d\u5386 for(p=head;p;p=p->next) \u63d2\u5165 s->next=p->next,p->next=s; \u5220\u9664 p2=p1->next,p1->next=p2->next(p1->next=p1->next->next),free(p2); n=p->next,p->data=n->data,p->next=n->next,free(n); while(h&&\u6761\u4ef6){p=head;head=head->next;free(p);}p=head; \u5408\u5e76 Node *h=*t=NULL; while(p1&&p2)if()if(h==NULL)h=p1;else t->next=p1;t=p1,p1=p1->next; if(p1)t->next=p1; \u4e8c\u7ef4\u6570\u7ec4 a[m][n]={{}...{}},\u5730\u5740\u76f8\u90bb,n\u4e0d\u53ef\u7701,a\u6307\u5411a[0],a[i]\u6307\u5411a[i][0],\u4e0b\u6807\u4e3a0~m-1,0~n-1 *(a+i)+j\u4e3aa[i][j]\u7684\u5730\u5740 \u6307\u9488\u6570\u7ec4 char/int *b[n],b[i]\u4e3a\u6307\u9488 \u4e8c\u7ea7\u6307\u9488 \u6307\u5411\u4e00\u7ea7\u6307\u9488,char/int **pp=&p,\u7528**ppt\u4ea4\u6362 \u6570\u7ec4\u6307\u9488 char/int (*ap)[n]=&a1\u6216a2,ap\u6307\u5411\u6709n\u4e2a\u5143\u7d20\u7684\u6570\u7ec4 a[m][[n],\u4e0d\u53ef**pp=a\u6216&a\u6216a[0]\u6216&a[0],\u4e5f\u4e0d\u80fd\u4f20 *a[n],**pp=a *pp\u662fa[0],**pp\u662fa[0][0],(*pp)++\u540ea[0]\u6307\u5411\u539fa[0][1],p+1\u6307\u5411a[1] a[m][n],(*ap)[n]=a,ap+1\u6307\u5411a[1] a[m][n],*b[m],b[i]=a[i]; \u51fd\u6570\u6307\u9488:\u51fd\u6570\u540d\u4e3a\u5165\u53e3(\u9996\u5730\u5740),\u7c7b\u578b (*\u6307\u9488\u540d)(,...)=\u51fd\u6570\u540d \u8c03\u7528:(*\u6307\u9488\u540d)(,...) \u6307\u9488\u540d(,...) \u53ef\u4f5c\u4e3a\u51fd\u6570\u53c2\u6570 \u51fd\u6570\u6307\u9488\u6570\u7ec4 \u7c7b\u578b (*p[n])(,...) \u6570\u7ec4\u6307\u9488\u6307\u9488 \u7c7b\u578b *(*p)[n] \u4e8c\u7ea7\u6307\u9488\u6307\u5411\u6307\u9488\u6570\u7ec4\u7684\u4e00\u4e2a,\u6307\u9488\u6570\u7ec4\u5143\u7d20\u6307\u5411\u4e8c\u7ef4\u6570\u7ec4\u6bcf\u884c,\u6570\u7ec4\u6307\u9488\u6307\u5411\u4e8c\u7ef4\u6570\u7ec4\u7684\u4e00\u4e2a: ~~~c char a[3][3]={\"12\",\"34\",\"56\"}; char b[3],( c)[3]; for(int i=0;i<3;i++)b[i]=a[i]; c=a; char p=b; printf(\"%s %s\\n\", (++p), (++c));//34 34 ( p)++; printf(\"%s %s\",b[1], c);//4 34 ~~~ ~~~c extern\u58f0\u660e\u5916\u90e8\u53d8\u91cf\u3001\u51fd\u6570 static\u9759\u6001\u5168\u5c40\u53d8\u91cf\u3001\u9759\u6001\u51fd\u6570(\u5176\u5b83\u6587\u4ef6\u4e0d\u80fd\u7528,\u53ef\u5b9a\u4e49\u51fd\u6570\u6307\u9488\u5728\u5176\u5b83\u6587\u4ef6\u7528) \u6807\u51c6\u5934\u6587\u4ef6\uff1a#ifndef \u540d #define \u540d #endif (\u53eainclude\u4e00\u6b21\uff0c\u9632\u6b62\u91cd\u590d\u5b9a\u4e49) \u6587\u4ef6\u5728\u5916\u90e8\u4ecb\u8d28(\u5982\u78c1\u76d8)\u4e2d,\u4e00\u5b57\u7b26\u4e00\u5b57\u7b26\u987a\u5e8f\u5b58\u653e ASCII\u7801\u5b57\u7b26\u6d41 \u4e8c\u8fdb\u5236\u7801\u4e8c\u8fdb\u5236\u6d41 \u6570\u636e<->\u7f13\u51b2<->\u6587\u4ef6 FILE *fp(\u6307\u5411\u6587\u4ef6\u7ed3\u6784\u4f53) exit(\u6570)\u5173\u95ed\u6240\u6709\u6253\u5f00\u7684\u6587\u4ef6,\u7ec8\u6b62\u7a0b\u5e8f,\u6570\u4e3a0\u6b63\u5e38\u7ed3\u675f,\u5426\u5219\u4e0d\u6b63\u5e38\u7ed3\u675f fopen(\"\u6587\u4ef6\u540d\",\"\u65b9\u5f0f\")\u6210\u529f\u5219\u8fd4\u56deFILE\u578b\u5730\u5740,\u5426\u5219NULL \"r\"\u6253\u5f00\u53ea\u8bfb \"r+\"\u6253\u5f00\u8bfb\u5199 \"w\"\u6e05\u7a7a\u6216\u521b\u5efa,\u53ea\u5199 \"w+\"\u6e05\u7a7a\u6216\u521b\u5efa,\u8bfb\u5199 \"a\"\u6253\u5f00\u6216\u521b\u5efa,\u8ffd\u52a0 \"a+\"\u6253\u5f00\u6216\u521b\u5efa,\u8bfb\u53d6\u8ffd\u52a0(\u4e8c\u8fdb\u5236\u6587\u4ef6\u52a0b) fclose(fp) \u6587\u4ef6\u6307\u9488\u4e0e\u6587\u4ef6\u8131\u94a9,\u7f13\u51b2\u533a\u6570\u636e\u5199\u5165\u78c1\u76d8\u6247\u533a \u6b63\u5e38\u5173\u95ed\u8fd4\u56de0,\u5426\u5219EOF fgetc(fp) \u8fd4\u56de\u8bfb\u53d6\u7684\u5b57\u7b26,\u672b\u5c3e\u6216\u9519\u8bef\u5219\u8fd4\u56deEOF,\u4f4d\u7f6e\u6307\u9488\u540e\u79fb\u4e00\u5b57\u8282 fputc('ch',fp) ch\u5199\u5230\u6587\u4ef6\u4e0a,\u8fd4\u56de\u5b57\u7b26,\u9519\u8bef\u8fd4\u56deEOF,\u4f4d\u7f6e\u6307\u9488\u540e\u79fb fgets(s,n,fp) \u8bfbn-1\u4e2a\u5b57\u7b26\u540e\u6216\u9047\u5230'\\n'(\u4fdd\u7559)\u6216EOF(\u4e0d\u4fdd\u7559)\u505c,\u518d\u81ea\u52a8\u52a0'\\0',\u6210\u529f\u5219\u8fd4\u56des,\u5426\u5219NULL fputs(s,fp) \u5199s\u5230\u6587\u4ef6\u4e0a,\u90470\u6b62,\u4e0d\u4fdd\u7559 \u6210\u529f\u5219\u8fd4\u56de\u6700\u540e\u4e00\u4e2a\u5b57\u7b26,\u5426\u5219EOF fscanf(fp,\"...\",...) \u8bfb\u5165\u503c\u5230\u76f8\u5e94\u53d8\u91cf,\u6210\u529f\u5219\u8fd4\u56de\u4e2a\u6570\uff0c\u5426\u5219NULL fprintf(fp,\"...\",...) \u5199\u76f8\u5e94\u503c\u5230\u6587\u4ef6,\u6210\u529f\u5219\u8fd4\u56de\u603b\u6570,\u5426\u5219\u8d1f\u6570 fwrite/fread(\u6570\u636e\u6307\u9488,\u5927\u5c0f,\u4e2a\u6570,fp)\u4ece\u4e8c\u8fdb\u5236\u6587\u4ef6\u8bfb\u5165\u6570\u636e\u5757\u5230\u6307\u9488 feof(fp) \u672a\u7ed3\u675f(\u5305\u62ecEOF)\u8fd4\u56de0,\u7ed3\u675f\u8fd4\u56de\u975e0 rewind(fp) \u4f4d\u7f6e\u6307\u9488\u6307\u5411\u8bfb\u5199\u6587\u4ef6\u7684\u9996\u5730\u5740 fseek(fp,long int\u504f\u79fb\u91cf,\u521d\u59cb\u4f4d\u7f6e) \u99960(SEEK_SET) \u5f53\u524d1(SEEK_CUR) \u5c3e2(SEEK_END) \u79fb\u52a8\u4f4d\u7f6e\u6307\u9488 ftell(fp) \u8fd4\u56de\u5f53\u524d\u4f4d\u7f6e\u6307\u9488\u504f\u79fb\u7684\u5b57\u8282\u6570(long int),\u9519\u8bef\u8fd4\u56de-1L ferror(fp) \u672a\u51fa\u9519\u8fd4\u56de0,\u5426\u5219\u975e0 clearerr(fp) \u6e05\u9664\u51fa\u9519\u3001\u7ed3\u675f\u6807\u5fd7\u7b26 ~~~ TIPS: {} \u200d \u200d \u200d \u82f1\u6587\u534a\u89d2 \u200d \u200d \u7a7a\u683c\uff01 ; \u200d \u200d \u5b57\u7b26\u4e0e\u6570\u7684\u8f6c\u6362\uff01\uff01\uff01(-'0')\u200d \u200d \u200d \u200d //0\u6b631\u8d1f \u200d \u200d /*0\u50471\u771f*/ /10 %10 /10%10 \u8303\u56f4\u4f4d\u6570 \u8ba1\u6570\u3001\u8ba1\u7b97\u503c\u3001\u8f93\u5165\u503c\u63a7\u5236 \u4fdd\u5b58 i=0%d else %d cnt flag first \u5341:n=n*10+digit \u200d \u200d \u5341\u516d:n=n*16+digit \u4e0d\u8981\u6539\u5faa\u73af\u6761\u4ef6\u91cc\u7684\u53c2\u6570\uff01 \u6768\u8f89\u4e09\u89d2 5\u7a7a\u683c%4d->8\u7a7a\u683c1\u6570\u5b57 %n,0~n-1\u7684\u5faa\u73af \u6570\u7ec4\u5b58\u72b6\u6001\u3001\u5b58\u4f4d\u8fdb\u5236\u8f6c\u6362 \u5faa\u73af\u7ed3\u675f\u540e\u518d\u8d4b\u503c\uff1f \u5341\u8fdb\u5236\u8f6cn while(x){x=x/n} \u8ba1\u4f4d\u6570 while(x){x=x/10,cnt++} for(){for()printf(\"\\n\")} \u52a0\u4e00\u4e2a\u53d8\u91cf \u8f93\u5165\u65e0\u7a7a\u683c while((s[i]=getchar())!='\\n') scanf%s i++\u540e\u8981\u7528a[i-1] strncmp(s1,s2,strlen(s2))==0 \u538b\u7f29\u5b57\u7b26\u4e32:a[n]\u4f20\u5165 p,\u7528q\u6307p,\u6539*q,p\u79fb\u4f4d q=0 \u8ba1\u5355\u8bcd\u6570 !=' '&&flag==1{cnt++,flag=0} scanf\u5185\u5bb9\u8981\u5bf9\u5e94\u9898\u8981\u6c42 \u6bcf\u4e2a\u5b57\u6bcd\u90fd\u8981\u5bf9 \u56de\u6587\u5f80\u4e24\u8fb9 \u5b57\u6bcd\u79fb\u4f4da[i]=(a[i]-'A'+n)%26+'A' a^=b^=a^=b\u4ea4\u6362\u503c (ch=fgetc(fp))!=EOF","title":"C"},{"location":"c/#include-sqrt-fabs-pow-expa-loga-double","text":"\u51fd\u6570\u58f0\u660e\u3001\u8c03\u7528\u3001\u81ea\u5b9a\u4e49(\u8fd4\u56de\u7c7b\u578b) return\u7ec8\u6b62 \u4e0d\u5d4c\u5957\u5b9a\u4e49 \u4ece\u53f3\u5f80\u5de6\u5904\u7406\u53c2\u6570 \u9ed8\u8ba4\u8fd4\u56deint\u578b \u91cc\u9762\u5b9a\u4e49\u7684\u6570\u7ec4\u4f1a\u6d88\u5931,\u4e0d\u80fd\u8fd4\u56de\u5185\u90e8\u5b9a\u4e49\u7684\u81ea\u52a8\u53d8\u91cf\u5730\u5740 \u4e0d\u7528\u6307\u9488,\u5f62\u53c2\u4e0d\u6539\u53d8\u5b9e\u53c2,\u53ea\u4f20\u503c {\u5c40\u90e8}\u5916\u7528\u4e8e\u5185\uff0c\u5185\u4e0d\u7528\u4e8e\u5916\uff0c\u540c\u540d\u65f6\u5c40\u90e8\u4f18\u5148;\u5168\u5c40\u53d8\u91cf(main\u4e4b\u524d\u5c31\u521d\u59cb\u5316)\u3001\u9759\u6001\u5c40\u90e8\u53d8\u91cfstatic \u7c7b\u578b \u540d(\u4f5c\u7528\u4e8e\u5c40\u90e8,\u4e00\u76f4\u5b58\u5728)\u672a\u521d\u59cb\u5316\u5219\u4e3a0,\u5c40\u90e8\u53d8\u91cf(\u8fdb\u5165\u8bed\u53e5\u65f6\u5206\u914d\u5b58\u50a8)\u672a\u521d\u59cb\u5316\u5219\u968f\u673a \u6b63\u6574\u6570\u539f\u53cd\u8865\u7801\u540c,\u8d1f\u6574\u6570\u8865\u7801\u7684\u8865\u7801\u4e3a\u539f\u7801(-0\u4e3a-2^n-1^);signed -2^n-1^~2^n-1^-1,unsigned 0~2^n^-1,\u4e0d\u5728\u5176\u4e2d\u5219 + 2^n^,\u6ce8\u610f\u6ea2\u51fa\u3001\u622a\u65ad \u7ed3\u6784\u5316\u7a0b\u5e8f\u8bbe\u8ba1,\u5927\u5206\u89e3\u5c0f,\u51fd\u6570\u5d4c\u5957(\u8981\u5df2\u5728\u5916\u5b9a\u4e49) \u200d break\u8df3\u51fa\u5f53\u524d\u5c42\u5faa\u73af\u6216\u5f53\u524dswitch continue\u4e0d\u6267\u884c\u5269\u4e0b\u7684\u8bed\u53e5,\u7acb\u5373\u8fdb\u5165\u4e0b\u4e00\u8f6e(\u53ef\u7528\u4e8e\u7b5b\u9009) \u5faa\u73af\u5d4c\u5957,\u91cc\u5c42\u5148\u52a8,\u65e0{}\u53ea\u7ba1\u4e00\u53e5 if()\u771f\u5219\u6267\u884c\uff0c\u5047\u5219\u4e0d\u6267\u884c\uff0celse\u4e0e\u6700\u8fd1\u672a\u914d\u5bf9\u7684if\u914d\u5bf9 switch(\u6574\u578b\u8868\u8fbe\u5f0f){ case \u5e38\u91cf\u8868\u8fbe\u5f0f:...;break; default:...;//\u65e0\u8bba\u4f4d\u7f6e }case\u53ef\u591a\u4e2a\u5e76\u5217\uff0c\u65e0break\u5f80\u4e0b\u6267\u884c\uff0c\u4e0d\u987ecase while(){\u53ef\u8f93\u5165\u8f93\u51fa} \u5047\u5219\u7ed3\u675f \u5148\u5224\u65ad\u4e00\u6b21 for\uff08\u521d\u59cb(\u53ea\u7b2c\u4e00\u6b21);\u5224\u65ad(\u5047\u5219\u7ed3\u675f);\u6267\u884c(\u7b2c\u4e8c\u8f6e\u53ca\u4ee5\u540e\u5faa\u73af\u5f00\u59cb\u65f6\u6267\u884c){} for(i=0;i<=m;i++) ->m+1,\u6709break\u4e0d\u52a01 do{}while();\u5148\u6267\u884c(\u4e00\u6b21),\u518d\u5224\u65ad \u53ef\u6839\u636ewhile for\u6761\u4ef6\u5224\u65ad \u6570\u7ec4\u4e0d\u662f\u4e00\u7ea7\u6307\u9488,\u5b9a\u4e49\u65f6\u4e0d\u53ef\u8d8a\u754c,sizeof(a)\u4e3a\u4e2a\u6570*sizeof(a[0]) int/char/double/\u7ed3\u6784 \u540d[\u6570\u91cf]={},\u5176\u4f59\u4e3a0 a\u5373&a[0]\u662f\u9996\u5730\u5740\u3001\u6307\u9488\u5e38\u91cf,\u4ee3\u8868\u6574\u4e2a\u6570\u7ec4,\u4e0d\u53efa++,\u4e0d\u53ef\u5bf9a\u8d4b\u503c \u4e0b\u6807\u4e3a0~n-1,i=0 i<n \u4f20\u5165\u51fd\u6570\u662f\u6307\u9488,sizeof(a)\u4e3a\u6307\u9488\u5927\u5c0f 1\u5730\u5740\u4e3a1\u7c7b\u578b\u5b57\u8282 \u5b57\u7b26\u4e32\u662f\u4ee5'\\0'\u7ed3\u5c3e\u7684\u5b57\u7b26\u6570\u7ec4,0\u6807\u5fd7\u7ed3\u675f,\u8ba1\u5165sizeof(s)\u3001s[n],\u4e0d\u8ba1\u5165strlen(s) char s[]={''...0}\u6216\"...\"\u6216{\"...\"},\u4e0d\u53efs++ char *s=\"...\",\u4e32\u4e3a\u6307\u9488\u5e38\u91cf,\u6307\u5411\u9996\u5b57\u7b26,\u81ea\u52a8\u67090,\u53ea\u8bfb\u4e0d\u53ef\u6539 ~~~ ~~~c string.h strlen(s) \u5b57\u7b26\u63620,\u53ef\u80fd\u4f1a\u53d8\uff01 strcmp(s1,s2) strncmp(s1,s2,n)(\u81f3\u591a\u524dn\u4e2a)\u4e00\u5b57\u7b26\u4e00\u5b57\u7b26\u6bd4\u8f83 s1>s2,\u8fd4\u56de>0;s1==s2,\u8fd4\u56de0;s1<s2,\u8fd4\u56de<0 strcpy(s1,s2) strncpy(s1,s2,n)(\u81f3\u591a\u524dn\u4e2a) s2\u4eces1\u9996\u5730\u5740\u5f00\u59cb\u62f7\u8d1d\u5230s1,s2\u76840\u62f7\u8d1d\u540e\u4e3a\u6b62(s1\u5bb9\u91cf!),\u8fd4\u56des1\u9996\u5730\u5740 strcat(s1,s2) strncat(s1,s2,n)(\u81f3\u591a\u524dn\u4e2a) s2\u4eces1\u7b2c\u4e00\u4e2a0\u5f00\u59cb\u62f7\u8d1d,s2\u76840\u62f7\u8d1d\u540e\u4e3a\u6b62(s1\u5bb9\u91cf!),\u8fd4\u56des1\u9996\u5730\u5740 strchr(s,'c') \u4ece\u5de6\u5f80\u53f3\u627e,\u8fd4\u56dec\u51fa\u73b0\u7684\u7b2c\u4e00\u4f4d\u7f6e,\u5426\u5219NULL strrchr(s,'c') \u4ece\u53f3\u5f80\u5de6\u627e strstr(s1,s2) strcasestr(s1,s2)(\u5ffd\u7565\u5927\u5c0f\u5199) ~~~ ~~~c \u6307\u9488\u5c31\u662f\u5730\u5740,\u5730\u5740\u5c31\u662f\u6307\u9488,32\u4f4d4\u5b57\u8282,64\u4f4d8\u5b57\u8282 \u540c\u7c7b\u578b\u53ef\u8d4b\u503c \u53ef\u6bd4\u8f83,\u76f8\u51cf \u4e0d\u6307\u5219\u968f\u673a \u7528*t\u4ea4\u6362 NULL\u662f0\u5730\u5740,\u4e0d\u662f\u7a7a\u5b57\u7b26\u4e32 &\u53d6\u53d8\u91cf\u5730\u5740,\u51fd\u6570\u5185\u4ea4\u6362\u5730\u5740\u4e5f\u4e0d\u4f1a\u6539main\u503c,\u8981\u901a\u8fc7\u6307\u9488\u6539\u503c *\u53d61\u7c7b\u578b\u5927\u5c0f\u7684\u5b57\u8282(\u5730\u5740\u53d8\u91cf\u503c) &i\u4f20\u7ed9*p &a[6]-&a[0]==6,\u65e0\u8bba\u7c7b\u578b char/int/\u7ed3\u6784 *p=&i\u6216a\u6216&a[6],\u53ef\u7528p[i] *p++\u770b\u4f5c\u5148\u53d6\u503c,\u518d\u79fb\u4f4d,\u4e0d\u53ef\u5355\u7528 ++(*p)\u3001(*p)++\u503c\u52a01,\u53ef\u5355\u7528 int *p;(char *)p+1\u4e3ap+1\u7684\u5b57\u8282,\u4f4e\u4f4d\u5728\u53f3,\u4ece\u53f3\u5f80\u5de6\u5904\u7406 struct \u540d{int x;int y;}; struct \u540d \u540d1,\u540d2={...}\u6216{.x=...,.y=...};(\u5747\u6709x,y)\u5176\u5b83\u4e3a0 \u540d1=(struct \u540d){...} \u540d1.x(\u7ed3\u6784\u53d8\u91cf.\u6210\u5458) \u53ef\u76f8\u4e92\u8d4b\u503c struct \u540d *p=&\u540d1 p->x\u76f8\u5f53\u4e8e(*p).x(\u7ed3\u6784\u5730\u5740\u8bbf\u95ee\u6210\u5458) struct \u540d a[n],\u53ef\u7528a[i].x (a+i)->x stdlib.h int *q=(int *)malloc(n*sizeof(int))\u6210\u529f\u8fd4\u56de\u9996\u5730\u5740,\u5426\u5219NULL calloc(n,sizeof())(\u521d\u59cb\u5316\u5168\u4e3a0) realloc(p,sizeof())\u66f4\u6539\u5df2\u5206\u914d\u7684 free(\u539f\u9996\u5730\u5740) #\u5f00\u5934\u662f\u7f16\u8bd1\u9884\u5904\u7406\u547d\u4ee4,\u4e00\u884c\u53ea\u4e00\u4e2a,\u4e0d\u662f\u8bed\u53e5","title":"include sqrt() fabs() pow(,) expa() loga() \u5747\u8fd4\u56dedouble\u578b"},{"location":"c/#define-printfdefine","text":"","title":"define \u5f62(\u4e0d\u7a7a\u683c) \u5b9e,\u53ea\u662f\u66ff\u6362,\u4e24\u95f4\u9694\u4e0d\u8bba,\u53ef\u5d4c\u5957 printf\"\u5185\u5bb9\"\u6bd4define\u4f18\u5148"},{"location":"c/#define","text":"","title":"define \u540d(,) ...(\u591a\u52a0\u62ec\u53f7,\u591a\u884c\u65f6\u884c\u5c3e\u524d\u7684\u884c\u672b\u5747\u52a0\\)"},{"location":"c/#undef","text":"\u540c\u4e00\u76ee\u5f55\u4e0b,#include\"\\\u8def\u5f84(\u540d)\" enum \u540d {\u540d0=,...\u540dn} \u540d1\u9ed8\u8ba4\u4e3a0,\u540e\u4f9d\u6b21\u52a01 unison \u6210\u5458\u5171\u4eab\u4e00\u4e2a\u7a7a\u95f4 typedef \u5df2\u6709\u7c7b\u578b\u540d \u81ea\u5b9a\u4e49\u7c7b\u578b\u540d int *a,b;\u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d a\u4e3a\u6307\u9488 typedef int* t;t a,b; \u200d a b\u5747\u4e3a\u6307\u9488 typedef struct \u540d{} \u81ea\u5b9a\u4e49\u540d; typedef int \u540d[n]; \u547d\u4ee4\u884cmain(int argc,char *argv[])\u8f93\u5165n\u4e2a\u4e32,\u5305\u62ec\u547d\u4ee4\u540d\u3001\u53c2\u6570,argc\u4e3an,argv\u653e\u4e32 \u9012\u5f52(\u5173\u7cfb\u548c\u51fa\u53e3) n\uff01:f(n)...f(1)\u8fd4\u56de0 f(0)\u8fd4\u56de1 \u8f97\u8f6c:r=m%n\u4e3a0\u5219\u8fd4\u56den else m=n,n=r,gcd(m,n) \u987a\u5e8f\u8f93\u51fa:n<10\u8f93\u51fan else sequen(n/10),\u8f93\u51fan%10 \u6c42\u533a\u95f4\u6700\u5c0f\u503c:max(a,m,n) m==n return a[m];else k=(m+n)/2 \u8fd4\u56demax(a,m,k) max(a,k+1,n)\u8f83\u5927\u503c \u94fe\u8868 typedef sruct node{int num;struct node *next}Node; \u5efa\u7acb Node *head=*tail=NULL,*p;p=(Node *)malloc(sizeof(Node)),\u8f93\u5165;while\u91cc\u518d\u5206\u914d; tail\u5f80\u53f3,\u987a\u5e8f:if(head==NULL)head=p;else tail->next=p;tail=p; head\u5f80\u5de6,\u9006\u5e8f:p->next=head,head=p; \u904d\u5386 for(p=head;p;p=p->next) \u63d2\u5165 s->next=p->next,p->next=s; \u5220\u9664 p2=p1->next,p1->next=p2->next(p1->next=p1->next->next),free(p2); n=p->next,p->data=n->data,p->next=n->next,free(n); while(h&&\u6761\u4ef6){p=head;head=head->next;free(p);}p=head; \u5408\u5e76 Node *h=*t=NULL; while(p1&&p2)if()if(h==NULL)h=p1;else t->next=p1;t=p1,p1=p1->next; if(p1)t->next=p1; \u4e8c\u7ef4\u6570\u7ec4 a[m][n]={{}...{}},\u5730\u5740\u76f8\u90bb,n\u4e0d\u53ef\u7701,a\u6307\u5411a[0],a[i]\u6307\u5411a[i][0],\u4e0b\u6807\u4e3a0~m-1,0~n-1 *(a+i)+j\u4e3aa[i][j]\u7684\u5730\u5740 \u6307\u9488\u6570\u7ec4 char/int *b[n],b[i]\u4e3a\u6307\u9488 \u4e8c\u7ea7\u6307\u9488 \u6307\u5411\u4e00\u7ea7\u6307\u9488,char/int **pp=&p,\u7528**ppt\u4ea4\u6362 \u6570\u7ec4\u6307\u9488 char/int (*ap)[n]=&a1\u6216a2,ap\u6307\u5411\u6709n\u4e2a\u5143\u7d20\u7684\u6570\u7ec4 a[m][[n],\u4e0d\u53ef**pp=a\u6216&a\u6216a[0]\u6216&a[0],\u4e5f\u4e0d\u80fd\u4f20 *a[n],**pp=a *pp\u662fa[0],**pp\u662fa[0][0],(*pp)++\u540ea[0]\u6307\u5411\u539fa[0][1],p+1\u6307\u5411a[1] a[m][n],(*ap)[n]=a,ap+1\u6307\u5411a[1] a[m][n],*b[m],b[i]=a[i]; \u51fd\u6570\u6307\u9488:\u51fd\u6570\u540d\u4e3a\u5165\u53e3(\u9996\u5730\u5740),\u7c7b\u578b (*\u6307\u9488\u540d)(,...)=\u51fd\u6570\u540d \u8c03\u7528:(*\u6307\u9488\u540d)(,...) \u6307\u9488\u540d(,...) \u53ef\u4f5c\u4e3a\u51fd\u6570\u53c2\u6570 \u51fd\u6570\u6307\u9488\u6570\u7ec4 \u7c7b\u578b (*p[n])(,...) \u6570\u7ec4\u6307\u9488\u6307\u9488 \u7c7b\u578b *(*p)[n] \u4e8c\u7ea7\u6307\u9488\u6307\u5411\u6307\u9488\u6570\u7ec4\u7684\u4e00\u4e2a,\u6307\u9488\u6570\u7ec4\u5143\u7d20\u6307\u5411\u4e8c\u7ef4\u6570\u7ec4\u6bcf\u884c,\u6570\u7ec4\u6307\u9488\u6307\u5411\u4e8c\u7ef4\u6570\u7ec4\u7684\u4e00\u4e2a: ~~~c char a[3][3]={\"12\",\"34\",\"56\"}; char b[3],( c)[3]; for(int i=0;i<3;i++)b[i]=a[i]; c=a; char p=b; printf(\"%s %s\\n\", (++p), (++c));//34 34 ( p)++; printf(\"%s %s\",b[1], c);//4 34 ~~~ ~~~c extern\u58f0\u660e\u5916\u90e8\u53d8\u91cf\u3001\u51fd\u6570 static\u9759\u6001\u5168\u5c40\u53d8\u91cf\u3001\u9759\u6001\u51fd\u6570(\u5176\u5b83\u6587\u4ef6\u4e0d\u80fd\u7528,\u53ef\u5b9a\u4e49\u51fd\u6570\u6307\u9488\u5728\u5176\u5b83\u6587\u4ef6\u7528) \u6807\u51c6\u5934\u6587\u4ef6\uff1a#ifndef \u540d #define \u540d #endif (\u53eainclude\u4e00\u6b21\uff0c\u9632\u6b62\u91cd\u590d\u5b9a\u4e49) \u6587\u4ef6\u5728\u5916\u90e8\u4ecb\u8d28(\u5982\u78c1\u76d8)\u4e2d,\u4e00\u5b57\u7b26\u4e00\u5b57\u7b26\u987a\u5e8f\u5b58\u653e ASCII\u7801\u5b57\u7b26\u6d41 \u4e8c\u8fdb\u5236\u7801\u4e8c\u8fdb\u5236\u6d41 \u6570\u636e<->\u7f13\u51b2<->\u6587\u4ef6 FILE *fp(\u6307\u5411\u6587\u4ef6\u7ed3\u6784\u4f53) exit(\u6570)\u5173\u95ed\u6240\u6709\u6253\u5f00\u7684\u6587\u4ef6,\u7ec8\u6b62\u7a0b\u5e8f,\u6570\u4e3a0\u6b63\u5e38\u7ed3\u675f,\u5426\u5219\u4e0d\u6b63\u5e38\u7ed3\u675f fopen(\"\u6587\u4ef6\u540d\",\"\u65b9\u5f0f\")\u6210\u529f\u5219\u8fd4\u56deFILE\u578b\u5730\u5740,\u5426\u5219NULL \"r\"\u6253\u5f00\u53ea\u8bfb \"r+\"\u6253\u5f00\u8bfb\u5199 \"w\"\u6e05\u7a7a\u6216\u521b\u5efa,\u53ea\u5199 \"w+\"\u6e05\u7a7a\u6216\u521b\u5efa,\u8bfb\u5199 \"a\"\u6253\u5f00\u6216\u521b\u5efa,\u8ffd\u52a0 \"a+\"\u6253\u5f00\u6216\u521b\u5efa,\u8bfb\u53d6\u8ffd\u52a0(\u4e8c\u8fdb\u5236\u6587\u4ef6\u52a0b) fclose(fp) \u6587\u4ef6\u6307\u9488\u4e0e\u6587\u4ef6\u8131\u94a9,\u7f13\u51b2\u533a\u6570\u636e\u5199\u5165\u78c1\u76d8\u6247\u533a \u6b63\u5e38\u5173\u95ed\u8fd4\u56de0,\u5426\u5219EOF fgetc(fp) \u8fd4\u56de\u8bfb\u53d6\u7684\u5b57\u7b26,\u672b\u5c3e\u6216\u9519\u8bef\u5219\u8fd4\u56deEOF,\u4f4d\u7f6e\u6307\u9488\u540e\u79fb\u4e00\u5b57\u8282 fputc('ch',fp) ch\u5199\u5230\u6587\u4ef6\u4e0a,\u8fd4\u56de\u5b57\u7b26,\u9519\u8bef\u8fd4\u56deEOF,\u4f4d\u7f6e\u6307\u9488\u540e\u79fb fgets(s,n,fp) \u8bfbn-1\u4e2a\u5b57\u7b26\u540e\u6216\u9047\u5230'\\n'(\u4fdd\u7559)\u6216EOF(\u4e0d\u4fdd\u7559)\u505c,\u518d\u81ea\u52a8\u52a0'\\0',\u6210\u529f\u5219\u8fd4\u56des,\u5426\u5219NULL fputs(s,fp) \u5199s\u5230\u6587\u4ef6\u4e0a,\u90470\u6b62,\u4e0d\u4fdd\u7559 \u6210\u529f\u5219\u8fd4\u56de\u6700\u540e\u4e00\u4e2a\u5b57\u7b26,\u5426\u5219EOF fscanf(fp,\"...\",...) \u8bfb\u5165\u503c\u5230\u76f8\u5e94\u53d8\u91cf,\u6210\u529f\u5219\u8fd4\u56de\u4e2a\u6570\uff0c\u5426\u5219NULL fprintf(fp,\"...\",...) \u5199\u76f8\u5e94\u503c\u5230\u6587\u4ef6,\u6210\u529f\u5219\u8fd4\u56de\u603b\u6570,\u5426\u5219\u8d1f\u6570 fwrite/fread(\u6570\u636e\u6307\u9488,\u5927\u5c0f,\u4e2a\u6570,fp)\u4ece\u4e8c\u8fdb\u5236\u6587\u4ef6\u8bfb\u5165\u6570\u636e\u5757\u5230\u6307\u9488 feof(fp) \u672a\u7ed3\u675f(\u5305\u62ecEOF)\u8fd4\u56de0,\u7ed3\u675f\u8fd4\u56de\u975e0 rewind(fp) \u4f4d\u7f6e\u6307\u9488\u6307\u5411\u8bfb\u5199\u6587\u4ef6\u7684\u9996\u5730\u5740 fseek(fp,long int\u504f\u79fb\u91cf,\u521d\u59cb\u4f4d\u7f6e) \u99960(SEEK_SET) \u5f53\u524d1(SEEK_CUR) \u5c3e2(SEEK_END) \u79fb\u52a8\u4f4d\u7f6e\u6307\u9488 ftell(fp) \u8fd4\u56de\u5f53\u524d\u4f4d\u7f6e\u6307\u9488\u504f\u79fb\u7684\u5b57\u8282\u6570(long int),\u9519\u8bef\u8fd4\u56de-1L ferror(fp) \u672a\u51fa\u9519\u8fd4\u56de0,\u5426\u5219\u975e0 clearerr(fp) \u6e05\u9664\u51fa\u9519\u3001\u7ed3\u675f\u6807\u5fd7\u7b26 ~~~ TIPS: {} \u200d \u200d \u200d \u82f1\u6587\u534a\u89d2 \u200d \u200d \u7a7a\u683c\uff01 ; \u200d \u200d \u5b57\u7b26\u4e0e\u6570\u7684\u8f6c\u6362\uff01\uff01\uff01(-'0')\u200d \u200d \u200d \u200d //0\u6b631\u8d1f \u200d \u200d /*0\u50471\u771f*/ /10 %10 /10%10 \u8303\u56f4\u4f4d\u6570 \u8ba1\u6570\u3001\u8ba1\u7b97\u503c\u3001\u8f93\u5165\u503c\u63a7\u5236 \u4fdd\u5b58 i=0%d else %d cnt flag first \u5341:n=n*10+digit \u200d \u200d \u5341\u516d:n=n*16+digit \u4e0d\u8981\u6539\u5faa\u73af\u6761\u4ef6\u91cc\u7684\u53c2\u6570\uff01 \u6768\u8f89\u4e09\u89d2 5\u7a7a\u683c%4d->8\u7a7a\u683c1\u6570\u5b57 %n,0~n-1\u7684\u5faa\u73af \u6570\u7ec4\u5b58\u72b6\u6001\u3001\u5b58\u4f4d\u8fdb\u5236\u8f6c\u6362 \u5faa\u73af\u7ed3\u675f\u540e\u518d\u8d4b\u503c\uff1f \u5341\u8fdb\u5236\u8f6cn while(x){x=x/n} \u8ba1\u4f4d\u6570 while(x){x=x/10,cnt++} for(){for()printf(\"\\n\")} \u52a0\u4e00\u4e2a\u53d8\u91cf \u8f93\u5165\u65e0\u7a7a\u683c while((s[i]=getchar())!='\\n') scanf%s i++\u540e\u8981\u7528a[i-1] strncmp(s1,s2,strlen(s2))==0 \u538b\u7f29\u5b57\u7b26\u4e32:a[n]\u4f20\u5165 p,\u7528q\u6307p,\u6539*q,p\u79fb\u4f4d q=0 \u8ba1\u5355\u8bcd\u6570 !=' '&&flag==1{cnt++,flag=0} scanf\u5185\u5bb9\u8981\u5bf9\u5e94\u9898\u8981\u6c42 \u6bcf\u4e2a\u5b57\u6bcd\u90fd\u8981\u5bf9 \u56de\u6587\u5f80\u4e24\u8fb9 \u5b57\u6bcd\u79fb\u4f4da[i]=(a[i]-'A'+n)%26+'A' a^=b^=a^=b\u4ea4\u6362\u503c (ch=fgetc(fp))!=EOF","title":"undef"},{"location":"git/","text":"\u6587\u4ef6\u4e09\u7c7b\u522b:Untracked tracked Ignored \u5de5\u4f5c\u533a \u200d \u200d \u200dadd \u200d \u200d \u200d \u6682\u5b58\u533a \u200d \u200d \u200dcommit \u200d \u200d \u200d \u4ed3\u5e93 \u200d \u200d \u200dpush/pull \u200d \u200d \u200d \u8fdc\u7a0b + git init (\u540d) \u521bgit\u4ed3\u5e93,\u9ed8\u8ba4\u4e3a\u5f53\u524d + git\u8d26\u53f7\u5168\u5c40\u8bbe\u7f6e: git config --global user.name \"\u540d\" \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d\u200d \u200d git config --global user.email \"\u90ae\u7bb1\" \u4ed3\u5e93\u6839\u76ee\u5f55\u4e0b\u521b.gitignore #\u6ce8\u91ca *.c a/**/b /\u5f00\u5934\u5339\u914d\u6839\u76ee\u5f55,\u5426\u5219\u6240\u6709\u76ee\u5f55 !\u53d6\u6d88\u5ffd\u7565 git check-ignore -v \u6587\u4ef6 \u67e5\u770b\u662f\u5426\u5ffd\u7565 git ls-files \u5217\u51fa\u8ddf\u8e2a\u7684\u6587\u4ef6 -t\u5df2\u8ddf\u8e2a\u6587\u4ef6 -c\u5df2\u6682\u5b58\u6587\u4ef6 -o\u672a\u8ddf\u8e2a\u6587\u4ef6 git status \u200d \u200d \u200d \u200d \u200d \u200d \u67e5\u770b\u5de5\u4f5c\u533a\u3001\u6682\u5b58\u533a\u72b6\u6001 git diff \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u5de5\u4f5c\u533a\u548c\u6682\u5b58\u533a\u5dee\u5f02 git diff \u5206\u652f \u200d \u200d \u200d \u5de5\u4f5c\u533a\u548c\u5206\u652f\u5dee\u5f02 git diff \u5206\u652f1 \u5206\u652f2 \u4e24\u5206\u652f\u5dee\u5f02 git add \u6587\u4ef6 \u200d \u200d \u200d \u200d \u53ea\u6682\u5b58\u4fee\u6539\u8fc7\u7684\u6587\u4ef6,\u53ef*.c git add . \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u6682\u5b58\u5f53\u524d\u76ee\u5f55\u6240\u6709\u4fee\u6539\u8fc7\u7684\u6587\u4ef6 git rm --cached \u6587\u4ef6 \u4ece\u6682\u5b58\u533a\u4e2d\u53bb\u9664 git rm \u540d1 \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u5220\u9664\u672c\u5730\u548c\u4ed3\u5e93\u7684\u6587\u4ef6 git mv \u540d1 \u540d2 mv\u672c\u5730\u548c\u4ed3\u5e93\u7684\u6587\u4ef6 \u200d \u200d git log \u67e5\u770b\u63d0\u4ea4\u5386\u53f2--graph\u663e\u793a\u5206\u652f\u7ed3\u6784 --oneline\u663e\u793a\u4e00\u884c --p\u663e\u793a\u4fee\u6539\u4fe1\u606f git commit -m \"\u4fe1\u606f\" <type>[scope]:<summary> [body][footer] type:fix(\u4fee\u590d)feat(\u65b0\u529f\u80fd)docs(\u66f4\u6539)refactor(\u4ee3\u7801\u91cd\u6784)perf(\u6027\u80fd\u6d4b\u8bd5)test(\u529f\u80fd\u6d4b\u8bd5)ci(\u96c6\u6210\u6d4b\u8bd5)BREAKING DEPRECATED footer:Fixes #id\u548cCloses #id\u8868\u793a\u89e3\u51b3 git show id \u663e\u793a\u5177\u4f53\u4fe1\u606f,id\u4e3a\u6bcf\u4e00\u63d0\u4ea4\u7684\u6807\u8bc6,\u4e0d\u5fc5\u5b8c\u6574 git tag \u540d (id) \u521b\u6807\u7b7e\uff0c\u9ed8\u8ba4head git tag \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u67e5\u770b\u6807\u7b7e \u56de\u6eaf: git checkout id/main HEAD MAIN git branch \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u67e5\u770b\u5206\u652f git branch \u6807\u7b7e\u540d (id) \u7ed9\u5206\u652f\u6807\u7b7e\u540d\u9632\u4e22\u5931,\u9ed8\u8ba4HEAD git branch \u540d \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u521b\u5206\u652f git branch -d \u5206\u652f\u540d \u5220\u9664\u5df2\u5408\u5e76\u5206\u652f git branch -D \u5206\u652f\u540d \u5f3a\u5236\u5220\u9664\u5206\u652f git checkout \u5206\u652f \u200d \u200d \u200d (-b\u521b\u5efa)\u5207\u6362\u5206\u652f(\u4fee\u6539\u540e\u8fd8\u8981add\u3001commit) git merge \u5206\u652f \u5408\u5e76\u5230\u5f53\u524d\u5206\u652f,\u6709\u51b2\u7a81,\u5219vscode\u91cc\u9009\u62e9,add\u3001commit,\u503e\u5411\u4e8e\u591a \u200d \u200d \u4ece\u672c\u5730 push/pull Github\u4ed3\u5e93 git clone \u4ed3\u5e93\u7f51\u5740 \u521b\u4e00\u4e2a\u76ee\u5f55,\u8d26\u53f7\u5168\u5c40\u8bbe\u7f6e \u200d \u518dadd\u3001commit git push (\u4e0d\u8981\u5f00\u5916\u7f51\uff1f) git reset HEAD~\u6570\u00b7 \u56de\u9000\u4e4b\u524d\u7684\u7248\u672c git reset --soft \u4fdd\u7559\u6682\u5b58\u533a\u548c\u5de5\u4f5c\u533a\u7684\u6240\u6709\u5185\u5bb9\uff0c\u53ea\u56de\u6eafcommit\u5185\u5bb9 git reset --hard \u5220\u9664\u6682\u5b58\u533a\u548c\u5de5\u4f5c\u533a\u7684\u6240\u6709\u5185\u5bb9\uff0c\u56de\u6eafcommit git reset --mixed \u5220\u9664\u6682\u5b58\u533a\u5185\u5bb9\uff0c\u4fdd\u7559\u5de5\u4f5c\u533a\u5185\u5bb9\uff0c\u56de\u6eafcommit \u7528\u4ee4\u724c\u767b\u5f55 settings->developer settings->personal access tokens->Tokens(classic)->Generate new token(classic)\u4f5c\u4e3a\u5bc6\u7801 \u7b7e\u7f72commit gpg --full-generate-key \u5747\u9ed8\u8ba4 \u540d\u8bbe\u4e3agithub\u540d sec/\u4e0e\u65e5\u671f\u95f4\u7684\u6570\u5b57\u4e32\u4e3a\u5bc6\u94a5 gpg --armor --export \u5bc6\u94a5->\u516c\u94a5 SSH and GPG keys->new GPG key git commit -S -m \"\" (\u8f93\u5165\u79c1\u94a5\u5bc6\u7801) \u53efinvite collaborators,\u4f7f\u4e4b\u6709\u6743\u9650\u5728\u672c\u5730push PR fork git remote add \u4ed3\u5e93\u522b\u540d \u7f51\u5740 -v\u67e5\u770b git push -u \u8fdc\u7a0b\u4ed3\u5e93\u540d main contribute\u91ccopen pull request \u672c\u6e90\u4ed3\u5e93pull requests\u91ccMerge pull request(\u53ef\u80fd\u8981Resolve conflicts) fork\u4ed3\u5e93\u53efsync fork\u91ccupdate \u5728\u672c\u5730git pull \u8fdc\u7a0b\u4ed3\u5e93\u540d \u8fdc\u7a0b\u5206\u652f\u540d:\u672c\u5730\u5206\u652f\u540d pull request\u540e\u518dpush\u4f1a\u6539\u53d8pull request\u5185\u5bb9 \u672c\u6e90\u4ed3\u5e93\u53ef\u5728pull request\u91ccReview changes\u8981\u6c42fork\u8005\u66f4\u6539,\u53ef\u518dapprove \u53ef\u76f4\u63a5\u4fee\u6539,\u518dcommit,\u4f1a\u6539fork","title":"Git"},{"location":"git/#head-main","text":"git branch \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u67e5\u770b\u5206\u652f git branch \u6807\u7b7e\u540d (id) \u7ed9\u5206\u652f\u6807\u7b7e\u540d\u9632\u4e22\u5931,\u9ed8\u8ba4HEAD git branch \u540d \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u521b\u5206\u652f git branch -d \u5206\u652f\u540d \u5220\u9664\u5df2\u5408\u5e76\u5206\u652f git branch -D \u5206\u652f\u540d \u5f3a\u5236\u5220\u9664\u5206\u652f git checkout \u5206\u652f \u200d \u200d \u200d (-b\u521b\u5efa)\u5207\u6362\u5206\u652f(\u4fee\u6539\u540e\u8fd8\u8981add\u3001commit) git merge \u5206\u652f \u5408\u5e76\u5230\u5f53\u524d\u5206\u652f,\u6709\u51b2\u7a81,\u5219vscode\u91cc\u9009\u62e9,add\u3001commit,\u503e\u5411\u4e8e\u591a \u200d \u200d","title":"HEAD MAIN"},{"location":"git/#pushpull-github","text":"git clone \u4ed3\u5e93\u7f51\u5740 \u521b\u4e00\u4e2a\u76ee\u5f55,\u8d26\u53f7\u5168\u5c40\u8bbe\u7f6e \u200d \u518dadd\u3001commit git push (\u4e0d\u8981\u5f00\u5916\u7f51\uff1f) git reset HEAD~\u6570\u00b7 \u56de\u9000\u4e4b\u524d\u7684\u7248\u672c git reset --soft \u4fdd\u7559\u6682\u5b58\u533a\u548c\u5de5\u4f5c\u533a\u7684\u6240\u6709\u5185\u5bb9\uff0c\u53ea\u56de\u6eafcommit\u5185\u5bb9 git reset --hard \u5220\u9664\u6682\u5b58\u533a\u548c\u5de5\u4f5c\u533a\u7684\u6240\u6709\u5185\u5bb9\uff0c\u56de\u6eafcommit git reset --mixed \u5220\u9664\u6682\u5b58\u533a\u5185\u5bb9\uff0c\u4fdd\u7559\u5de5\u4f5c\u533a\u5185\u5bb9\uff0c\u56de\u6eafcommit \u7528\u4ee4\u724c\u767b\u5f55 settings->developer settings->personal access tokens->Tokens(classic)->Generate new token(classic)\u4f5c\u4e3a\u5bc6\u7801 \u7b7e\u7f72commit gpg --full-generate-key \u5747\u9ed8\u8ba4 \u540d\u8bbe\u4e3agithub\u540d sec/\u4e0e\u65e5\u671f\u95f4\u7684\u6570\u5b57\u4e32\u4e3a\u5bc6\u94a5 gpg --armor --export \u5bc6\u94a5->\u516c\u94a5 SSH and GPG keys->new GPG key git commit -S -m \"\" (\u8f93\u5165\u79c1\u94a5\u5bc6\u7801) \u53efinvite collaborators,\u4f7f\u4e4b\u6709\u6743\u9650\u5728\u672c\u5730push","title":"\u4ece\u672c\u5730 push/pull Github\u4ed3\u5e93"},{"location":"git/#pr","text":"fork git remote add \u4ed3\u5e93\u522b\u540d \u7f51\u5740 -v\u67e5\u770b git push -u \u8fdc\u7a0b\u4ed3\u5e93\u540d main contribute\u91ccopen pull request \u672c\u6e90\u4ed3\u5e93pull requests\u91ccMerge pull request(\u53ef\u80fd\u8981Resolve conflicts) fork\u4ed3\u5e93\u53efsync fork\u91ccupdate \u5728\u672c\u5730git pull \u8fdc\u7a0b\u4ed3\u5e93\u540d \u8fdc\u7a0b\u5206\u652f\u540d:\u672c\u5730\u5206\u652f\u540d pull request\u540e\u518dpush\u4f1a\u6539\u53d8pull request\u5185\u5bb9 \u672c\u6e90\u4ed3\u5e93\u53ef\u5728pull request\u91ccReview changes\u8981\u6c42fork\u8005\u66f4\u6539,\u53ef\u518dapprove \u53ef\u76f4\u63a5\u4fee\u6539,\u518dcommit,\u4f1a\u6539fork","title":"PR"},{"location":"markdown/","text":".md \u4e00\u7ea7\u6807\u9898 \u4e8c\u7ea7\u6807\u9898 \u516d\u7ea7\u6807\u9898 html:h1~h6tag \u6bb5\u843d1 \u200d \u200d \u200d Markdown\u662f\u6807\u8bb0\u8bed\u8a00,\u5bf9HTML\u7684\u7b80\u5316,\u53ea\u51b3\u5b9a\u89e3\u6790\u51fa\u7684HTML \u89c6\u89c9\u6548\u679c\u5747\u7531HTML+CSS\u51b3\u5b9a \u6bb5\u843d2 \u591a\u7a7a\u683c\u4f1a\u88ab\u89e3\u6790\u4e3a\u4e00\u7a7a\u683c,\u4ee3\u7801\u5757\u4e2d\u7a7a\u683c\u4fdd\u7559 \u7b2c\u4e00\u5c42\u5f15\u8a00 \u53ef\u7528markdown\u8bed\u6cd5 \u7b2c\u4e8c\u5c42\u5f15\u8a00 >\u6216\u7a7a\u884c\u9000\u51fa + +\u65e0\u5e8f\u5217\u8868 + \u5d4c\u5957,\u7f29\u8fdb\u518d\u7528+ + \u540c\u4e00\u5c42\u540c\u7b26\u53f7 \u6362\u884c,\u5199\u5185\u5bb9 2. \u6709\u5e8f\u5217\u8868 - \u8fd8\u53ef\u7528\u65e0\u5e8f\u5217\u8868 3. \u4ece\u7b2c\u4e00\u4e2a\u6570\u5f00\u59cb\u81ea\u52a8\u4f9d\u6b21\u52a01 --- \u81f3\u5c11\u4e09\u6b21,\u5206\u5272\u7ebf \u4ee3\u7801\u5757 ```(\u8bed\u8a00\u540d) ``` struct markdown{int x;int y;}; \u4e00\u4e0b\u5212\u7ebf\u659c \u4e24\u7c97 \u4e09\u659c\u7c97 a*b*c a b c \\\u8f6c\u4e49 \u884c\u5185\u4ee3\u7801 ~~\u5220\u9664\u7ebf~~ \u4e0b\u5212\u7ebf \u5448\u73b0\u7684\u6587\u5b57 https://www.bilibili.com/opus/919487218880348257 \u200d |\u8868\u5934|\u8868\u5934|\u8868\u5934| |:--|:--:|--:| |\u5de6\u5bf9\u9f50\u200d \u200d \u200d \u200d \u200d \u200d |\u200d \u200d \u200d \u5c45\u4e2d\u5bf9\u9f50\u200d \u200d \u200d |\u200d \u200d \u200d \u200d \u200d \u200d \u53f3\u5bf9\u9f50| A ^1 a ^97 [ ] \u672a\u5b8c\u6210\u4efb\u52a1 [x] \u5df2\u5b8c\u6210\u4efb\u52a1 $a_i$$x_i$ x^2^ x~0~","title":"Markdown"},{"location":"markdown/#_1","text":"","title":"\u4e00\u7ea7\u6807\u9898"},{"location":"markdown/#_2","text":"","title":"\u4e8c\u7ea7\u6807\u9898"},{"location":"markdown/#htmlh1h6tag","text":"\u6bb5\u843d1 \u200d \u200d \u200d Markdown\u662f\u6807\u8bb0\u8bed\u8a00,\u5bf9HTML\u7684\u7b80\u5316,\u53ea\u51b3\u5b9a\u89e3\u6790\u51fa\u7684HTML \u89c6\u89c9\u6548\u679c\u5747\u7531HTML+CSS\u51b3\u5b9a \u6bb5\u843d2 \u591a\u7a7a\u683c\u4f1a\u88ab\u89e3\u6790\u4e3a\u4e00\u7a7a\u683c,\u4ee3\u7801\u5757\u4e2d\u7a7a\u683c\u4fdd\u7559 \u7b2c\u4e00\u5c42\u5f15\u8a00 \u53ef\u7528markdown\u8bed\u6cd5 \u7b2c\u4e8c\u5c42\u5f15\u8a00 >\u6216\u7a7a\u884c\u9000\u51fa + +\u65e0\u5e8f\u5217\u8868 + \u5d4c\u5957,\u7f29\u8fdb\u518d\u7528+ + \u540c\u4e00\u5c42\u540c\u7b26\u53f7 \u6362\u884c,\u5199\u5185\u5bb9 2. \u6709\u5e8f\u5217\u8868 - \u8fd8\u53ef\u7528\u65e0\u5e8f\u5217\u8868 3. \u4ece\u7b2c\u4e00\u4e2a\u6570\u5f00\u59cb\u81ea\u52a8\u4f9d\u6b21\u52a01 --- \u81f3\u5c11\u4e09\u6b21,\u5206\u5272\u7ebf \u4ee3\u7801\u5757 ```(\u8bed\u8a00\u540d) ``` struct markdown{int x;int y;}; \u4e00\u4e0b\u5212\u7ebf\u659c \u4e24\u7c97 \u4e09\u659c\u7c97 a*b*c a b c \\\u8f6c\u4e49 \u884c\u5185\u4ee3\u7801 ~~\u5220\u9664\u7ebf~~ \u4e0b\u5212\u7ebf \u5448\u73b0\u7684\u6587\u5b57 https://www.bilibili.com/opus/919487218880348257 \u200d |\u8868\u5934|\u8868\u5934|\u8868\u5934| |:--|:--:|--:| |\u5de6\u5bf9\u9f50\u200d \u200d \u200d \u200d \u200d \u200d |\u200d \u200d \u200d \u5c45\u4e2d\u5bf9\u9f50\u200d \u200d \u200d |\u200d \u200d \u200d \u200d \u200d \u200d \u53f3\u5bf9\u9f50| A ^1 a ^97 [ ] \u672a\u5b8c\u6210\u4efb\u52a1 [x] \u5df2\u5b8c\u6210\u4efb\u52a1 $a_i$$x_i$ x^2^ x~0~","title":"\u516d\u7ea7\u6807\u9898 html:h1~h6tag"},{"location":"network/","text":"IPv6 \u5e7f\u57df\u7f51:\u5982\u4e92\u8054\u7f51 \u5c40\u57df\u7f51:\u5982\u5bb6\u3001\u6821\u3001\u516c\u53f8 + \u4e00\u822c\u5c40\u57df\u7f51\u95f4\u7684\u4e3b\u673a\u53ef\u76f8\u4e92\u8bbf\u95ee,\u4f46\u4e0d\u80fd\u76f4\u63a5\u8bbf\u95ee\u4e92\u8054\u7f51 + \u9700\u8981\u4e00\u4e2a\u8def\u7531\u5668\u8fde\u63a5\u4e0d\u540c\u5c42\u7ea7\u7684\u7f51\u7edc + \u4e00\u53f0\u4e3b\u673a\u53ef\u4ee5\u6709\u591a\u4e2aIP\u5730\u5740 + \u5982\u5c40\u57df\u7f51\u4e3b\u673a\u53ef\u6709\u591a\u4e2a\u5c40\u57df\u7f51IP\u3001\u516c\u7f51IP + \u4e3b\u673a\u53ef\u6709\u591a\u4e2a\u7f51\u5361,\u6bcf\u4e2a\u7f51\u5361\u53ef\u6709\u591a\u4e2aIP\u5730\u5740 + \u56de\u73af\u5730\u5740:\u5982127.0.0.1(IPv4)/::1(IPv6)/localhost(\u4e3b\u673a\u540d) \u7531\u4e8e\u4e3b\u673a\u81ea\u8eab\u901a\u4fe1 + \u7f51\u5173:\u8fde\u63a5\u4e0d\u540c\u7f51\u7edc\u7684\u8bbe\u5907 + \u5982\u8def\u7531\u5668\u8fde\u63a5\u5c40\u57df\u7f51\u548c\u4e92\u8054\u7f51 + \u4e00\u822c\u5c40\u57df\u7f51\u4e3b\u673a\u7684\u7f51\u5173\u662f\u8def\u7531\u5668\u7684IP\u5730\u5740 + \u5b50\u7f51:\u5212\u5206\u5927IP\u5730\u5740\u4e3a\u5c0fIP\u5730\u5740 + NAT(\u7f51\u7edc\u5730\u5740\u8f6c\u6362):\u5c06\u5c40\u57df\u7f51\u591a\u4e2a\u4e3b\u673a\u5171\u4eab\u4e00\u4e2a\u516c\u7f51IP\u5730\u5740 + OSI\u4e03\u5c42\u6a21\u578b:\u5e94\u7528\u5c42:\u6d4f\u89c8\u5668 \u200d \u200d \u200d \u8868\u793a\u5c42 \u200d \u200d \u200d \u4f1a\u8bdd\u5c42 \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u4f20\u8f93\u5c42:TCP UDP \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u7f51\u7edc\u5c42:IP \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u6570\u636e\u94fe\u8def\u5c42:\u4ee5\u592a\u7f51/Wi-Fi \u200d \u200d \u200d \u7269\u7406\u5c42:\u7f51\u5361/\u8def\u7531\u5668 + TCP/IP\u56db\u5c42\u6a21\u578b: \u5e94\u7528\u5c42 \u200d \u200d \u200d \u4f20\u8f93\u5c42 \u200d \u200d \u200d \u7f51\u7edc\u5c42 \u200d \u200d \u200d \u94fe\u63a5\u5c42 + TCP(\u4f20\u8f93\u63a7\u5236\u534f\u8bae):\u9762\u5411\u5bf9\u63a5\u7684\u534f\u8bae,\u4fdd\u8bc1\u6570\u636e\u7684\u987a\u5e8f\u548c\u53ef\u9760\u6027 + UDP(\u7528\u6237\u6570\u636e\u62a5\u534f\u8bae):\u65e0\u8fde\u63a5,\u5355\u5411\u7b80\u5355\u5feb\u901f,\u4e0d\u4fdd\u8bc1\u987a\u5e8f\u53ef\u9760\u6027 + \u7aef\u53e3:\u8f6f\u4ef6\u5c42\u9762\u7684\u901a\u4fe1\u7aef\u70b9,\u548cIP\u5730\u5740\u6784\u6210\u7f51\u7edc\u901a\u4fe1\u7684\u57fa\u7840 + \u7aef\u53e3\u53f7:0~65535,0~1023\u4e3a\u7cfb\u7edf\u4fdd\u7559\u7aef\u53e3\u4e00\u822c\u4e0d\u7528\u4e8e\u901a\u7f51\u670d\u52a1 + IP\u5730\u5740\u8bc6\u522b\u673a\u5668,\u7aef\u53e3\u53f7\u8bc6\u522b\u8f6f\u4ef6(\u670d\u52a1) + TCP\u3001UDP\u7aef\u53e3\u53f7\u662f\u5206\u5f00\u7684 \u901a\u8fc7\u7aef\u53e3\u53f7\u53ef\u4ee5\u533a\u5206\u4e0d\u540c\u670d\u52a1,\u5982HTTP\u5206\u914d\u7aef\u53e3\u662fTCP 80 \u200d \u200d \u200d \u200d \u200d \u200d http://...\u5373http://...:80 \u200d \u200d \u200d \u5426\u5219\u8981\u6307\u660e + \u57df\u540d:\u6807\u8bc6\u4e92\u8054\u7f51\u4e0a\u7684\u8ba1\u7b97\u673a(\u4e00\u4e2a\u8eab\u4efd),\u662f\u7528.\u5206\u9694\u7684\u5b57\u7b26\u4e32 \u6700\u53f3\u4fa7\u90e8\u5206\u4e3a\u9876\u7ea7\u57df\u540d:.com .org .cn .net\u7b49,\u518d\u5f80\u5de6\u4e3a\u4e8c\u7ea7\u3001\u4e09\u7ea7\u57df\u540d\u7b49 \u7528\u4e8e\u7f51\u7edc\u3001\u90ae\u7bb1\u7b49 \u200d \u200d \u200d \u53ef\u8bbe\u7f6e\u4efb\u610f\u591a\u7684\u5b50\u57df\u540d(\u591a\u7ea7) + DNS(\u57df\u540d\u7cfb\u7edf)\u534f\u8bae:(\u53ef\u7528 nslook \u57df\u540d \u67e5\u770b) + \u57df\u540d\u4e0b\u53ef\u6709\u4efb\u610f\u591aDNS\u8bb0\u5f55:A\u8bb0\u5f55(\u5c06\u57df\u540d\u6620\u5c04\u5230IPv4) \u200d \u200d \u200d AAAA(IPv6) \u200d \u200d \u200d MX(\u90ae\u7bb1) \u200d \u200d \u200d CNAME(\u522b\u540d) \u200d \u200d \u200d TXT(\u6587\u672c\u4fe1\u606f)\u7b49 TTL\u8868\u793a\u8be5\u8bb0\u5f55\u7684\u7f13\u5b58\u65f6\u95f4 \u200d \u200d \u200d \u53ef nslook -query=txt \u57df\u540d + \u8bbf\u95ee\u57df\u540d\u65f6,\u8ba1\u7b97\u673a\u4f1a\u5411DNS\u670d\u52a1\u5668\u67e5\u8be2\u57df\u540d\u5bf9\u5e94\u7684DNS\u8bb0\u5f55 + DNS\u53ef\u80fd\u67e5\u8be2\u5176\u5b83DNS\u670d\u52a1\u5668\u76f4\u81f3\u627e\u5230\u8bb0\u5f55 + DNS\u4e00\u822c\u4f1a\u7f13\u5b58\u67e5\u8be2\u7ed3\u679c,\u4ee5\u51cf\u5c11\u67e5\u8be2\u65f6\u95f4,\u5206\u914d\u7aef\u53e3\u662fTCP/UDP 53 + \u5e94\u7528\u5c42\u534f\u8baeHTTP(\u8d85\u6587\u672c\u4f20\u8f93\u534f\u8bae),\u5728\u5ba2\u6237\u7aef\u548c\u670d\u52a1\u5668\u95f4\u4f20\u8f93\u7f51\u9875 \u53ef nc IP\u5730\u5740 \u7aef\u53e3 \u5efa\u7acbTCP\u8fde\u63a5\u518d GET/HTTP/1.1 Host:\u57df\u540d + \u53d1\u8d77\u8fde\u63a5\u7684\u8282\u70b9\u662f\u5ba2\u6237\u7aef,\u63a5\u53d7\u8fde\u63a5\u7684\u8282\u70b9\u662f\u670d\u52a1\u5668 \u5ba2\u6237\u7aef\u5728\u672c\u5730\u9009\u7a7a\u95f2\u7aef\u53e3\u8fde\u63a5\u5230\u670d\u52a1\u5668\u768480\u7aef\u53e3 DOS\u653b\u51fb:\u5927\u91cf\u65e0\u6548\u8bf7\u6c42\u5360\u7528\u670d\u52a1\u5668\u8d44\u6e90,\u4f7f\u5408\u6cd5\u8bf7\u6c42\u65e0\u6cd5\u88ab\u5904\u7406 DDOS:\u5206\u5e03\u5f0f\u62d2\u7edd\u670d\u52a1\u653b\u51fb,\u591a\u653b\u51fb\u4e00 + URL(\u7edf\u4e00\u8d44\u6e90\u5b9a\u4f4d\u7b26)\u5c5e\u4e8eURI \u534f\u8bae://\u4e3b\u673a:\u7aef\u53e3/\u8def\u5f84/query=1#frag \u53ea\u542bASCII\u5b57\u7b26\u00b7\u767e\u5206\u53f7\u7f16\u7801 \u7a7a\u683c\u4e3a%20\u6216+ + HTTP\u8bf7\u6c42 : nc \u57df\u540d \u7aef\u53e3 GET/... HTTP/1.1 Host:\u57df\u540d \u76f8\u5f53\u4e8e\u8bbf\u95ee http//\u57df\u540d/... \u8bbf\u95ee\u65b9\u6cd5:GET(\u83b7\u53d6\u8d44\u6e90) \u200d \u200d \u200d POST(\u63d0\u4ea4\u6570\u636e) \u200d \u200d \u200d PUT(\u66f4\u65b0\u8d44\u6e90) \u200d \u200d \u200d Delete(\u5220\u9664\u8d44\u6e90) \u200d \u200d \u200d HEAD(\u83b7\u53d6\u8d44\u6e90\u5934\u90e8) \u6807\u5934:\u952e(\u5982Host Content-Length\u3001connection):\u503c \u6b63\u6587 \u8bf7\u6c42\u4f53/\u54cd\u5e94\u4f53 curl\u3001wget\u66f4\u65b9\u4fbf -X\u6307\u5b9a\u8bf7\u6c42\u65b9\u6cd5 -d\u6307\u5b9a\u8bf7\u6c42\u4f53 Web HTML(\u8d85\u6587\u672c\u6807\u8bb0\u8bed\u8a00) command+shift+c\u6253\u5f00\u7f51\u9875HTML <!DOCTYPE html> <html><head><title>\u6807\u9898</title></head> <body></body></html> \u6807\u7b7e\u53ef\u6709\u5c5e\u6027 <a href=\"\u94fe\u63a5\">\u6587\u5b57 </a> <img src=\"\u94fe\u63a5\"alt=\"\u6587\u5b57\">(\u52a0\u8f7d\u4e0d\u51fa\u624d\u7528\u6587\u5b57) Javascript(\u7f16\u7a0b\u8bed\u8a00) .js \u200d \u200d \u200d \u7528\u4e8e\u7f51\u9875\u4ea4\u4e92 \\","title":"Network"},{"location":"network/#web","text":"","title":"Web"},{"location":"network/#html","text":"command+shift+c\u6253\u5f00\u7f51\u9875HTML <!DOCTYPE html> <html><head><title>\u6807\u9898</title></head> <body></body></html> \u6807\u7b7e\u53ef\u6709\u5c5e\u6027 <a href=\"\u94fe\u63a5\">\u6587\u5b57 </a> <img src=\"\u94fe\u63a5\"alt=\"\u6587\u5b57\">(\u52a0\u8f7d\u4e0d\u51fa\u624d\u7528\u6587\u5b57)","title":"HTML(\u8d85\u6587\u672c\u6807\u8bb0\u8bed\u8a00)"},{"location":"network/#javascript","text":".js \u200d \u200d \u200d \u7528\u4e8e\u7f51\u9875\u4ea4\u4e92 \\","title":"Javascript(\u7f16\u7a0b\u8bed\u8a00)"},{"location":"python/","text":"python\u89e3\u91ca\u578b \u4ea4\u4e92\u5f0f \u9762\u5411\u5bf9\u8c61 .py pyhton \u6587\u4ef6\u540d python3 (-i \u6587\u4ef6\u540d)\u53ef\u4ea4\u4e92 quit\u9000\u51fa | \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d\u8fd0\u7b97\u987a\u5e8f| |:--| |\u200d 1 \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d ** |\u200d 2 \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d ~ +(\u6b63) -(\u8d1f) \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d | |\u200d 3 \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d * / % //| |\u200d 4 \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d + -| |\u200d 5 \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d << >>| |\u200d 6 \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d & | |\u200d 7 \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d ^ || |\u200d 8 \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d > < >= <=| |\u200d 9 \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d == !=| |10 \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d= %= /= //= -= == = *=| |11 \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d is is not| |12 \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d in not in| |13 \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d and or not| //\u5411\u4e0b\u53d6\u6574 a=1 b=1 a is b and\u524d\u5047\u4e3a\u524d\u503c\uff0c\u5426\u5219\u4e3a\u540e\u503c or\u524d\u771f\u4e3a\u524d\u503c\uff0c\u5426\u5219\u4e3a\u540e\u503c operator: \u200d add+ \u200d sub- \u200d mul* \u200d truediv/ \u200d floordiv// \u200d mod% gt(x,y)x>y eq(x,y)x==y lt(x,y)x<y \u200d raw_input() input()(\u53ef\u8bc4\u4f30\u4e32\u8868\u8fbe\u5f0f) \u56de\u8f66\u7ed3\u675f\u4e0d\u4fdd\u7559 \u4f1a\u663e\u793a\u91cc\u9762\u7684\u5185\u5bb9 \u53ef\u8d4b\u7ed9 \u8f93\u5165\u4fe1\u606f\u5f53\u4f5c\u5b57\u7b26\u4e32 print(*x,sep=' ',end='\\n') \u8fd4\u56deNone(\u8868\u793a\u65e0),\u4e0d\u663e\u793a '%6.7f %s'%(x,s) % - + 0 m.n d f c s o x,X e,E p print(None)->None print(print(6))->6 None s.format() '{1}...{0}...{1}'.format(,) {0}{1}\u770b\u4f5c\u5bf9\u5e94\u4f4d\u540d\u7684\u503c '{\u540d1}...{\u540d2}'.format(\u540d2=,\u540d1=) '{:+.6f}'\u5e26\u7b26\u53f7\u4fdd\u7559\u516d\u4f4d\u5c0f\u6570 '{:x>yd}'\u5de6\u586bx,y\u5bbd\u5ea6 <\u53f3\u586b '{:>xd}'\u53f3\u5bf9\u9f50(\u9ed8\u8ba4) '{:<xd}'\u5de6\u5bf9\u9f50 '{:^xd}'\u4e2d\u95f4\u5bf9\u9f50 '{:,}',\u5206\u5272\u6570 '{:.x%}'\u767e\u5206\u6570,x\u4f4d\u5c0f\u6570 '{:.xe}'\u6307\u6570,x\u4f4d\u5c0f\u6570 '{:b/d/o/x/#x}' b\u4e8c\u8fdb\u5236,#\u5e260o r'...'\u539f\u59cb f'...{\u540d}...' \u540c\u4e00\u884c\u591a\u8bed\u53e5;\u5206\u9694 \u7f29\u8fdb\u4e00\u81f4\u5199\u8bed\u53e5 \u4e00\u53e5\u591a\u884c,\u672b\u884c\u524d\u884c\u672b\u52a0\\,[]{}()\u4f8b\u5916 import sys sys.getsizeof(x) \u8f6c\u4e49\u5b57\u7b26 del \u5220\u9664 \u51fd\u6570\u5185\u6539\u3001\u8d4b\u5168\u5c40,\u7528global\u58f0\u660e,\u6539\u3001\u8d4b\u5916\u90e8,\u7528nonlocal\u58f0\u660e(\u4f1a\u88ab\u8ba4\u4e3a\u662f\u5c40\u90e8\u7684,\u5219\u627e\u4e0d\u5230) #\u5355\u884c\u6ce8\u91ca 3\u53cc\u5f15\u53f7/3\u5355\u5f15\u53f7\u5185\u6ce8\u91ca,>>>\u6d4b\u8bd5\u6587\u6863 \u91cc\u6709' ',\u5916\u7528''' ''' from \u6a21\u5757 import \u51fd\u6570 (\u53efas)\u76f4\u63a5\u7528\u51fd\u6570 import\u5f15\u5165\u6a21\u5757,\u7528\u6a21\u5757\u540d.\u51fd\u6570\u540d \u8d4b\u503c(\u4e0d\u540c\u6b65)\u00b7\u7ed1\u5b9a:\u8981\u5b9a\u4e49 \u540d=,\u518d\u7528,\u53efx=y=6 \u540e\u540d\u8986\u76d6\u524d\u540c\u540d \u540d1,\u540d2=\u503c1,\u503c2 \u53f3\u4fa7\u4ece\u5de6\u5f80\u53f3\u9010\u4e2a\u8bc4\u4f30\u518d\u5bf9\u5e94\u8d4b\u503c \u53ef\u540d=\u51fd\u6570\u540d,\u7528\u540d() \u53efmax=7,max=f def \u540d(): *\u8868\u793a\u4e0d\u5b9a\u957f\u53c2\u6570 :\u540e\u4e3a\u6ce8\u89e3 ... return ()\u524d\u4e3aoperator,\u91cc\u4e3aoperand \u53ef\u51fd\u6570\u540d\u7ed9\u53c2\u6570 \u53ef\u65e0\u53c2\u6570,\u8c03\u7528\u65f6\u8981\u6709() \u4e0d\u8fd4\u56de\u5219None \u82e5\u8d4b\u503c\u5173\u952e\u5b57,\u53ef\u4e0d\u6309\u987a\u5e8f \u53c2\u6570\u5747\u8bc4\u4f30,\u5c40\u90e8\u6027,\u53ef\u9ed8\u8ba4\u8d4b\u503c(\u5173\u952e\u5b57) \u53ef\u8fd4\u56de\u591a\u4e2a\u503c,\u8d4b\u7ed9\u591a\u4e2a\u540d \u51fd\u6570\u91cc\u53ef\u518d\u5b9a\u4e49\u51fd\u65702\u3001\u8fd4\u56de\u51fd\u65702 def f(s=[]):s.append(6) \u6bcf\u8c03\u7528\u4e00\u6b21\u5747\u6dfb6 \u9ad8\u9636\u51fd\u6570:\u51fd\u6570\u4f5c\u4e3a\u53c2\u6570;\u8fd4\u56de\u51fd\u6570 def a(n):def b(k):return n+k return b c=a(3) c(4)\u3001a(3)(4)\u4e3a7 def a(x):b=x def c(y):nonlocal b b-=y return b return c d=c d(y)\u6539b \u53d8\u91cf\u4ece\u672c\u5730\u5f80\u7236\u57df\u627e,\u53d6\u7b2c\u4e00\u4e2a Global a c f1 a n b \u8fd4\u56deb f2 b k \u8fd4\u56den+k assert \u53e5,'\u4fe1\u606f' \u53e5\u5047\u624d\u663e\u793a\u4fe1\u606f \u200d \u200d \u200d \u200d \u200d \u200d \u200d 6(6)Error a=lambda x(\u53c2\u6570):\u4e00\u4e2a\u8868\u8fbe\u5f0f(\u8fd4\u56de\u503c) \u7528a(6),\u53ef\u591a\u4e2a\u53c2\u6570 (lambda x:x*x)(3)\u4e3a9 \u9636\u4e58\u51fd\u6570: (lambda f: f(f))(lambda f: lambda x: 1 if x == 0 else x * f(f)(x - 1)) (lambda f: lambda k: f(f, k))(lambda f, k: k if k == 1 else mul(k, f(f, sub(k, 1)))) currying=lambda f:lambda x: lambda y:f(x,y) \u7528currying(f)(a)(b) def horse(mask): horse = mask def mask(horse): return horse return horse(mask) mask = lambda horse: horse(2) >>> horse(mask) 2 Decorators: \u200d \u200d \u200d from ucb import trace\u6216\u81ea\u5b9a\u4e49 \u51fd\u6570\u524d\u52a0@trace\u76f8\u5f53\u4e8e\u51fd\u6570=trace(\u51fd\u6570) trace(f):def tra(x):print return f(x) return tra recursion:\u91cc\u9762\u7684\u51fd\u6570\u8981\u8003\u8651\u80fd\u505a\u4ec0\u4e48,\u4e0d\u8981\u8003\u8651\u5982\u4f55\u5b9e\u73b0 print_all(x): print(x) return print_all print_sums(x):print(x) def next_sum(y) return print_sums(x+y)(\u4f1a\u8fd0\u884c) return next_sum sumdigits(n):if n<10:return n else return sumdigits(n//10)+n%10 cascade(n):\u987a if n<10:print(n) else print(n) cascade(n//10) print(n) \u9006 grow(n) print(n) shrink(n) fg(f,g,n):if n: f(n);g(n) grow=lambda n:fg(grow,print,n//10) shrink=lambda n:fg(print,shrink,n//10) tree recursion:fib(n):if n==0:return 0 elif n==1:return 1 else:return fib(n-2)+fib(n-1) count_partitions(6,4)\u548c\u56e0\u5b50<=4{\u542b4 \u4e0d\u542b4 cp(n,m):if n==0:return 1 elif n<0 or m==0:return 0 else:with_m=cp(n-m,m) without_m=cp(n,m-1) return with_m+without_m range(x,y) [x,y) y-x\u4e3a\u4e2a\u6570 range(x) [0,x) range(x,y,z)z\u4e3a\u6b65\u957f,\u9ed8\u8ba4\u4e3a1 a=[6] b=[6] \u76f8\u7b49\u4e0d\u76f8\u540c a=[6] b=a \u76f8\u540c,\u540c\u65f6\u53d8 \u4e0d\u53ef\u53d8\u5bf9\u8c61:\u6574\u6570\u3001\u6d6e\u70b9\u6570\u3001\u4e32\u3001\u5143\u7ec4,\u82e5\u5c1d\u8bd5\u6539\u53d8,\u5b9e\u9645\u4e0a\u4f1a\u521b\u5efa\u65b0\u5bf9\u8c61 \u53ef\u53d8:\u5217\u8868\u3001\u5b57\u5178\u3001\u96c6\u5408 \u6761\u4ef6 \u5faa\u73af \u5047:False None 0 \u7a7a\u5b57\u7b26\u4e32'' \u7a7a\u5217\u8868[] \u7a7a\u5b57\u5178{} \u7a7a\u5143\u7ec4 \u53ea\u4e00\u4ece\u53e5\u53ef\u5199\u5728\u540c\u884c break continue pass\u7a7a\u8bed\u53e5 if :\u7f29\u8fdb elif :\u7f29\u8fdb else:\u7f29\u8fdb \u6309\u987a\u5e8f\u6267\u884c,\u771f\u5219\u6267\u884c\u3001\u5ffd\u7565\u5176\u4f59 while :\u7f29\u8fdb \u4f8b:a,b,k=1,0,0 while k<n:a,b,k=b,a+b,k+1 \u53ef\u6709else,while\u6b63\u5e38\u6267\u884c\u7ed3\u675f\u540e(\u65e0\u8df3\u51fa)\u6267\u884celse for \u81ea\u5b9a\u4e49\u540d(\u53ef_\u6216\u7a7a\u767d) in \u5e8f:(\u5c06\u540d\u4f9d\u6b21\u7ed1\u5b9a\u5230\u5143\u7d20) for \u540d in range(n):(n\u6b21) for index(len()) for x,y in [[1,2],[3,4]]:(unpack) \u5185\u7f6e\u51fd\u6570 \u7c7b\u578b\u8f6c\u6362 int(x,base=10) x\u4e3a\u6570,\u4e0d\u80fd\u6709base,\u4e3a\u4e32\u5219\u53ef\u6709 float(x) \u200d \u200d \u200d complex(x,\u6570) x\u4e3a\u4e32,\u4e0d\u80fd\u6709\u7b2c\u4e8c\u4e2a\u53c2\u6570 str(x) (\u4eba) repr(x) (\u89e3\u91ca\u5668)\u5747\u8fd4\u56de\u4e32 \u200d \u200d \u200d \u200d eval(\u4e32) \u8bc4\u4f30\u8868\u8fbe\u5f0f tuple(s) \u8fd4\u56de\u5143\u7ec4 \u200d \u200d \u200d list(s) \u8fd4\u56de\u5217\u8868 \u200d \u200d \u200d dict(s) s\u5e94\u4e3a(\u952e,\u503c)\u5143\u7ec4 set(s) \u8fd4\u56de\u96c6\u5408(\u4e0d\u91cd\u590d){} frozenset(s) \u4e0d\u53ef\u53d8\u96c6\u5408 A&B\u4ea4 A|B\u5e76 A-B\u5dee chr(x) \u6570\u5bf9\u5e94\u7684\u5b57\u7b26 \u200d \u200d \u200d ord(x) \u5b57\u7b26\u5bf9\u5e94\u7684\u6570 \u200d \u200d \u200d hex(x)/oct(x) \u5bf9\u5e94\u7684\u7684\u5341\u516d/\u516b\u8fdb\u5236\u5b57\u7b26\u4e32 id(x) \u83b7\u53d6\u5730\u5740 \u200d \u200d \u200d len() \u200d \u200d \u200d abs(x) \u200d \u200d \u200d divmod(x,y) \u5546,\u4f59\u6570 \u200d \u200d \u200d pow(x,y) sorted(\u5bf9\u8c61,cmp,key,reverse=False) sum(\u5e8f,start=0) \u5143\u7d20\u76f8\u52a0\u518d\u52a0start,\u4e0d\u80fd\u7528\u4e8e\u4e32 sum([1,2],[3,4],[]) all(\u5e8f) \u5747True\u624dTrue all([]) True \u200d \u200d \u200d \u200d any(\u5e8f) \u6709True\u5c31True max(\u591a\u4e2a\u5143\u7d20\u6216\u5e8f,key\u51fd\u6570(\u53ef\u65e0)) min round(x,y\u9ed8\u8ba4\u4e3a0)x\u56db\u820d\u4e94\u5165,\u4fdd\u7559y\u4f4d\u5c0f\u6570 \u200d \u200d bin(x) \u8fd4\u56de\u4e8c\u8fdb\u5236\u8868\u793a\u4e32 isinstance(x,y) \u5224\u65adx\u662f\u5426\u662fy\u7684\u540c\u7c7b\u6216\u5b50\u7c7b issubclass(x,y) \u662f\u5426\u662f\u5b50\u7c7b supper() \u8c03\u7528\u7236\u7c7b\u5c5e\u6027\u200d \u200d \u200d exec(\u4e32) \u6267\u884c\u8bed\u53e5 \u200d \u200d \u200d dir(\u540d) \u200d \u200d \u200d reload(\u6a21\u677f) \u91cd\u65b0\u5bfc\u5165\u51fd\u6570 \u9700\u5bfc\u5165\u6a21\u5757\u7684\u51fd\u6570 import math \u200d \u200d \u200d (float\u578b) math. \u200d fabs(x) \u200d \u200d ceil(x) \u4e0a\u6574\u6570 \u200d \u200d floor(x) (\u4e0b\u6574\u6570) \u200d exp(x) e^x^ \u200d \u200d log(x,y\u9ed8\u8ba4\u4e3ae) log~y~x modf(x) \u8fd4\u56de\u5c0f\u6570\u548c\u6574\u6570\u90e8\u5206 \u200d sqrt(x) pi e sin(a) \u200d cos(a) \u200d tan(a) \u200d asin(a) \u200d acos(a) \u200d atan(a) \u200d atan2(y,x) \u200d import random random. choice(\u5e8f) \u968f\u673a\u4e00\u5143\u7d20 \u200d randomrange() \u968f\u673a\u4e00\u5143\u7d20 random() \u968f\u673a[0,1)\u7684\u5b9e\u6570 \u200d uniform(x,y) \u968f\u673a[x,y]\u7684\u5b9e\u6570 \u200d shuffle(\u5e8f) \u968f\u673a\u6392\u5e8f,\u4e0d\u8fd4\u56de \u200d import time time.localtime(time.time() ^1 )[0]\u5e74[1]\u6708[2]\u65e5[3]\u65f6[4]\u5206[5]\u79d2[6]\u4e00\u5468\u7b2c\u51e0\u5929[7]\u4e00\u5e74\u7b2c\u51e0\u5929 time.asctime() \u683c\u5f0f\u5316 from datetime import time d= date(\u5e74,\u6708,\u65e5) \u6216 date.today() \u53ef\u7528 d.year/month/day \u200d \u53efd2-d1\u5dee\u591a\u5c11\u5929 d.strftime(\"...\") %Y\u5e74 \u200d \u200d \u200d %m\u6708%b\u7b80\u6708\u540d%B\u5168\u6708\u540d \u200d \u200d \u200d %d\u6708\u4e2d\u7684\u5929%j\u5e74\u4e2d\u7684\u5929 %H\u65f6 \u200d \u200d \u200d %M\u5206 \u200d \u200d \u200d %S\u79d2 \u200d \u200d \u200d %a\u7b80\u661f\u671f\u540d%A\u5168\u661f\u671f\u540d%w\u661f\u671f(0~6) import calendar calendar. calendar(\u5e74) month(\u5e74,\u6708) isleap(\u5e74) \u5217\u8868 \u5c01\u95ed l=[...] \u7528l[i] \u4e0b\u68070~len(l)-1 \u53ef+ * in not in(\u5224\u65ad\u5355\u72ec\u5143\u7d20) \u5207\u7247 \u5143\u7d20\u4e3a\u4efb\u4f55\u4e1c\u897f \u76f4\u63a5\u4f20\u5165\u51fd\u6570,\u53ef\u6539 \u53ef\u8d4b\u7ed9\u5bf9\u5e94\u4e2a\u6570\u7684\u540d l=[[1,2],[3,4]] l[1][1]\u4e3a4 [f(x) for x in \u5e8f (if ...)] \u65b0\u5217\u8868 l.append(x) \u672b\u52a0 \u200d \u200d \u200d l.insert(\u7d22\u5f15,x) \u200d \u200d \u200d l.extend(\u5e8f) \u672b\u52a0 l.pop(index\u9ed8\u8ba4\u4e3a-1) \u79fb\u9664l[index]\u5e76\u8fd4\u56de \u200d \u200d \u200d l.remove(x) l.count(x) \u200d \u200d \u200d l.index(x) l.sort(cmp,key,reverse=False) False\u5347True\u964d cmp\u65b9\u6cd5 key\u7528\u4e8e\u6bd4\u8f83\u7684\u4e00\u4e2a\u53c2\u6570 l.reverse() \u53cd\u5411 \u200d \u200d \u200d l.[n:]=[] \u5220\u9664 \u5207\u7247 l[:y]\u8868\u793a[l[0],...l[y-1]] l[x:y] l[x:] l[:] [\u521d:\u672b:\u6b65\u957f\u9ed8\u8ba4\u4e3a1] s=[1,2] t=[3,4] s[0:0]=t s->3 4 1 2;s[3:]=t s->1 2 3 4 t[1]=5\u4e0d\u6539 (\u5bf9\u5217\u8868\u6574\u4f53\u6539\u52a8\u5219\u6539\u503c) \u5b57\u7b26\u4e32 s='...'\u6216\"...\"(\u91cc\u53ef\u6709'') \u7528s[i] \u4e0b\u68070\\~len(s)-1\u3001-len(s)\\~-1 \u53ef+ * in \u5207\u7247 print(' '*6+str(6)) \u53ef'...' in '......' s.upper() s.lower() s.swapcase() \u4e0d\u6539s s.count(str,beg=0,end=len(s)) [ ) s.find(str,beg=0,end=len(s)) \u5426\u5219-1 s.replace(s1,s2,n\u9ed8\u8ba4s1\u51fa\u73b0\u6b21\u6570) \u66ff\u6362\u81f3\u591an\u6b21 \u5b57\u5178 d={\u952e:\u503c,...} d[\u952e]\u627e\u503c d[\u65b0\u952e]=\u503c\u76f4\u63a5\u589e\u52a0 in \u67e5\u952e\u662f\u5426\u5b58\u5728 \u53efsum(\u952e) for list \u952e\u4e0d\u80fd\u4e3a1\u5217\u8868\u3001\u5b57\u5178(\u6216\u542b\u6709),\u503c\u53ef\u4e3a\u591a\u79cd\u4e1c\u897f \u540e\u952e\u4f1a\u8986\u76d6\u524d\u540c\u540d\u952e list(d) \u952e\u7684\u5e8f d.keys() d.values() d.items() d.pop(\u952e) {f(x):g(x) for x in \u5e8f (if ...)} \u65b0\u5b57\u5178 \u4f8b: {k:[v for v in values if match(k,v)] for k in keys} \u5143\u7ec4 \u4e0d\u53ef\u6539 t=(,...)\u6216,... \u4e0b\u68070~len-1 \u5217\u8868\u4f5c\u4e3a\u5143\u7d20,\u53ef\u6539\u5217\u8868\u5185\u5bb9 \u4e0d\u5f71\u54cd\u5143\u7ec4 \u53ef+ * in \u5207\u7247 for \u8fed\u4ee3\u5668(\u60f0\u6027) \u53ef\u7528next\u3001for li=iter(l)\u8fd4\u56de\u8fed\u4ee3\u5668,\u6807\u8bb0\u7b2c\u4e00\u4f4d next(i)\u8fd4\u56de\u5f53\u524d\u5143\u7d20,\u6807\u8bb0\u540e\u79fb\u4e00\u4f4d di=iter(d\u6216d.keys()) \u200d \u200d \u200d di=iter(d.values()) \u200d \u200d \u200d di=iter(d.items()) next(di)\u4e3a(\u952e,\u503c) \u6539d\u5f62\u72b6\u3001\u5927\u5c0f\u540e\u5df2\u751f\u6210\u7684\u8fed\u4ee3\u5668\u5931\u6548 ri=iter(r) \u200d \u200d \u200d for x in i (\u904d\u5386\u5143\u7d20\u81f3\u672b\u5c3e) \u8fd4\u56de\u8fed\u4ee3\u5668,next\u4ea7\u751f\u6548\u679c: map(\u51fd\u6570,\u53ef\u8fed\u4ee3\u5bf9\u8c61) \u5c06\u51fd\u6570\u7528\u4e8e\u5143\u7d20(\u4e0d\u6539\u503c) filter(\u51fd\u6570,\u53ef\u8fed\u4ee3\u5bf9\u8c61) \u51fd\u6570\u503c\u771f\u5219\u904d\u5386\u5143\u7d20,\u5047\u5219\u53ea\u79fb\u4f4d zip(\u5bf9\u8c611,\u5bf9\u8c612,...) \u53ef\u904d\u5386\u540c\u7d22\u5f15\u7684(x,y...)\u5143\u7ec4,\u53d6\u51b3\u4e8e\u66f4\u77ed\u7684 reversed(\u5bf9\u8c61) \u53cd\u5411\u904d\u5386 list(i) tuple(i) sorted(i) \u8fd4\u56de\u6392\u5e8f\u540e\u7684 \u5747\u4f1a\u79fb\u81f3\u672b\u5c3e \u4f8b: mi=map(\u51fd\u65701,\u8303\u56f4) fi=filter(\u51fd\u65702,mi) \u5148\u5e94\u7528\u518d\u8fc7\u6ee4 all(a==b for a,b in zip(s,reversed(s))) \u751f\u6210\u5668 \u7279\u6b8a\u7684\u8fed\u4ee3\u5668 yield(\u51fd\u6570\u91cc\u4ea7\u751f\u503c) yield from \u5bf9\u8c61(\u904d\u5386\u4ea7\u751f) i=\u51fd\u6570() next(i)\u53ef\u904d\u5386\u4ea7\u751f\u7684\u503c list(\u51fd\u6570())\u5217\u51fa\u6240\u6709\u4ea7\u751f\u7684\u503c \u4f8b:part(n,m) if n>0 and m>0: if n==m:yield str(m) for p in part(n-m,m):yield p+'+'+str(m) yield from part(n,m-1) \u7c7b .\u8bbf\u95ee\u5c5e\u6027 \u7c7b->\u65b9\u6cd5(\u5bf9\u8c61+\u51fd\u6570,\u4e5f\u662f\u5c5e\u6027) \u52a0\u3001\u4e58 \u8d4b\u503c\u67e5\u627e class \u7c7b\u540d:def __init__(self,aholder):self.balance,self.holder=0,aholder (\u6784\u9020\u65b9\u6cd5) def deposit(self,amount):self.balance+=balance return self.balance (\u53ef\u8f93\u51fa,\u65e0\u4e5f\u4ecd\u7136\u6539\u503c) \u7c7b\u5c5e\u6027=... self<-a=\u7c7b\u540d(\u540d)\u540c\u65f6\u81ea\u52a8\u8c03\u7528__init__ \u53ef\u7528a.balance a.holder a.\u65b0\u5c5e\u6027=...\u76f4\u63a5\u521b\u9020 \u5b9e\u4f8b\u5c5e\u6027\u4f18\u5148\u4e8e\u7c7b\u5c5e\u6027 \u200d \u200d \u200d \u6709\u7c7b.b,\u5b9e\u4f8b.b\u5b9e\u5219\u4e3a\u6dfb\u52a0\u5b9e\u4f8b\u5c5e\u6027 \u5bf9\u8c61.\u5b9e\u4f8b\u5c5e\u6027(\u6539\u503c\u4e0d\u5f71\u54cd\u7c7b) \u7c7b.\u7c7b\u5c5e\u6027(\u6539\u503c\u4f1a\u540c\u6b65\u5230\u5bf9\u8c61) getAdder(\u5bf9\u8c61)->\u5c5e\u6027 getadder(\u5bf9\u8c61,\u5c5e\u6027) hasattr(\u5bf9\u8c61,\u5c5e\u6027)\u662f\u5426\u6709 a.deposit(6)\u53ef\u8d4b\u7ed9 \u53efi=map(a.deposit,range(6,66))\u3001next(i) \u7c7b.\u65b9\u6cd5(\u5bf9\u8c61(\u53efself),...)\u5373\u5bf9\u8c61.\u65b9\u6cd5(...) \u7ee7\u627f class \u5b50\u7c7b(\u57fa\u7c7b):(\u5b50\u7c7b\u7ee7\u627f\u57fa\u7c7b)\u53ef\u66f4\u6539 \u591a\u91cd\u7ee7\u627f, ,... \u4f8b:class chAccount(Account):interest=0.006 withdraw_fee=1 def withdraw(self,amount) return Account.wihtdraw(self.amount+self.withdraw_fee) \u4e00\u5c5e\u6027\u5728\u5b50\u7c7b\u6709,\u5219\u7528,\u5426\u5219\u5728\u57fa\u7c7b\u4e2d\u67e5\u627e\u3001\u6267\u884c \u7ec4\u5408 :\u5c06\u53e6\u4e00\u4e2a\u5bf9\u8c61\u4f5c\u4e3a\u5c5e\u6027 class Bank:def __init__(self):self.accounts=[] def open_account(self,holder,amount,kind=Account): account=kind(holder);account_deposit(amount);self.accounts.append(account) return account def pay_interest(self):for a in self.accounts:a.deposit(a.balance=a.intereat) \u94fe\u8868 class Link:empty=() def __init__(self,value,rest=empty):self.value,self.rest=value,rest \u521b\u5efa:Link(6,Link(7,Link(8))) def rLink(sta,end):if sta>=end: return Link.empty else: return Link(sta,range_Link(sta+1,end)) def map_Link(f,s):if s is Link.empty:return s else return Link(f(s.value,map_Link(f,s.rest))) def filter_Link(f,s):if s is Link.empty:return s fil_rest=filter_Link(f,s.rest) if f(s.value):return Link(s.value,filter) else return fil_rest \u524d\u63a5:s.value,s.rest=v,Link(s.value,s.rest) s=Link(v,s) \u540e\u63a5:s.rest=Link(v) \u6587\u4ef6 \u540c\u7ea7\u76ee\u5f55\u4e0b \u540d1\u4e0b\u6709__init__.py \u53051 \u53052 \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u540d2 from \u540d1.\u53051 import \u53051 \u6587\u4ef6: fp=open(\u540d,mode=\"r\") mode: t\u6587\u672c x\u53ea\u65b0\u5efa,\u5199 b\u4e8c\u8fdb\u5236 +\u6253\u5f00\u8bfb\u5199 r\u6253\u5f00\u53ea\u8bfb r+\u6253\u5f00\u8bfb\u5199 w\u6e05\u7a7a\u6216\u521b\u5efa, \u53ea\u5199 w+\u6e05\u7a7a\u6216\u521b\u5efa,\u8bfb\u5199 a\u8ffd\u52a0\u6216\u521b\u5efa,\u8bfb\u5199 fp.closed\u5df2\u5173\u95ed\u624dTrue fp.mode fp.name \u200d \u200d \u200d fp.close() fp.read (\u5b57\u8282\u6570)\u9ed8\u8ba4\u5168\u90e8 \u200d \u200d \u200d fp.write(\u4e32) \u200d \u200d \u200d fp.tell() \u200d \u200d \u200d fp.seek(\u504f\u79fb\u91cf,0/1/2) \u8be5\u4f4d\u7f6e import os os.name(\u5df2\u5b58\u5728\u6587\u4ef6\u540d,\u65b0\u540d) os.remove(\u6587\u4ef6\u540d) fp.flush() \u7f13\u51b2\u533a\u5199\u5165\u6587\u4ef6 fp.next() \u8fd4\u56de\u4e0b\u884c fp.readline(s,\u5168\u90e8) ()\u8bfb\u6574\u884c,\u5305\u62ec'\\n' \u200d \u200d \u200d fp.writeline(s,\u4e32\u5217\u8868) \u8981\u6362\u884c\u52a0'\\n' \u200d \u200d \u200d execfile(\u6587\u4ef6\u540d) \u6267\u884c ### Expasion data abstracion \u6709\u7406\u6570n/d from fractions import gcd \u7528 gcd(n,d) \u6811 def tree(label,branches=[]:return [label]+list(branches)) label(tree):return tree[0] branches(tree):return tree[1:] is_leaf(tree):return not branches(tree) count_leaves(t):if is_leaf(t):return 1 else return sum([count_leaves(b) for b in branches(t)]) class Tree:def __init__(self,label,branches=[]):self.label,self.branches=label,list(branches) Memoizatin def memo(f):cache={} def memorized(n): if n not in cache:cache[n]=f(n) return memorized fib=memo(fib) from fractions import Fraction half=Fraction(1,2) repr(half)->'Fraction(1,2)' str(half)->'1/2' print(half)->1/2 eval(repr(half))->Fraction(1,2) \u591a\u6001\u51fd\u6570:\u9002\u7528\u4e8e\u4e0d\u540c\u6570\u636e\u7c7b\u578b \u63a5\u53e3:\u5171\u4eab\u7684\u6d88\u606f\u548c\u89c4\u8303(\u76f8\u540c\u7684\u65b9\u6cd5) \u65b9\u6cd5: __str__ __repr__ __add__(\u5de6\u52a0\u53f3\uff09\u3001__radd__(\u53f3\u52a0\u5de6)\u5373+ __bool__ __float__ if n < 0: return [] if n == 0: sums_to_zero = [] # The only way to sum to zero using positives return [sums_to_zero] # Return a list of all the ways to sum to zero result = [] for k in range(1, m + 1): result = result + [[k] + rest for rest in sums(n-k, m) if rest == [] or rest[0] != k] return result Tips: \u907f\u514d\u91cd\u590d,\u8fd4\u56de\u503c\u4f5c\u53f3\u503c def max_product(s) if s == []: # empty set return 1 elif len(s) == 1: # single element return s[0] else: return max(s[0]*max_product(s[2:]),max_product(s[1:]))","title":"Python"},{"location":"python/#_1","text":"\u5047:False None 0 \u7a7a\u5b57\u7b26\u4e32'' \u7a7a\u5217\u8868[] \u7a7a\u5b57\u5178{} \u7a7a\u5143\u7ec4 \u53ea\u4e00\u4ece\u53e5\u53ef\u5199\u5728\u540c\u884c break continue pass\u7a7a\u8bed\u53e5 if :\u7f29\u8fdb elif :\u7f29\u8fdb else:\u7f29\u8fdb \u6309\u987a\u5e8f\u6267\u884c,\u771f\u5219\u6267\u884c\u3001\u5ffd\u7565\u5176\u4f59 while :\u7f29\u8fdb \u4f8b:a,b,k=1,0,0 while k<n:a,b,k=b,a+b,k+1 \u53ef\u6709else,while\u6b63\u5e38\u6267\u884c\u7ed3\u675f\u540e(\u65e0\u8df3\u51fa)\u6267\u884celse for \u81ea\u5b9a\u4e49\u540d(\u53ef_\u6216\u7a7a\u767d) in \u5e8f:(\u5c06\u540d\u4f9d\u6b21\u7ed1\u5b9a\u5230\u5143\u7d20) for \u540d in range(n):(n\u6b21) for index(len()) for x,y in [[1,2],[3,4]]:(unpack)","title":"\u6761\u4ef6 \u5faa\u73af"},{"location":"python/#_2","text":"\u7c7b\u578b\u8f6c\u6362 int(x,base=10) x\u4e3a\u6570,\u4e0d\u80fd\u6709base,\u4e3a\u4e32\u5219\u53ef\u6709 float(x) \u200d \u200d \u200d complex(x,\u6570) x\u4e3a\u4e32,\u4e0d\u80fd\u6709\u7b2c\u4e8c\u4e2a\u53c2\u6570 str(x) (\u4eba) repr(x) (\u89e3\u91ca\u5668)\u5747\u8fd4\u56de\u4e32 \u200d \u200d \u200d \u200d eval(\u4e32) \u8bc4\u4f30\u8868\u8fbe\u5f0f tuple(s) \u8fd4\u56de\u5143\u7ec4 \u200d \u200d \u200d list(s) \u8fd4\u56de\u5217\u8868 \u200d \u200d \u200d dict(s) s\u5e94\u4e3a(\u952e,\u503c)\u5143\u7ec4 set(s) \u8fd4\u56de\u96c6\u5408(\u4e0d\u91cd\u590d){} frozenset(s) \u4e0d\u53ef\u53d8\u96c6\u5408 A&B\u4ea4 A|B\u5e76 A-B\u5dee chr(x) \u6570\u5bf9\u5e94\u7684\u5b57\u7b26 \u200d \u200d \u200d ord(x) \u5b57\u7b26\u5bf9\u5e94\u7684\u6570 \u200d \u200d \u200d hex(x)/oct(x) \u5bf9\u5e94\u7684\u7684\u5341\u516d/\u516b\u8fdb\u5236\u5b57\u7b26\u4e32 id(x) \u83b7\u53d6\u5730\u5740 \u200d \u200d \u200d len() \u200d \u200d \u200d abs(x) \u200d \u200d \u200d divmod(x,y) \u5546,\u4f59\u6570 \u200d \u200d \u200d pow(x,y) sorted(\u5bf9\u8c61,cmp,key,reverse=False) sum(\u5e8f,start=0) \u5143\u7d20\u76f8\u52a0\u518d\u52a0start,\u4e0d\u80fd\u7528\u4e8e\u4e32 sum([1,2],[3,4],[]) all(\u5e8f) \u5747True\u624dTrue all([]) True \u200d \u200d \u200d \u200d any(\u5e8f) \u6709True\u5c31True max(\u591a\u4e2a\u5143\u7d20\u6216\u5e8f,key\u51fd\u6570(\u53ef\u65e0)) min round(x,y\u9ed8\u8ba4\u4e3a0)x\u56db\u820d\u4e94\u5165,\u4fdd\u7559y\u4f4d\u5c0f\u6570 \u200d \u200d bin(x) \u8fd4\u56de\u4e8c\u8fdb\u5236\u8868\u793a\u4e32 isinstance(x,y) \u5224\u65adx\u662f\u5426\u662fy\u7684\u540c\u7c7b\u6216\u5b50\u7c7b issubclass(x,y) \u662f\u5426\u662f\u5b50\u7c7b supper() \u8c03\u7528\u7236\u7c7b\u5c5e\u6027\u200d \u200d \u200d exec(\u4e32) \u6267\u884c\u8bed\u53e5 \u200d \u200d \u200d dir(\u540d) \u200d \u200d \u200d reload(\u6a21\u677f) \u91cd\u65b0\u5bfc\u5165\u51fd\u6570","title":"\u5185\u7f6e\u51fd\u6570"},{"location":"python/#_3","text":"","title":"\u9700\u5bfc\u5165\u6a21\u5757\u7684\u51fd\u6570"},{"location":"python/#import-math-float","text":"math. \u200d fabs(x) \u200d \u200d ceil(x) \u4e0a\u6574\u6570 \u200d \u200d floor(x) (\u4e0b\u6574\u6570) \u200d exp(x) e^x^ \u200d \u200d log(x,y\u9ed8\u8ba4\u4e3ae) log~y~x modf(x) \u8fd4\u56de\u5c0f\u6570\u548c\u6574\u6570\u90e8\u5206 \u200d sqrt(x) pi e sin(a) \u200d cos(a) \u200d tan(a) \u200d asin(a) \u200d acos(a) \u200d atan(a) \u200d atan2(y,x) \u200d","title":"import math &zwj; &zwj; &zwj; (float\u578b)"},{"location":"python/#import-random","text":"random. choice(\u5e8f) \u968f\u673a\u4e00\u5143\u7d20 \u200d randomrange() \u968f\u673a\u4e00\u5143\u7d20 random() \u968f\u673a[0,1)\u7684\u5b9e\u6570 \u200d uniform(x,y) \u968f\u673a[x,y]\u7684\u5b9e\u6570 \u200d shuffle(\u5e8f) \u968f\u673a\u6392\u5e8f,\u4e0d\u8fd4\u56de \u200d","title":"import random"},{"location":"python/#import-time","text":"time.localtime(time.time() ^1 )[0]\u5e74[1]\u6708[2]\u65e5[3]\u65f6[4]\u5206[5]\u79d2[6]\u4e00\u5468\u7b2c\u51e0\u5929[7]\u4e00\u5e74\u7b2c\u51e0\u5929 time.asctime() \u683c\u5f0f\u5316","title":"import time"},{"location":"python/#from-datetime-import-time","text":"d= date(\u5e74,\u6708,\u65e5) \u6216 date.today() \u53ef\u7528 d.year/month/day \u200d \u53efd2-d1\u5dee\u591a\u5c11\u5929 d.strftime(\"...\") %Y\u5e74 \u200d \u200d \u200d %m\u6708%b\u7b80\u6708\u540d%B\u5168\u6708\u540d \u200d \u200d \u200d %d\u6708\u4e2d\u7684\u5929%j\u5e74\u4e2d\u7684\u5929 %H\u65f6 \u200d \u200d \u200d %M\u5206 \u200d \u200d \u200d %S\u79d2 \u200d \u200d \u200d %a\u7b80\u661f\u671f\u540d%A\u5168\u661f\u671f\u540d%w\u661f\u671f(0~6)","title":"from datetime import time"},{"location":"python/#import-calendar","text":"calendar. calendar(\u5e74) month(\u5e74,\u6708) isleap(\u5e74)","title":"import calendar"},{"location":"python/#_4","text":"\u5c01\u95ed l=[...] \u7528l[i] \u4e0b\u68070~len(l)-1 \u53ef+ * in not in(\u5224\u65ad\u5355\u72ec\u5143\u7d20) \u5207\u7247 \u5143\u7d20\u4e3a\u4efb\u4f55\u4e1c\u897f \u76f4\u63a5\u4f20\u5165\u51fd\u6570,\u53ef\u6539 \u53ef\u8d4b\u7ed9\u5bf9\u5e94\u4e2a\u6570\u7684\u540d l=[[1,2],[3,4]] l[1][1]\u4e3a4 [f(x) for x in \u5e8f (if ...)] \u65b0\u5217\u8868 l.append(x) \u672b\u52a0 \u200d \u200d \u200d l.insert(\u7d22\u5f15,x) \u200d \u200d \u200d l.extend(\u5e8f) \u672b\u52a0 l.pop(index\u9ed8\u8ba4\u4e3a-1) \u79fb\u9664l[index]\u5e76\u8fd4\u56de \u200d \u200d \u200d l.remove(x) l.count(x) \u200d \u200d \u200d l.index(x) l.sort(cmp,key,reverse=False) False\u5347True\u964d cmp\u65b9\u6cd5 key\u7528\u4e8e\u6bd4\u8f83\u7684\u4e00\u4e2a\u53c2\u6570 l.reverse() \u53cd\u5411 \u200d \u200d \u200d l.[n:]=[] \u5220\u9664 \u5207\u7247 l[:y]\u8868\u793a[l[0],...l[y-1]] l[x:y] l[x:] l[:] [\u521d:\u672b:\u6b65\u957f\u9ed8\u8ba4\u4e3a1] s=[1,2] t=[3,4] s[0:0]=t s->3 4 1 2;s[3:]=t s->1 2 3 4 t[1]=5\u4e0d\u6539 (\u5bf9\u5217\u8868\u6574\u4f53\u6539\u52a8\u5219\u6539\u503c)","title":"\u5217\u8868"},{"location":"python/#_5","text":"s='...'\u6216\"...\"(\u91cc\u53ef\u6709'') \u7528s[i] \u4e0b\u68070\\~len(s)-1\u3001-len(s)\\~-1 \u53ef+ * in \u5207\u7247 print(' '*6+str(6)) \u53ef'...' in '......' s.upper() s.lower() s.swapcase() \u4e0d\u6539s s.count(str,beg=0,end=len(s)) [ ) s.find(str,beg=0,end=len(s)) \u5426\u5219-1 s.replace(s1,s2,n\u9ed8\u8ba4s1\u51fa\u73b0\u6b21\u6570) \u66ff\u6362\u81f3\u591an\u6b21","title":"\u5b57\u7b26\u4e32"},{"location":"python/#_6","text":"d={\u952e:\u503c,...} d[\u952e]\u627e\u503c d[\u65b0\u952e]=\u503c\u76f4\u63a5\u589e\u52a0 in \u67e5\u952e\u662f\u5426\u5b58\u5728 \u53efsum(\u952e) for list \u952e\u4e0d\u80fd\u4e3a1\u5217\u8868\u3001\u5b57\u5178(\u6216\u542b\u6709),\u503c\u53ef\u4e3a\u591a\u79cd\u4e1c\u897f \u540e\u952e\u4f1a\u8986\u76d6\u524d\u540c\u540d\u952e list(d) \u952e\u7684\u5e8f d.keys() d.values() d.items() d.pop(\u952e) {f(x):g(x) for x in \u5e8f (if ...)} \u65b0\u5b57\u5178 \u4f8b: {k:[v for v in values if match(k,v)] for k in keys}","title":"\u5b57\u5178"},{"location":"python/#_7","text":"\u4e0d\u53ef\u6539 t=(,...)\u6216,... \u4e0b\u68070~len-1 \u5217\u8868\u4f5c\u4e3a\u5143\u7d20,\u53ef\u6539\u5217\u8868\u5185\u5bb9 \u4e0d\u5f71\u54cd\u5143\u7ec4 \u53ef+ * in \u5207\u7247 for","title":"\u5143\u7ec4"},{"location":"python/#_8","text":"\u53ef\u7528next\u3001for li=iter(l)\u8fd4\u56de\u8fed\u4ee3\u5668,\u6807\u8bb0\u7b2c\u4e00\u4f4d next(i)\u8fd4\u56de\u5f53\u524d\u5143\u7d20,\u6807\u8bb0\u540e\u79fb\u4e00\u4f4d di=iter(d\u6216d.keys()) \u200d \u200d \u200d di=iter(d.values()) \u200d \u200d \u200d di=iter(d.items()) next(di)\u4e3a(\u952e,\u503c) \u6539d\u5f62\u72b6\u3001\u5927\u5c0f\u540e\u5df2\u751f\u6210\u7684\u8fed\u4ee3\u5668\u5931\u6548 ri=iter(r) \u200d \u200d \u200d for x in i (\u904d\u5386\u5143\u7d20\u81f3\u672b\u5c3e) \u8fd4\u56de\u8fed\u4ee3\u5668,next\u4ea7\u751f\u6548\u679c: map(\u51fd\u6570,\u53ef\u8fed\u4ee3\u5bf9\u8c61) \u5c06\u51fd\u6570\u7528\u4e8e\u5143\u7d20(\u4e0d\u6539\u503c) filter(\u51fd\u6570,\u53ef\u8fed\u4ee3\u5bf9\u8c61) \u51fd\u6570\u503c\u771f\u5219\u904d\u5386\u5143\u7d20,\u5047\u5219\u53ea\u79fb\u4f4d zip(\u5bf9\u8c611,\u5bf9\u8c612,...) \u53ef\u904d\u5386\u540c\u7d22\u5f15\u7684(x,y...)\u5143\u7ec4,\u53d6\u51b3\u4e8e\u66f4\u77ed\u7684 reversed(\u5bf9\u8c61) \u53cd\u5411\u904d\u5386 list(i) tuple(i) sorted(i) \u8fd4\u56de\u6392\u5e8f\u540e\u7684 \u5747\u4f1a\u79fb\u81f3\u672b\u5c3e \u4f8b: mi=map(\u51fd\u65701,\u8303\u56f4) fi=filter(\u51fd\u65702,mi) \u5148\u5e94\u7528\u518d\u8fc7\u6ee4 all(a==b for a,b in zip(s,reversed(s)))","title":"\u8fed\u4ee3\u5668(\u60f0\u6027)"},{"location":"python/#_9","text":"\u7279\u6b8a\u7684\u8fed\u4ee3\u5668 yield(\u51fd\u6570\u91cc\u4ea7\u751f\u503c) yield from \u5bf9\u8c61(\u904d\u5386\u4ea7\u751f) i=\u51fd\u6570() next(i)\u53ef\u904d\u5386\u4ea7\u751f\u7684\u503c list(\u51fd\u6570())\u5217\u51fa\u6240\u6709\u4ea7\u751f\u7684\u503c \u4f8b:part(n,m) if n>0 and m>0: if n==m:yield str(m) for p in part(n-m,m):yield p+'+'+str(m) yield from part(n,m-1)","title":"\u751f\u6210\u5668"},{"location":"python/#_10","text":".\u8bbf\u95ee\u5c5e\u6027 \u7c7b->\u65b9\u6cd5(\u5bf9\u8c61+\u51fd\u6570,\u4e5f\u662f\u5c5e\u6027) \u52a0\u3001\u4e58 \u8d4b\u503c\u67e5\u627e class \u7c7b\u540d:def __init__(self,aholder):self.balance,self.holder=0,aholder (\u6784\u9020\u65b9\u6cd5) def deposit(self,amount):self.balance+=balance return self.balance (\u53ef\u8f93\u51fa,\u65e0\u4e5f\u4ecd\u7136\u6539\u503c) \u7c7b\u5c5e\u6027=... self<-a=\u7c7b\u540d(\u540d)\u540c\u65f6\u81ea\u52a8\u8c03\u7528__init__ \u53ef\u7528a.balance a.holder a.\u65b0\u5c5e\u6027=...\u76f4\u63a5\u521b\u9020 \u5b9e\u4f8b\u5c5e\u6027\u4f18\u5148\u4e8e\u7c7b\u5c5e\u6027 \u200d \u200d \u200d \u6709\u7c7b.b,\u5b9e\u4f8b.b\u5b9e\u5219\u4e3a\u6dfb\u52a0\u5b9e\u4f8b\u5c5e\u6027 \u5bf9\u8c61.\u5b9e\u4f8b\u5c5e\u6027(\u6539\u503c\u4e0d\u5f71\u54cd\u7c7b) \u7c7b.\u7c7b\u5c5e\u6027(\u6539\u503c\u4f1a\u540c\u6b65\u5230\u5bf9\u8c61) getAdder(\u5bf9\u8c61)->\u5c5e\u6027 getadder(\u5bf9\u8c61,\u5c5e\u6027) hasattr(\u5bf9\u8c61,\u5c5e\u6027)\u662f\u5426\u6709 a.deposit(6)\u53ef\u8d4b\u7ed9 \u53efi=map(a.deposit,range(6,66))\u3001next(i) \u7c7b.\u65b9\u6cd5(\u5bf9\u8c61(\u53efself),...)\u5373\u5bf9\u8c61.\u65b9\u6cd5(...) \u7ee7\u627f class \u5b50\u7c7b(\u57fa\u7c7b):(\u5b50\u7c7b\u7ee7\u627f\u57fa\u7c7b)\u53ef\u66f4\u6539 \u591a\u91cd\u7ee7\u627f, ,... \u4f8b:class chAccount(Account):interest=0.006 withdraw_fee=1 def withdraw(self,amount) return Account.wihtdraw(self.amount+self.withdraw_fee) \u4e00\u5c5e\u6027\u5728\u5b50\u7c7b\u6709,\u5219\u7528,\u5426\u5219\u5728\u57fa\u7c7b\u4e2d\u67e5\u627e\u3001\u6267\u884c \u7ec4\u5408 :\u5c06\u53e6\u4e00\u4e2a\u5bf9\u8c61\u4f5c\u4e3a\u5c5e\u6027 class Bank:def __init__(self):self.accounts=[] def open_account(self,holder,amount,kind=Account): account=kind(holder);account_deposit(amount);self.accounts.append(account) return account def pay_interest(self):for a in self.accounts:a.deposit(a.balance=a.intereat)","title":"\u7c7b"},{"location":"python/#_11","text":"class Link:empty=() def __init__(self,value,rest=empty):self.value,self.rest=value,rest \u521b\u5efa:Link(6,Link(7,Link(8))) def rLink(sta,end):if sta>=end: return Link.empty else: return Link(sta,range_Link(sta+1,end)) def map_Link(f,s):if s is Link.empty:return s else return Link(f(s.value,map_Link(f,s.rest))) def filter_Link(f,s):if s is Link.empty:return s fil_rest=filter_Link(f,s.rest) if f(s.value):return Link(s.value,filter) else return fil_rest \u524d\u63a5:s.value,s.rest=v,Link(s.value,s.rest) s=Link(v,s) \u540e\u63a5:s.rest=Link(v)","title":"\u94fe\u8868"},{"location":"python/#_12","text":"\u540c\u7ea7\u76ee\u5f55\u4e0b \u540d1\u4e0b\u6709__init__.py \u53051 \u53052 \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u540d2 from \u540d1.\u53051 import \u53051 \u6587\u4ef6: fp=open(\u540d,mode=\"r\") mode: t\u6587\u672c x\u53ea\u65b0\u5efa,\u5199 b\u4e8c\u8fdb\u5236 +\u6253\u5f00\u8bfb\u5199 r\u6253\u5f00\u53ea\u8bfb r+\u6253\u5f00\u8bfb\u5199 w\u6e05\u7a7a\u6216\u521b\u5efa, \u53ea\u5199 w+\u6e05\u7a7a\u6216\u521b\u5efa,\u8bfb\u5199 a\u8ffd\u52a0\u6216\u521b\u5efa,\u8bfb\u5199 fp.closed\u5df2\u5173\u95ed\u624dTrue fp.mode fp.name \u200d \u200d \u200d fp.close() fp.read (\u5b57\u8282\u6570)\u9ed8\u8ba4\u5168\u90e8 \u200d \u200d \u200d fp.write(\u4e32) \u200d \u200d \u200d fp.tell() \u200d \u200d \u200d fp.seek(\u504f\u79fb\u91cf,0/1/2) \u8be5\u4f4d\u7f6e import os os.name(\u5df2\u5b58\u5728\u6587\u4ef6\u540d,\u65b0\u540d) os.remove(\u6587\u4ef6\u540d) fp.flush() \u7f13\u51b2\u533a\u5199\u5165\u6587\u4ef6 fp.next() \u8fd4\u56de\u4e0b\u884c fp.readline(s,\u5168\u90e8) ()\u8bfb\u6574\u884c,\u5305\u62ec'\\n' \u200d \u200d \u200d fp.writeline(s,\u4e32\u5217\u8868) \u8981\u6362\u884c\u52a0'\\n' \u200d \u200d \u200d execfile(\u6587\u4ef6\u540d) \u6267\u884c ### Expasion data abstracion \u6709\u7406\u6570n/d from fractions import gcd \u7528 gcd(n,d) \u6811 def tree(label,branches=[]:return [label]+list(branches)) label(tree):return tree[0] branches(tree):return tree[1:] is_leaf(tree):return not branches(tree) count_leaves(t):if is_leaf(t):return 1 else return sum([count_leaves(b) for b in branches(t)]) class Tree:def __init__(self,label,branches=[]):self.label,self.branches=label,list(branches)","title":"\u6587\u4ef6"},{"location":"python/#memoizatin","text":"def memo(f):cache={} def memorized(n): if n not in cache:cache[n]=f(n) return memorized fib=memo(fib) from fractions import Fraction half=Fraction(1,2) repr(half)->'Fraction(1,2)' str(half)->'1/2' print(half)->1/2 eval(repr(half))->Fraction(1,2) \u591a\u6001\u51fd\u6570:\u9002\u7528\u4e8e\u4e0d\u540c\u6570\u636e\u7c7b\u578b \u63a5\u53e3:\u5171\u4eab\u7684\u6d88\u606f\u548c\u89c4\u8303(\u76f8\u540c\u7684\u65b9\u6cd5) \u65b9\u6cd5: __str__ __repr__ __add__(\u5de6\u52a0\u53f3\uff09\u3001__radd__(\u53f3\u52a0\u5de6)\u5373+ __bool__ __float__ if n < 0: return [] if n == 0: sums_to_zero = [] # The only way to sum to zero using positives return [sums_to_zero] # Return a list of all the ways to sum to zero result = [] for k in range(1, m + 1): result = result + [[k] + rest for rest in sums(n-k, m) if rest == [] or rest[0] != k] return result Tips: \u907f\u514d\u91cd\u590d,\u8fd4\u56de\u503c\u4f5c\u53f3\u503c def max_product(s) if s == []: # empty set return 1 elif len(s) == 1: # single element return s[0] else: return max(s[0]*max_product(s[2:]),max_product(s[1:]))","title":"Memoizatin"},{"location":"terminal/","text":".\u5f53\u524d ..\u4e0a\u4e00\u7ea7 \u5355\u5b57\u6bcd\u53c2\u6570\u53ef\u5408\u5e76 /\u5206\u9694 + chsh -s/bin/zsh \u8f6c\u7528zsh + cd \u8def\u5f84(\u53ef\u62d6) \u5355\u7528\u56de\u6839\u76ee\u5f55 + pwd (\u663e\u793a\u5f53\u524d\u7edd\u5bf9\u8def\u5f84) + man \u547d\u4ee4\u540d (q\u9000\u51fa) + date cal + time \u547d\u4ee4 (\u6d4b\u6267\u884c\u65f6\u95f4) + mkdir \u76ee\u5f55\u540d \u200d (\u521b\u76ee\u5f55) + rmdir \u76ee\u5f55\u540d \u200d (\u5220\u76ee\u5f55) + touch \u6587\u4ef6\u540d \u200d (\u53ef\u521b\u591a\u4e2a\u6587\u4ef6) + rm \u200d \u200d \u200d \u200d \u200d \u6587\u4ef6\u540d \u200d \u200d(\u5220\u6587\u4ef6) \u200d -r\u9012\u5f52\u5220 -f\u5f3a\u5236 sudo rm which\u627e\u5230\u7684\u8def\u5f84 + open \u200d \u540d\u200d \u200d (\u6253\u5f00) + chflags hidden \u540d \u200d \u200d \u200d \u200d (\u9690\u85cf) + chflags nohidden \u540d\u200d (\u4e0d\u9690\u85cf) + ls \u5217\u51fa\u5f53\u524d\u4e0b\u7684\u6587\u4ef6 -l\u8be6\u7ec6 -a\u5305\u62ec.\u5f00\u5934\u7684\u9690\u85cf\u6587\u4ef6(-A\u65e0.\u548c..\u6587\u4ef6) -R\u53ca\u5176\u5b50\u6587\u4ef6 \u53ef\u518d\u52a0\u76ee\u5f55\u540d + head/tail -n \u6570 \u6587\u4ef6\u540d (\u8f93\u51fa\u5934/\u5c3e\u6307\u5b9a\u884c\u6570) + cp \u6587\u4ef6\u540d1 \u6587\u4ef6\u540d2 (\u524d\u590d\u5236\u5230\u540e) -r\u9012\u5f52\u590d\u5236\u76ee\u5f55 + cat \u6587\u4ef6\u540d (\u8f93\u51fa,\u53ef\u591a\u4e2a) -n\u4ece1\u5f00\u59cb\u7f16\u53f7 -b\u7a7a\u767d\u884c\u4e0d\u7f16\u53f7 + less \u6587\u4ef6\u540d (\u5206\u9875\u67e5\u770b\u6587\u4ef6) + hexdump -n \u6570 \u6587\u4ef6\u540d (\u5341\u516d\u8fdb\u5236\u8f93\u51fa\u6307\u5b9a\u4e2a\u6570\u7684\u5b57\u8282) + clear\u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d (\u6e05\u5c4f) + find \u200d \u8def\u5f84 \u200d -name \u200d '*.\u6269\u5c55\u540d' + which \u547d\u4ee4 \u200d (\u67e5\u4f4d\u7f6e) + echo ... \u200d \u200d \u200d \u200d \u200d \u200d \u200d (\u8f93\u51fa\u5185\u5bb9) \u53efecho $[\u7b97\u5f0f] + mv \u540d1 \u540d2 \u200d (\u5185\u5bb9/\u6574\u4f53\u79fb\u5230\u6700\u540e\u4e00\u4e2a\u6216\u6539\u540d) + gcc \u539f\u540d -g -o \u53ef\u6267\u884c\u6587\u4ef6\u540d + whoami\u200d \u200d \u200d \u200d \u200d \u200d \u200d (\u83b7\u53d6\u5f53\u524d\u7528\u6237\u540d) + chmod \u200d \u200d \u200d \u200d \u200d \u200d \u200d (\u6539\u6587\u4ef6\u6743\u9650) + grep \u5185\u5bb9 \u6587\u4ef6\u540d \u200d \u200d (\u641c\u7d22\u5185\u5bb9) + ps (\u663e\u793a\u8fdb\u7a0b\u4fe1\u606f) + diff \u6587\u4ef6\u540d1 \u6587\u4ef6\u540d2 (\u6bd4\u8f83) + source \u7acb\u5373\u52a0\u8f7d + curl \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d (\u53d1\u9001HTTP\u8bf7\u6c42) + env \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d \u200d (\u67e5\u770b\u6240\u6709\u73af\u5883\u53d8\u91cf) echo \u5185\u5bb9 cat \u6587\u4ef6 > \u6587\u4ef6 stdout\u91cd\u5b9a\u5411\u5230\u6587\u4ef6 < \u6587\u4ef6 \u6587\u4ef6\u91cd\u5b9a\u5411\u5230stdin \u53ef\u7f16\u8bd1\u540e\u6587\u4ef6 < \u6587\u4ef6(\u4f5c\u4e3a\u8f93\u5165) 2> \u6587\u4ef6 stderr\u91cd\u5b9a\u5411\u5230\u6587\u4ef6 (\u7acb\u5373\u8f93\u51fa\u5185\u5bb9,\u6587\u4ef6\u53d8\u7a7a) &> \u6587\u4ef6 \u8986\u76d6,stdout\u3001stderr >> \u6587\u4ef6 \u8ffd\u52a0,-n\u6362\u884c\u8ffd\u52a0 \u4f8b:cat file1 file2 > file3 diff file1 file2 > file3 ls > file1 \u7ba1\u9053: \u547d\u4ee4\u8f93\u51fa\u8f93\u5165\u5230\u547d\u4ee4 ls | head ls | grep \u5185\u5bb9 export \u53d8\u91cf=\u503c unset \u53d8\u91cf vim Normal,i\u5207\u6362\u4e3aInsert,esc\u6362\u4e3aNormal,:\u5207\u6362\u4e3aCommand(w\u5199\u5165,q\u9000\u51fa),Vision\u9009\u6587\u672c","title":"Terminal"}]}